

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 07 18:47:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1768
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text40,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text43,local,class=CODE,merge=1,delta=2
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	text50,local,class=CODE,merge=1,delta=2
    66                           	psect	text51,local,class=CODE,merge=1,delta=2
    67                           	psect	text52,local,class=CODE,merge=1,delta=2
    68                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text56,local,class=CODE,merge=1,delta=2
    72                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text60,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1768 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  0110                     	;# 
   170  0111                     	;# 
   171  0112                     	;# 
   172  0113                     	;# 
   173  0114                     	;# 
   174  0115                     	;# 
   175  0116                     	;# 
   176  0117                     	;# 
   177  0118                     	;# 
   178  0119                     	;# 
   179  011A                     	;# 
   180  011B                     	;# 
   181  011C                     	;# 
   182  011D                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  018E                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0194                     	;# 
   194  0195                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0199                     	;# 
   198  0199                     	;# 
   199  0199                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019A                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019D                     	;# 
   212  019D                     	;# 
   213  019D                     	;# 
   214  019E                     	;# 
   215  019E                     	;# 
   216  019E                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  020C                     	;# 
   223  020D                     	;# 
   224  020E                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0214                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0216                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0217                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  028C                     	;# 
   245  028D                     	;# 
   246  028E                     	;# 
   247  0291                     	;# 
   248  0291                     	;# 
   249  0292                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  029A                     	;# 
   256  029B                     	;# 
   257  029E                     	;# 
   258  030C                     	;# 
   259  030D                     	;# 
   260  030E                     	;# 
   261  031B                     	;# 
   262  031C                     	;# 
   263  031D                     	;# 
   264  031E                     	;# 
   265  031F                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  0391                     	;# 
   270  0392                     	;# 
   271  0393                     	;# 
   272  0394                     	;# 
   273  0395                     	;# 
   274  0396                     	;# 
   275  0397                     	;# 
   276  0398                     	;# 
   277  0399                     	;# 
   278  039B                     	;# 
   279  039C                     	;# 
   280  039D                     	;# 
   281  039E                     	;# 
   282  039F                     	;# 
   283  040E                     	;# 
   284  0413                     	;# 
   285  0413                     	;# 
   286  0414                     	;# 
   287  0414                     	;# 
   288  0415                     	;# 
   289  0416                     	;# 
   290  0417                     	;# 
   291  0418                     	;# 
   292  041A                     	;# 
   293  041A                     	;# 
   294  041B                     	;# 
   295  041B                     	;# 
   296  041C                     	;# 
   297  041D                     	;# 
   298  041E                     	;# 
   299  041F                     	;# 
   300  0493                     	;# 
   301  0493                     	;# 
   302  0494                     	;# 
   303  0495                     	;# 
   304  0496                     	;# 
   305  049A                     	;# 
   306  049A                     	;# 
   307  049B                     	;# 
   308  049C                     	;# 
   309  049D                     	;# 
   310  050F                     	;# 
   311  0510                     	;# 
   312  0511                     	;# 
   313  0512                     	;# 
   314  0513                     	;# 
   315  0514                     	;# 
   316  0515                     	;# 
   317  0516                     	;# 
   318  0590                     	;# 
   319  0591                     	;# 
   320  0592                     	;# 
   321  0592                     	;# 
   322  0592                     	;# 
   323  0593                     	;# 
   324  0593                     	;# 
   325  0594                     	;# 
   326  0595                     	;# 
   327  0595                     	;# 
   328  0595                     	;# 
   329  0596                     	;# 
   330  0596                     	;# 
   331  0597                     	;# 
   332  0598                     	;# 
   333  0598                     	;# 
   334  0599                     	;# 
   335  059A                     	;# 
   336  059A                     	;# 
   337  0617                     	;# 
   338  0617                     	;# 
   339  0618                     	;# 
   340  0619                     	;# 
   341  061A                     	;# 
   342  061A                     	;# 
   343  061B                     	;# 
   344  061C                     	;# 
   345  068D                     	;# 
   346  068E                     	;# 
   347  068F                     	;# 
   348  0690                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  0695                     	;# 
   354  0696                     	;# 
   355  0697                     	;# 
   356  0698                     	;# 
   357  0699                     	;# 
   358  069A                     	;# 
   359  069B                     	;# 
   360  069C                     	;# 
   361  069D                     	;# 
   362  069E                     	;# 
   363  069F                     	;# 
   364  070D                     	;# 
   365  070E                     	;# 
   366  070F                     	;# 
   367  0710                     	;# 
   368  0711                     	;# 
   369  0712                     	;# 
   370  0713                     	;# 
   371  0714                     	;# 
   372  0715                     	;# 
   373  0716                     	;# 
   374  0717                     	;# 
   375  0718                     	;# 
   376  0719                     	;# 
   377  071A                     	;# 
   378  071B                     	;# 
   379  071C                     	;# 
   380  071D                     	;# 
   381  071E                     	;# 
   382  071F                     	;# 
   383  0794                     	;# 
   384  0795                     	;# 
   385  0796                     	;# 
   386  0797                     	;# 
   387  0798                     	;# 
   388  0799                     	;# 
   389  079A                     	;# 
   390  079B                     	;# 
   391  079C                     	;# 
   392  079D                     	;# 
   393  079E                     	;# 
   394  079F                     	;# 
   395  0D8E                     	;# 
   396  0D8F                     	;# 
   397  0D90                     	;# 
   398  0D91                     	;# 
   399  0D91                     	;# 
   400  0D92                     	;# 
   401  0D93                     	;# 
   402  0D93                     	;# 
   403  0D94                     	;# 
   404  0D95                     	;# 
   405  0D95                     	;# 
   406  0D96                     	;# 
   407  0D97                     	;# 
   408  0D97                     	;# 
   409  0D98                     	;# 
   410  0D99                     	;# 
   411  0D99                     	;# 
   412  0D9A                     	;# 
   413  0D9B                     	;# 
   414  0D9C                     	;# 
   415  0D9C                     	;# 
   416  0D9D                     	;# 
   417  0D9D                     	;# 
   418  0D9E                     	;# 
   419  0D9F                     	;# 
   420  0DA0                     	;# 
   421  0DA1                     	;# 
   422  0DA1                     	;# 
   423  0DA2                     	;# 
   424  0DA3                     	;# 
   425  0DA3                     	;# 
   426  0DA4                     	;# 
   427  0DA5                     	;# 
   428  0DA5                     	;# 
   429  0DA6                     	;# 
   430  0DA7                     	;# 
   431  0DA7                     	;# 
   432  0DA8                     	;# 
   433  0DA9                     	;# 
   434  0DA9                     	;# 
   435  0DAA                     	;# 
   436  0DAB                     	;# 
   437  0DAC                     	;# 
   438  0DAC                     	;# 
   439  0DAD                     	;# 
   440  0DAD                     	;# 
   441  0DAE                     	;# 
   442  0DAF                     	;# 
   443  0DB0                     	;# 
   444  0E0F                     	;# 
   445  0E10                     	;# 
   446  0E11                     	;# 
   447  0E12                     	;# 
   448  0E13                     	;# 
   449  0E14                     	;# 
   450  0E15                     	;# 
   451  0E16                     	;# 
   452  0E17                     	;# 
   453  0E19                     	;# 
   454  0E19                     	;# 
   455  0E19                     	;# 
   456  0E1A                     	;# 
   457  0E1B                     	;# 
   458  0E1C                     	;# 
   459  0E1C                     	;# 
   460  0E1C                     	;# 
   461  0E1D                     	;# 
   462  0E1E                     	;# 
   463  0E1F                     	;# 
   464  0E1F                     	;# 
   465  0E1F                     	;# 
   466  0E20                     	;# 
   467  0E21                     	;# 
   468  0E22                     	;# 
   469  0E24                     	;# 
   470  0E25                     	;# 
   471  0E28                     	;# 
   472  0E29                     	;# 
   473  0E2A                     	;# 
   474  0E2B                     	;# 
   475  0E2C                     	;# 
   476  0E2D                     	;# 
   477  0E2E                     	;# 
   478  0E2F                     	;# 
   479  0E30                     	;# 
   480  0E31                     	;# 
   481  0E32                     	;# 
   482  0E33                     	;# 
   483  0E34                     	;# 
   484  0E35                     	;# 
   485  0E90                     	;# 
   486  0E91                     	;# 
   487  0E92                     	;# 
   488  0E94                     	;# 
   489  0E95                     	;# 
   490  0E9C                     	;# 
   491  0E9D                     	;# 
   492  0E9E                     	;# 
   493  0E9F                     	;# 
   494  0EA0                     	;# 
   495  0EA1                     	;# 
   496  0EA2                     	;# 
   497  0EA3                     	;# 
   498  0EA4                     	;# 
   499  0EA5                     	;# 
   500  0EA6                     	;# 
   501  0EA7                     	;# 
   502  0F0F                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F28                     	;# 
   528  0F29                     	;# 
   529  0F2A                     	;# 
   530  0F2B                     	;# 
   531  0F2C                     	;# 
   532  0F2D                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  000E                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0016                     	;# 
   566  0017                     	;# 
   567  0018                     	;# 
   568  0019                     	;# 
   569  001A                     	;# 
   570  001A                     	;# 
   571  001B                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  001D                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  008E                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  009F                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  010E                     	;# 
   599  010F                     	;# 
   600  0110                     	;# 
   601  0111                     	;# 
   602  0112                     	;# 
   603  0113                     	;# 
   604  0114                     	;# 
   605  0115                     	;# 
   606  0116                     	;# 
   607  0117                     	;# 
   608  0118                     	;# 
   609  0119                     	;# 
   610  011A                     	;# 
   611  011B                     	;# 
   612  011C                     	;# 
   613  011D                     	;# 
   614  011E                     	;# 
   615  011F                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618  018E                     	;# 
   619  0191                     	;# 
   620  0191                     	;# 
   621  0192                     	;# 
   622  0193                     	;# 
   623  0193                     	;# 
   624  0194                     	;# 
   625  0195                     	;# 
   626  0196                     	;# 
   627  0197                     	;# 
   628  0199                     	;# 
   629  0199                     	;# 
   630  0199                     	;# 
   631  019A                     	;# 
   632  019A                     	;# 
   633  019A                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019C                     	;# 
   640  019C                     	;# 
   641  019C                     	;# 
   642  019D                     	;# 
   643  019D                     	;# 
   644  019D                     	;# 
   645  019E                     	;# 
   646  019E                     	;# 
   647  019E                     	;# 
   648  019F                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  020C                     	;# 
   654  020D                     	;# 
   655  020E                     	;# 
   656  0211                     	;# 
   657  0211                     	;# 
   658  0212                     	;# 
   659  0212                     	;# 
   660  0213                     	;# 
   661  0213                     	;# 
   662  0214                     	;# 
   663  0214                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  021D                     	;# 
   673  021E                     	;# 
   674  021F                     	;# 
   675  028C                     	;# 
   676  028D                     	;# 
   677  028E                     	;# 
   678  0291                     	;# 
   679  0291                     	;# 
   680  0292                     	;# 
   681  0293                     	;# 
   682  0294                     	;# 
   683  0298                     	;# 
   684  0298                     	;# 
   685  0299                     	;# 
   686  029A                     	;# 
   687  029B                     	;# 
   688  029E                     	;# 
   689  030C                     	;# 
   690  030D                     	;# 
   691  030E                     	;# 
   692  031B                     	;# 
   693  031C                     	;# 
   694  031D                     	;# 
   695  031E                     	;# 
   696  031F                     	;# 
   697  038C                     	;# 
   698  038D                     	;# 
   699  038E                     	;# 
   700  0391                     	;# 
   701  0392                     	;# 
   702  0393                     	;# 
   703  0394                     	;# 
   704  0395                     	;# 
   705  0396                     	;# 
   706  0397                     	;# 
   707  0398                     	;# 
   708  0399                     	;# 
   709  039B                     	;# 
   710  039C                     	;# 
   711  039D                     	;# 
   712  039E                     	;# 
   713  039F                     	;# 
   714  040E                     	;# 
   715  0413                     	;# 
   716  0413                     	;# 
   717  0414                     	;# 
   718  0414                     	;# 
   719  0415                     	;# 
   720  0416                     	;# 
   721  0417                     	;# 
   722  0418                     	;# 
   723  041A                     	;# 
   724  041A                     	;# 
   725  041B                     	;# 
   726  041B                     	;# 
   727  041C                     	;# 
   728  041D                     	;# 
   729  041E                     	;# 
   730  041F                     	;# 
   731  0493                     	;# 
   732  0493                     	;# 
   733  0494                     	;# 
   734  0495                     	;# 
   735  0496                     	;# 
   736  049A                     	;# 
   737  049A                     	;# 
   738  049B                     	;# 
   739  049C                     	;# 
   740  049D                     	;# 
   741  050F                     	;# 
   742  0510                     	;# 
   743  0511                     	;# 
   744  0512                     	;# 
   745  0513                     	;# 
   746  0514                     	;# 
   747  0515                     	;# 
   748  0516                     	;# 
   749  0590                     	;# 
   750  0591                     	;# 
   751  0592                     	;# 
   752  0592                     	;# 
   753  0592                     	;# 
   754  0593                     	;# 
   755  0593                     	;# 
   756  0594                     	;# 
   757  0595                     	;# 
   758  0595                     	;# 
   759  0595                     	;# 
   760  0596                     	;# 
   761  0596                     	;# 
   762  0597                     	;# 
   763  0598                     	;# 
   764  0598                     	;# 
   765  0599                     	;# 
   766  059A                     	;# 
   767  059A                     	;# 
   768  0617                     	;# 
   769  0617                     	;# 
   770  0618                     	;# 
   771  0619                     	;# 
   772  061A                     	;# 
   773  061A                     	;# 
   774  061B                     	;# 
   775  061C                     	;# 
   776  068D                     	;# 
   777  068E                     	;# 
   778  068F                     	;# 
   779  0690                     	;# 
   780  0691                     	;# 
   781  0692                     	;# 
   782  0693                     	;# 
   783  0694                     	;# 
   784  0695                     	;# 
   785  0696                     	;# 
   786  0697                     	;# 
   787  0698                     	;# 
   788  0699                     	;# 
   789  069A                     	;# 
   790  069B                     	;# 
   791  069C                     	;# 
   792  069D                     	;# 
   793  069E                     	;# 
   794  069F                     	;# 
   795  070D                     	;# 
   796  070E                     	;# 
   797  070F                     	;# 
   798  0710                     	;# 
   799  0711                     	;# 
   800  0712                     	;# 
   801  0713                     	;# 
   802  0714                     	;# 
   803  0715                     	;# 
   804  0716                     	;# 
   805  0717                     	;# 
   806  0718                     	;# 
   807  0719                     	;# 
   808  071A                     	;# 
   809  071B                     	;# 
   810  071C                     	;# 
   811  071D                     	;# 
   812  071E                     	;# 
   813  071F                     	;# 
   814  0794                     	;# 
   815  0795                     	;# 
   816  0796                     	;# 
   817  0797                     	;# 
   818  0798                     	;# 
   819  0799                     	;# 
   820  079A                     	;# 
   821  079B                     	;# 
   822  079C                     	;# 
   823  079D                     	;# 
   824  079E                     	;# 
   825  079F                     	;# 
   826  0D8E                     	;# 
   827  0D8F                     	;# 
   828  0D90                     	;# 
   829  0D91                     	;# 
   830  0D91                     	;# 
   831  0D92                     	;# 
   832  0D93                     	;# 
   833  0D93                     	;# 
   834  0D94                     	;# 
   835  0D95                     	;# 
   836  0D95                     	;# 
   837  0D96                     	;# 
   838  0D97                     	;# 
   839  0D97                     	;# 
   840  0D98                     	;# 
   841  0D99                     	;# 
   842  0D99                     	;# 
   843  0D9A                     	;# 
   844  0D9B                     	;# 
   845  0D9C                     	;# 
   846  0D9C                     	;# 
   847  0D9D                     	;# 
   848  0D9D                     	;# 
   849  0D9E                     	;# 
   850  0D9F                     	;# 
   851  0DA0                     	;# 
   852  0DA1                     	;# 
   853  0DA1                     	;# 
   854  0DA2                     	;# 
   855  0DA3                     	;# 
   856  0DA3                     	;# 
   857  0DA4                     	;# 
   858  0DA5                     	;# 
   859  0DA5                     	;# 
   860  0DA6                     	;# 
   861  0DA7                     	;# 
   862  0DA7                     	;# 
   863  0DA8                     	;# 
   864  0DA9                     	;# 
   865  0DA9                     	;# 
   866  0DAA                     	;# 
   867  0DAB                     	;# 
   868  0DAC                     	;# 
   869  0DAC                     	;# 
   870  0DAD                     	;# 
   871  0DAD                     	;# 
   872  0DAE                     	;# 
   873  0DAF                     	;# 
   874  0DB0                     	;# 
   875  0E0F                     	;# 
   876  0E10                     	;# 
   877  0E11                     	;# 
   878  0E12                     	;# 
   879  0E13                     	;# 
   880  0E14                     	;# 
   881  0E15                     	;# 
   882  0E16                     	;# 
   883  0E17                     	;# 
   884  0E19                     	;# 
   885  0E19                     	;# 
   886  0E19                     	;# 
   887  0E1A                     	;# 
   888  0E1B                     	;# 
   889  0E1C                     	;# 
   890  0E1C                     	;# 
   891  0E1C                     	;# 
   892  0E1D                     	;# 
   893  0E1E                     	;# 
   894  0E1F                     	;# 
   895  0E1F                     	;# 
   896  0E1F                     	;# 
   897  0E20                     	;# 
   898  0E21                     	;# 
   899  0E22                     	;# 
   900  0E24                     	;# 
   901  0E25                     	;# 
   902  0E28                     	;# 
   903  0E29                     	;# 
   904  0E2A                     	;# 
   905  0E2B                     	;# 
   906  0E2C                     	;# 
   907  0E2D                     	;# 
   908  0E2E                     	;# 
   909  0E2F                     	;# 
   910  0E30                     	;# 
   911  0E31                     	;# 
   912  0E32                     	;# 
   913  0E33                     	;# 
   914  0E34                     	;# 
   915  0E35                     	;# 
   916  0E90                     	;# 
   917  0E91                     	;# 
   918  0E92                     	;# 
   919  0E94                     	;# 
   920  0E95                     	;# 
   921  0E9C                     	;# 
   922  0E9D                     	;# 
   923  0E9E                     	;# 
   924  0E9F                     	;# 
   925  0EA0                     	;# 
   926  0EA1                     	;# 
   927  0EA2                     	;# 
   928  0EA3                     	;# 
   929  0EA4                     	;# 
   930  0EA5                     	;# 
   931  0EA6                     	;# 
   932  0EA7                     	;# 
   933  0F0F                     	;# 
   934  0F10                     	;# 
   935  0F11                     	;# 
   936  0F12                     	;# 
   937  0F13                     	;# 
   938  0F14                     	;# 
   939  0F15                     	;# 
   940  0F16                     	;# 
   941  0F17                     	;# 
   942  0F18                     	;# 
   943  0F19                     	;# 
   944  0F1A                     	;# 
   945  0F1B                     	;# 
   946  0F1C                     	;# 
   947  0F1D                     	;# 
   948  0F1E                     	;# 
   949  0F1F                     	;# 
   950  0F20                     	;# 
   951  0F21                     	;# 
   952  0F22                     	;# 
   953  0F23                     	;# 
   954  0F24                     	;# 
   955  0F25                     	;# 
   956  0F26                     	;# 
   957  0F27                     	;# 
   958  0F28                     	;# 
   959  0F29                     	;# 
   960  0F2A                     	;# 
   961  0F2B                     	;# 
   962  0F2C                     	;# 
   963  0F2D                     	;# 
   964  0FE4                     	;# 
   965  0FE5                     	;# 
   966  0FE6                     	;# 
   967  0FE7                     	;# 
   968  0FE8                     	;# 
   969  0FE9                     	;# 
   970  0FEA                     	;# 
   971  0FEB                     	;# 
   972  0FED                     	;# 
   973  0FEE                     	;# 
   974  0FEF                     	;# 
   975  0000                     	;# 
   976  0001                     	;# 
   977  0002                     	;# 
   978  0003                     	;# 
   979  0004                     	;# 
   980  0005                     	;# 
   981  0006                     	;# 
   982  0007                     	;# 
   983  0008                     	;# 
   984  0009                     	;# 
   985  000A                     	;# 
   986  000B                     	;# 
   987  000C                     	;# 
   988  000D                     	;# 
   989  000E                     	;# 
   990  0011                     	;# 
   991  0012                     	;# 
   992  0013                     	;# 
   993  0014                     	;# 
   994  0015                     	;# 
   995  0016                     	;# 
   996  0016                     	;# 
   997  0017                     	;# 
   998  0018                     	;# 
   999  0019                     	;# 
  1000  001A                     	;# 
  1001  001A                     	;# 
  1002  001B                     	;# 
  1003  001B                     	;# 
  1004  001C                     	;# 
  1005  001D                     	;# 
  1006  001E                     	;# 
  1007  001F                     	;# 
  1008  008C                     	;# 
  1009  008D                     	;# 
  1010  008E                     	;# 
  1011  0091                     	;# 
  1012  0092                     	;# 
  1013  0093                     	;# 
  1014  0094                     	;# 
  1015  0095                     	;# 
  1016  0096                     	;# 
  1017  0097                     	;# 
  1018  0098                     	;# 
  1019  0099                     	;# 
  1020  009A                     	;# 
  1021  009B                     	;# 
  1022  009B                     	;# 
  1023  009C                     	;# 
  1024  009D                     	;# 
  1025  009E                     	;# 
  1026  009F                     	;# 
  1027  010C                     	;# 
  1028  010D                     	;# 
  1029  010E                     	;# 
  1030  010F                     	;# 
  1031  0110                     	;# 
  1032  0111                     	;# 
  1033  0112                     	;# 
  1034  0113                     	;# 
  1035  0114                     	;# 
  1036  0115                     	;# 
  1037  0116                     	;# 
  1038  0117                     	;# 
  1039  0118                     	;# 
  1040  0119                     	;# 
  1041  011A                     	;# 
  1042  011B                     	;# 
  1043  011C                     	;# 
  1044  011D                     	;# 
  1045  011E                     	;# 
  1046  011F                     	;# 
  1047  018C                     	;# 
  1048  018D                     	;# 
  1049  018E                     	;# 
  1050  0191                     	;# 
  1051  0191                     	;# 
  1052  0192                     	;# 
  1053  0193                     	;# 
  1054  0193                     	;# 
  1055  0194                     	;# 
  1056  0195                     	;# 
  1057  0196                     	;# 
  1058  0197                     	;# 
  1059  0199                     	;# 
  1060  0199                     	;# 
  1061  0199                     	;# 
  1062  019A                     	;# 
  1063  019A                     	;# 
  1064  019A                     	;# 
  1065  019B                     	;# 
  1066  019B                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019C                     	;# 
  1071  019C                     	;# 
  1072  019C                     	;# 
  1073  019D                     	;# 
  1074  019D                     	;# 
  1075  019D                     	;# 
  1076  019E                     	;# 
  1077  019E                     	;# 
  1078  019E                     	;# 
  1079  019F                     	;# 
  1080  019F                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  020C                     	;# 
  1085  020D                     	;# 
  1086  020E                     	;# 
  1087  0211                     	;# 
  1088  0211                     	;# 
  1089  0212                     	;# 
  1090  0212                     	;# 
  1091  0213                     	;# 
  1092  0213                     	;# 
  1093  0214                     	;# 
  1094  0214                     	;# 
  1095  0215                     	;# 
  1096  0215                     	;# 
  1097  0215                     	;# 
  1098  0215                     	;# 
  1099  0216                     	;# 
  1100  0216                     	;# 
  1101  0217                     	;# 
  1102  0217                     	;# 
  1103  021D                     	;# 
  1104  021E                     	;# 
  1105  021F                     	;# 
  1106  028C                     	;# 
  1107  028D                     	;# 
  1108  028E                     	;# 
  1109  0291                     	;# 
  1110  0291                     	;# 
  1111  0292                     	;# 
  1112  0293                     	;# 
  1113  0294                     	;# 
  1114  0298                     	;# 
  1115  0298                     	;# 
  1116  0299                     	;# 
  1117  029A                     	;# 
  1118  029B                     	;# 
  1119  029E                     	;# 
  1120  030C                     	;# 
  1121  030D                     	;# 
  1122  030E                     	;# 
  1123  031B                     	;# 
  1124  031C                     	;# 
  1125  031D                     	;# 
  1126  031E                     	;# 
  1127  031F                     	;# 
  1128  038C                     	;# 
  1129  038D                     	;# 
  1130  038E                     	;# 
  1131  0391                     	;# 
  1132  0392                     	;# 
  1133  0393                     	;# 
  1134  0394                     	;# 
  1135  0395                     	;# 
  1136  0396                     	;# 
  1137  0397                     	;# 
  1138  0398                     	;# 
  1139  0399                     	;# 
  1140  039B                     	;# 
  1141  039C                     	;# 
  1142  039D                     	;# 
  1143  039E                     	;# 
  1144  039F                     	;# 
  1145  040E                     	;# 
  1146  0413                     	;# 
  1147  0413                     	;# 
  1148  0414                     	;# 
  1149  0414                     	;# 
  1150  0415                     	;# 
  1151  0416                     	;# 
  1152  0417                     	;# 
  1153  0418                     	;# 
  1154  041A                     	;# 
  1155  041A                     	;# 
  1156  041B                     	;# 
  1157  041B                     	;# 
  1158  041C                     	;# 
  1159  041D                     	;# 
  1160  041E                     	;# 
  1161  041F                     	;# 
  1162  0493                     	;# 
  1163  0493                     	;# 
  1164  0494                     	;# 
  1165  0495                     	;# 
  1166  0496                     	;# 
  1167  049A                     	;# 
  1168  049A                     	;# 
  1169  049B                     	;# 
  1170  049C                     	;# 
  1171  049D                     	;# 
  1172  050F                     	;# 
  1173  0510                     	;# 
  1174  0511                     	;# 
  1175  0512                     	;# 
  1176  0513                     	;# 
  1177  0514                     	;# 
  1178  0515                     	;# 
  1179  0516                     	;# 
  1180  0590                     	;# 
  1181  0591                     	;# 
  1182  0592                     	;# 
  1183  0592                     	;# 
  1184  0592                     	;# 
  1185  0593                     	;# 
  1186  0593                     	;# 
  1187  0594                     	;# 
  1188  0595                     	;# 
  1189  0595                     	;# 
  1190  0595                     	;# 
  1191  0596                     	;# 
  1192  0596                     	;# 
  1193  0597                     	;# 
  1194  0598                     	;# 
  1195  0598                     	;# 
  1196  0599                     	;# 
  1197  059A                     	;# 
  1198  059A                     	;# 
  1199  0617                     	;# 
  1200  0617                     	;# 
  1201  0618                     	;# 
  1202  0619                     	;# 
  1203  061A                     	;# 
  1204  061A                     	;# 
  1205  061B                     	;# 
  1206  061C                     	;# 
  1207  068D                     	;# 
  1208  068E                     	;# 
  1209  068F                     	;# 
  1210  0690                     	;# 
  1211  0691                     	;# 
  1212  0692                     	;# 
  1213  0693                     	;# 
  1214  0694                     	;# 
  1215  0695                     	;# 
  1216  0696                     	;# 
  1217  0697                     	;# 
  1218  0698                     	;# 
  1219  0699                     	;# 
  1220  069A                     	;# 
  1221  069B                     	;# 
  1222  069C                     	;# 
  1223  069D                     	;# 
  1224  069E                     	;# 
  1225  069F                     	;# 
  1226  070D                     	;# 
  1227  070E                     	;# 
  1228  070F                     	;# 
  1229  0710                     	;# 
  1230  0711                     	;# 
  1231  0712                     	;# 
  1232  0713                     	;# 
  1233  0714                     	;# 
  1234  0715                     	;# 
  1235  0716                     	;# 
  1236  0717                     	;# 
  1237  0718                     	;# 
  1238  0719                     	;# 
  1239  071A                     	;# 
  1240  071B                     	;# 
  1241  071C                     	;# 
  1242  071D                     	;# 
  1243  071E                     	;# 
  1244  071F                     	;# 
  1245  0794                     	;# 
  1246  0795                     	;# 
  1247  0796                     	;# 
  1248  0797                     	;# 
  1249  0798                     	;# 
  1250  0799                     	;# 
  1251  079A                     	;# 
  1252  079B                     	;# 
  1253  079C                     	;# 
  1254  079D                     	;# 
  1255  079E                     	;# 
  1256  079F                     	;# 
  1257  0D8E                     	;# 
  1258  0D8F                     	;# 
  1259  0D90                     	;# 
  1260  0D91                     	;# 
  1261  0D91                     	;# 
  1262  0D92                     	;# 
  1263  0D93                     	;# 
  1264  0D93                     	;# 
  1265  0D94                     	;# 
  1266  0D95                     	;# 
  1267  0D95                     	;# 
  1268  0D96                     	;# 
  1269  0D97                     	;# 
  1270  0D97                     	;# 
  1271  0D98                     	;# 
  1272  0D99                     	;# 
  1273  0D99                     	;# 
  1274  0D9A                     	;# 
  1275  0D9B                     	;# 
  1276  0D9C                     	;# 
  1277  0D9C                     	;# 
  1278  0D9D                     	;# 
  1279  0D9D                     	;# 
  1280  0D9E                     	;# 
  1281  0D9F                     	;# 
  1282  0DA0                     	;# 
  1283  0DA1                     	;# 
  1284  0DA1                     	;# 
  1285  0DA2                     	;# 
  1286  0DA3                     	;# 
  1287  0DA3                     	;# 
  1288  0DA4                     	;# 
  1289  0DA5                     	;# 
  1290  0DA5                     	;# 
  1291  0DA6                     	;# 
  1292  0DA7                     	;# 
  1293  0DA7                     	;# 
  1294  0DA8                     	;# 
  1295  0DA9                     	;# 
  1296  0DA9                     	;# 
  1297  0DAA                     	;# 
  1298  0DAB                     	;# 
  1299  0DAC                     	;# 
  1300  0DAC                     	;# 
  1301  0DAD                     	;# 
  1302  0DAD                     	;# 
  1303  0DAE                     	;# 
  1304  0DAF                     	;# 
  1305  0DB0                     	;# 
  1306  0E0F                     	;# 
  1307  0E10                     	;# 
  1308  0E11                     	;# 
  1309  0E12                     	;# 
  1310  0E13                     	;# 
  1311  0E14                     	;# 
  1312  0E15                     	;# 
  1313  0E16                     	;# 
  1314  0E17                     	;# 
  1315  0E19                     	;# 
  1316  0E19                     	;# 
  1317  0E19                     	;# 
  1318  0E1A                     	;# 
  1319  0E1B                     	;# 
  1320  0E1C                     	;# 
  1321  0E1C                     	;# 
  1322  0E1C                     	;# 
  1323  0E1D                     	;# 
  1324  0E1E                     	;# 
  1325  0E1F                     	;# 
  1326  0E1F                     	;# 
  1327  0E1F                     	;# 
  1328  0E20                     	;# 
  1329  0E21                     	;# 
  1330  0E22                     	;# 
  1331  0E24                     	;# 
  1332  0E25                     	;# 
  1333  0E28                     	;# 
  1334  0E29                     	;# 
  1335  0E2A                     	;# 
  1336  0E2B                     	;# 
  1337  0E2C                     	;# 
  1338  0E2D                     	;# 
  1339  0E2E                     	;# 
  1340  0E2F                     	;# 
  1341  0E30                     	;# 
  1342  0E31                     	;# 
  1343  0E32                     	;# 
  1344  0E33                     	;# 
  1345  0E34                     	;# 
  1346  0E35                     	;# 
  1347  0E90                     	;# 
  1348  0E91                     	;# 
  1349  0E92                     	;# 
  1350  0E94                     	;# 
  1351  0E95                     	;# 
  1352  0E9C                     	;# 
  1353  0E9D                     	;# 
  1354  0E9E                     	;# 
  1355  0E9F                     	;# 
  1356  0EA0                     	;# 
  1357  0EA1                     	;# 
  1358  0EA2                     	;# 
  1359  0EA3                     	;# 
  1360  0EA4                     	;# 
  1361  0EA5                     	;# 
  1362  0EA6                     	;# 
  1363  0EA7                     	;# 
  1364  0F0F                     	;# 
  1365  0F10                     	;# 
  1366  0F11                     	;# 
  1367  0F12                     	;# 
  1368  0F13                     	;# 
  1369  0F14                     	;# 
  1370  0F15                     	;# 
  1371  0F16                     	;# 
  1372  0F17                     	;# 
  1373  0F18                     	;# 
  1374  0F19                     	;# 
  1375  0F1A                     	;# 
  1376  0F1B                     	;# 
  1377  0F1C                     	;# 
  1378  0F1D                     	;# 
  1379  0F1E                     	;# 
  1380  0F1F                     	;# 
  1381  0F20                     	;# 
  1382  0F21                     	;# 
  1383  0F22                     	;# 
  1384  0F23                     	;# 
  1385  0F24                     	;# 
  1386  0F25                     	;# 
  1387  0F26                     	;# 
  1388  0F27                     	;# 
  1389  0F28                     	;# 
  1390  0F29                     	;# 
  1391  0F2A                     	;# 
  1392  0F2B                     	;# 
  1393  0F2C                     	;# 
  1394  0F2D                     	;# 
  1395  0FE4                     	;# 
  1396  0FE5                     	;# 
  1397  0FE6                     	;# 
  1398  0FE7                     	;# 
  1399  0FE8                     	;# 
  1400  0FE9                     	;# 
  1401  0FEA                     	;# 
  1402  0FEB                     	;# 
  1403  0FED                     	;# 
  1404  0FEE                     	;# 
  1405  0FEF                     	;# 
  1406  0000                     	;# 
  1407  0001                     	;# 
  1408  0002                     	;# 
  1409  0003                     	;# 
  1410  0004                     	;# 
  1411  0005                     	;# 
  1412  0006                     	;# 
  1413  0007                     	;# 
  1414  0008                     	;# 
  1415  0009                     	;# 
  1416  000A                     	;# 
  1417  000B                     	;# 
  1418  000C                     	;# 
  1419  000D                     	;# 
  1420  000E                     	;# 
  1421  0011                     	;# 
  1422  0012                     	;# 
  1423  0013                     	;# 
  1424  0014                     	;# 
  1425  0015                     	;# 
  1426  0016                     	;# 
  1427  0016                     	;# 
  1428  0017                     	;# 
  1429  0018                     	;# 
  1430  0019                     	;# 
  1431  001A                     	;# 
  1432  001A                     	;# 
  1433  001B                     	;# 
  1434  001B                     	;# 
  1435  001C                     	;# 
  1436  001D                     	;# 
  1437  001E                     	;# 
  1438  001F                     	;# 
  1439  008C                     	;# 
  1440  008D                     	;# 
  1441  008E                     	;# 
  1442  0091                     	;# 
  1443  0092                     	;# 
  1444  0093                     	;# 
  1445  0094                     	;# 
  1446  0095                     	;# 
  1447  0096                     	;# 
  1448  0097                     	;# 
  1449  0098                     	;# 
  1450  0099                     	;# 
  1451  009A                     	;# 
  1452  009B                     	;# 
  1453  009B                     	;# 
  1454  009C                     	;# 
  1455  009D                     	;# 
  1456  009E                     	;# 
  1457  009F                     	;# 
  1458  010C                     	;# 
  1459  010D                     	;# 
  1460  010E                     	;# 
  1461  010F                     	;# 
  1462  0110                     	;# 
  1463  0111                     	;# 
  1464  0112                     	;# 
  1465  0113                     	;# 
  1466  0114                     	;# 
  1467  0115                     	;# 
  1468  0116                     	;# 
  1469  0117                     	;# 
  1470  0118                     	;# 
  1471  0119                     	;# 
  1472  011A                     	;# 
  1473  011B                     	;# 
  1474  011C                     	;# 
  1475  011D                     	;# 
  1476  011E                     	;# 
  1477  011F                     	;# 
  1478  018C                     	;# 
  1479  018D                     	;# 
  1480  018E                     	;# 
  1481  0191                     	;# 
  1482  0191                     	;# 
  1483  0192                     	;# 
  1484  0193                     	;# 
  1485  0193                     	;# 
  1486  0194                     	;# 
  1487  0195                     	;# 
  1488  0196                     	;# 
  1489  0197                     	;# 
  1490  0199                     	;# 
  1491  0199                     	;# 
  1492  0199                     	;# 
  1493  019A                     	;# 
  1494  019A                     	;# 
  1495  019A                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019B                     	;# 
  1500  019B                     	;# 
  1501  019C                     	;# 
  1502  019C                     	;# 
  1503  019C                     	;# 
  1504  019D                     	;# 
  1505  019D                     	;# 
  1506  019D                     	;# 
  1507  019E                     	;# 
  1508  019E                     	;# 
  1509  019E                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  019F                     	;# 
  1514  019F                     	;# 
  1515  020C                     	;# 
  1516  020D                     	;# 
  1517  020E                     	;# 
  1518  0211                     	;# 
  1519  0211                     	;# 
  1520  0212                     	;# 
  1521  0212                     	;# 
  1522  0213                     	;# 
  1523  0213                     	;# 
  1524  0214                     	;# 
  1525  0214                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0215                     	;# 
  1529  0215                     	;# 
  1530  0216                     	;# 
  1531  0216                     	;# 
  1532  0217                     	;# 
  1533  0217                     	;# 
  1534  021D                     	;# 
  1535  021E                     	;# 
  1536  021F                     	;# 
  1537  028C                     	;# 
  1538  028D                     	;# 
  1539  028E                     	;# 
  1540  0291                     	;# 
  1541  0291                     	;# 
  1542  0292                     	;# 
  1543  0293                     	;# 
  1544  0294                     	;# 
  1545  0298                     	;# 
  1546  0298                     	;# 
  1547  0299                     	;# 
  1548  029A                     	;# 
  1549  029B                     	;# 
  1550  029E                     	;# 
  1551  030C                     	;# 
  1552  030D                     	;# 
  1553  030E                     	;# 
  1554  031B                     	;# 
  1555  031C                     	;# 
  1556  031D                     	;# 
  1557  031E                     	;# 
  1558  031F                     	;# 
  1559  038C                     	;# 
  1560  038D                     	;# 
  1561  038E                     	;# 
  1562  0391                     	;# 
  1563  0392                     	;# 
  1564  0393                     	;# 
  1565  0394                     	;# 
  1566  0395                     	;# 
  1567  0396                     	;# 
  1568  0397                     	;# 
  1569  0398                     	;# 
  1570  0399                     	;# 
  1571  039B                     	;# 
  1572  039C                     	;# 
  1573  039D                     	;# 
  1574  039E                     	;# 
  1575  039F                     	;# 
  1576  040E                     	;# 
  1577  0413                     	;# 
  1578  0413                     	;# 
  1579  0414                     	;# 
  1580  0414                     	;# 
  1581  0415                     	;# 
  1582  0416                     	;# 
  1583  0417                     	;# 
  1584  0418                     	;# 
  1585  041A                     	;# 
  1586  041A                     	;# 
  1587  041B                     	;# 
  1588  041B                     	;# 
  1589  041C                     	;# 
  1590  041D                     	;# 
  1591  041E                     	;# 
  1592  041F                     	;# 
  1593  0493                     	;# 
  1594  0493                     	;# 
  1595  0494                     	;# 
  1596  0495                     	;# 
  1597  0496                     	;# 
  1598  049A                     	;# 
  1599  049A                     	;# 
  1600  049B                     	;# 
  1601  049C                     	;# 
  1602  049D                     	;# 
  1603  050F                     	;# 
  1604  0510                     	;# 
  1605  0511                     	;# 
  1606  0512                     	;# 
  1607  0513                     	;# 
  1608  0514                     	;# 
  1609  0515                     	;# 
  1610  0516                     	;# 
  1611  0590                     	;# 
  1612  0591                     	;# 
  1613  0592                     	;# 
  1614  0592                     	;# 
  1615  0592                     	;# 
  1616  0593                     	;# 
  1617  0593                     	;# 
  1618  0594                     	;# 
  1619  0595                     	;# 
  1620  0595                     	;# 
  1621  0595                     	;# 
  1622  0596                     	;# 
  1623  0596                     	;# 
  1624  0597                     	;# 
  1625  0598                     	;# 
  1626  0598                     	;# 
  1627  0599                     	;# 
  1628  059A                     	;# 
  1629  059A                     	;# 
  1630  0617                     	;# 
  1631  0617                     	;# 
  1632  0618                     	;# 
  1633  0619                     	;# 
  1634  061A                     	;# 
  1635  061A                     	;# 
  1636  061B                     	;# 
  1637  061C                     	;# 
  1638  068D                     	;# 
  1639  068E                     	;# 
  1640  068F                     	;# 
  1641  0690                     	;# 
  1642  0691                     	;# 
  1643  0692                     	;# 
  1644  0693                     	;# 
  1645  0694                     	;# 
  1646  0695                     	;# 
  1647  0696                     	;# 
  1648  0697                     	;# 
  1649  0698                     	;# 
  1650  0699                     	;# 
  1651  069A                     	;# 
  1652  069B                     	;# 
  1653  069C                     	;# 
  1654  069D                     	;# 
  1655  069E                     	;# 
  1656  069F                     	;# 
  1657  070D                     	;# 
  1658  070E                     	;# 
  1659  070F                     	;# 
  1660  0710                     	;# 
  1661  0711                     	;# 
  1662  0712                     	;# 
  1663  0713                     	;# 
  1664  0714                     	;# 
  1665  0715                     	;# 
  1666  0716                     	;# 
  1667  0717                     	;# 
  1668  0718                     	;# 
  1669  0719                     	;# 
  1670  071A                     	;# 
  1671  071B                     	;# 
  1672  071C                     	;# 
  1673  071D                     	;# 
  1674  071E                     	;# 
  1675  071F                     	;# 
  1676  0794                     	;# 
  1677  0795                     	;# 
  1678  0796                     	;# 
  1679  0797                     	;# 
  1680  0798                     	;# 
  1681  0799                     	;# 
  1682  079A                     	;# 
  1683  079B                     	;# 
  1684  079C                     	;# 
  1685  079D                     	;# 
  1686  079E                     	;# 
  1687  079F                     	;# 
  1688  0D8E                     	;# 
  1689  0D8F                     	;# 
  1690  0D90                     	;# 
  1691  0D91                     	;# 
  1692  0D91                     	;# 
  1693  0D92                     	;# 
  1694  0D93                     	;# 
  1695  0D93                     	;# 
  1696  0D94                     	;# 
  1697  0D95                     	;# 
  1698  0D95                     	;# 
  1699  0D96                     	;# 
  1700  0D97                     	;# 
  1701  0D97                     	;# 
  1702  0D98                     	;# 
  1703  0D99                     	;# 
  1704  0D99                     	;# 
  1705  0D9A                     	;# 
  1706  0D9B                     	;# 
  1707  0D9C                     	;# 
  1708  0D9C                     	;# 
  1709  0D9D                     	;# 
  1710  0D9D                     	;# 
  1711  0D9E                     	;# 
  1712  0D9F                     	;# 
  1713  0DA0                     	;# 
  1714  0DA1                     	;# 
  1715  0DA1                     	;# 
  1716  0DA2                     	;# 
  1717  0DA3                     	;# 
  1718  0DA3                     	;# 
  1719  0DA4                     	;# 
  1720  0DA5                     	;# 
  1721  0DA5                     	;# 
  1722  0DA6                     	;# 
  1723  0DA7                     	;# 
  1724  0DA7                     	;# 
  1725  0DA8                     	;# 
  1726  0DA9                     	;# 
  1727  0DA9                     	;# 
  1728  0DAA                     	;# 
  1729  0DAB                     	;# 
  1730  0DAC                     	;# 
  1731  0DAC                     	;# 
  1732  0DAD                     	;# 
  1733  0DAD                     	;# 
  1734  0DAE                     	;# 
  1735  0DAF                     	;# 
  1736  0DB0                     	;# 
  1737  0E0F                     	;# 
  1738  0E10                     	;# 
  1739  0E11                     	;# 
  1740  0E12                     	;# 
  1741  0E13                     	;# 
  1742  0E14                     	;# 
  1743  0E15                     	;# 
  1744  0E16                     	;# 
  1745  0E17                     	;# 
  1746  0E19                     	;# 
  1747  0E19                     	;# 
  1748  0E19                     	;# 
  1749  0E1A                     	;# 
  1750  0E1B                     	;# 
  1751  0E1C                     	;# 
  1752  0E1C                     	;# 
  1753  0E1C                     	;# 
  1754  0E1D                     	;# 
  1755  0E1E                     	;# 
  1756  0E1F                     	;# 
  1757  0E1F                     	;# 
  1758  0E1F                     	;# 
  1759  0E20                     	;# 
  1760  0E21                     	;# 
  1761  0E22                     	;# 
  1762  0E24                     	;# 
  1763  0E25                     	;# 
  1764  0E28                     	;# 
  1765  0E29                     	;# 
  1766  0E2A                     	;# 
  1767  0E2B                     	;# 
  1768  0E2C                     	;# 
  1769  0E2D                     	;# 
  1770  0E2E                     	;# 
  1771  0E2F                     	;# 
  1772  0E30                     	;# 
  1773  0E31                     	;# 
  1774  0E32                     	;# 
  1775  0E33                     	;# 
  1776  0E34                     	;# 
  1777  0E35                     	;# 
  1778  0E90                     	;# 
  1779  0E91                     	;# 
  1780  0E92                     	;# 
  1781  0E94                     	;# 
  1782  0E95                     	;# 
  1783  0E9C                     	;# 
  1784  0E9D                     	;# 
  1785  0E9E                     	;# 
  1786  0E9F                     	;# 
  1787  0EA0                     	;# 
  1788  0EA1                     	;# 
  1789  0EA2                     	;# 
  1790  0EA3                     	;# 
  1791  0EA4                     	;# 
  1792  0EA5                     	;# 
  1793  0EA6                     	;# 
  1794  0EA7                     	;# 
  1795  0F0F                     	;# 
  1796  0F10                     	;# 
  1797  0F11                     	;# 
  1798  0F12                     	;# 
  1799  0F13                     	;# 
  1800  0F14                     	;# 
  1801  0F15                     	;# 
  1802  0F16                     	;# 
  1803  0F17                     	;# 
  1804  0F18                     	;# 
  1805  0F19                     	;# 
  1806  0F1A                     	;# 
  1807  0F1B                     	;# 
  1808  0F1C                     	;# 
  1809  0F1D                     	;# 
  1810  0F1E                     	;# 
  1811  0F1F                     	;# 
  1812  0F20                     	;# 
  1813  0F21                     	;# 
  1814  0F22                     	;# 
  1815  0F23                     	;# 
  1816  0F24                     	;# 
  1817  0F25                     	;# 
  1818  0F26                     	;# 
  1819  0F27                     	;# 
  1820  0F28                     	;# 
  1821  0F29                     	;# 
  1822  0F2A                     	;# 
  1823  0F2B                     	;# 
  1824  0F2C                     	;# 
  1825  0F2D                     	;# 
  1826  0FE4                     	;# 
  1827  0FE5                     	;# 
  1828  0FE6                     	;# 
  1829  0FE7                     	;# 
  1830  0FE8                     	;# 
  1831  0FE9                     	;# 
  1832  0FEA                     	;# 
  1833  0FEB                     	;# 
  1834  0FED                     	;# 
  1835  0FEE                     	;# 
  1836  0FEF                     	;# 
  1837  0000                     	;# 
  1838  0001                     	;# 
  1839  0002                     	;# 
  1840  0003                     	;# 
  1841  0004                     	;# 
  1842  0005                     	;# 
  1843  0006                     	;# 
  1844  0007                     	;# 
  1845  0008                     	;# 
  1846  0009                     	;# 
  1847  000A                     	;# 
  1848  000B                     	;# 
  1849  000C                     	;# 
  1850  000D                     	;# 
  1851  000E                     	;# 
  1852  0011                     	;# 
  1853  0012                     	;# 
  1854  0013                     	;# 
  1855  0014                     	;# 
  1856  0015                     	;# 
  1857  0016                     	;# 
  1858  0016                     	;# 
  1859  0017                     	;# 
  1860  0018                     	;# 
  1861  0019                     	;# 
  1862  001A                     	;# 
  1863  001A                     	;# 
  1864  001B                     	;# 
  1865  001B                     	;# 
  1866  001C                     	;# 
  1867  001D                     	;# 
  1868  001E                     	;# 
  1869  001F                     	;# 
  1870  008C                     	;# 
  1871  008D                     	;# 
  1872  008E                     	;# 
  1873  0091                     	;# 
  1874  0092                     	;# 
  1875  0093                     	;# 
  1876  0094                     	;# 
  1877  0095                     	;# 
  1878  0096                     	;# 
  1879  0097                     	;# 
  1880  0098                     	;# 
  1881  0099                     	;# 
  1882  009A                     	;# 
  1883  009B                     	;# 
  1884  009B                     	;# 
  1885  009C                     	;# 
  1886  009D                     	;# 
  1887  009E                     	;# 
  1888  009F                     	;# 
  1889  010C                     	;# 
  1890  010D                     	;# 
  1891  010E                     	;# 
  1892  010F                     	;# 
  1893  0110                     	;# 
  1894  0111                     	;# 
  1895  0112                     	;# 
  1896  0113                     	;# 
  1897  0114                     	;# 
  1898  0115                     	;# 
  1899  0116                     	;# 
  1900  0117                     	;# 
  1901  0118                     	;# 
  1902  0119                     	;# 
  1903  011A                     	;# 
  1904  011B                     	;# 
  1905  011C                     	;# 
  1906  011D                     	;# 
  1907  011E                     	;# 
  1908  011F                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0191                     	;# 
  1913  0191                     	;# 
  1914  0192                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  0199                     	;# 
  1923  0199                     	;# 
  1924  019A                     	;# 
  1925  019A                     	;# 
  1926  019A                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019C                     	;# 
  1933  019C                     	;# 
  1934  019C                     	;# 
  1935  019D                     	;# 
  1936  019D                     	;# 
  1937  019D                     	;# 
  1938  019E                     	;# 
  1939  019E                     	;# 
  1940  019E                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  019F                     	;# 
  1945  019F                     	;# 
  1946  020C                     	;# 
  1947  020D                     	;# 
  1948  020E                     	;# 
  1949  0211                     	;# 
  1950  0211                     	;# 
  1951  0212                     	;# 
  1952  0212                     	;# 
  1953  0213                     	;# 
  1954  0213                     	;# 
  1955  0214                     	;# 
  1956  0214                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0216                     	;# 
  1962  0216                     	;# 
  1963  0217                     	;# 
  1964  0217                     	;# 
  1965  021D                     	;# 
  1966  021E                     	;# 
  1967  021F                     	;# 
  1968  028C                     	;# 
  1969  028D                     	;# 
  1970  028E                     	;# 
  1971  0291                     	;# 
  1972  0291                     	;# 
  1973  0292                     	;# 
  1974  0293                     	;# 
  1975  0294                     	;# 
  1976  0298                     	;# 
  1977  0298                     	;# 
  1978  0299                     	;# 
  1979  029A                     	;# 
  1980  029B                     	;# 
  1981  029E                     	;# 
  1982  030C                     	;# 
  1983  030D                     	;# 
  1984  030E                     	;# 
  1985  031B                     	;# 
  1986  031C                     	;# 
  1987  031D                     	;# 
  1988  031E                     	;# 
  1989  031F                     	;# 
  1990  038C                     	;# 
  1991  038D                     	;# 
  1992  038E                     	;# 
  1993  0391                     	;# 
  1994  0392                     	;# 
  1995  0393                     	;# 
  1996  0394                     	;# 
  1997  0395                     	;# 
  1998  0396                     	;# 
  1999  0397                     	;# 
  2000  0398                     	;# 
  2001  0399                     	;# 
  2002  039B                     	;# 
  2003  039C                     	;# 
  2004  039D                     	;# 
  2005  039E                     	;# 
  2006  039F                     	;# 
  2007  040E                     	;# 
  2008  0413                     	;# 
  2009  0413                     	;# 
  2010  0414                     	;# 
  2011  0414                     	;# 
  2012  0415                     	;# 
  2013  0416                     	;# 
  2014  0417                     	;# 
  2015  0418                     	;# 
  2016  041A                     	;# 
  2017  041A                     	;# 
  2018  041B                     	;# 
  2019  041B                     	;# 
  2020  041C                     	;# 
  2021  041D                     	;# 
  2022  041E                     	;# 
  2023  041F                     	;# 
  2024  0493                     	;# 
  2025  0493                     	;# 
  2026  0494                     	;# 
  2027  0495                     	;# 
  2028  0496                     	;# 
  2029  049A                     	;# 
  2030  049A                     	;# 
  2031  049B                     	;# 
  2032  049C                     	;# 
  2033  049D                     	;# 
  2034  050F                     	;# 
  2035  0510                     	;# 
  2036  0511                     	;# 
  2037  0512                     	;# 
  2038  0513                     	;# 
  2039  0514                     	;# 
  2040  0515                     	;# 
  2041  0516                     	;# 
  2042  0590                     	;# 
  2043  0591                     	;# 
  2044  0592                     	;# 
  2045  0592                     	;# 
  2046  0592                     	;# 
  2047  0593                     	;# 
  2048  0593                     	;# 
  2049  0594                     	;# 
  2050  0595                     	;# 
  2051  0595                     	;# 
  2052  0595                     	;# 
  2053  0596                     	;# 
  2054  0596                     	;# 
  2055  0597                     	;# 
  2056  0598                     	;# 
  2057  0598                     	;# 
  2058  0599                     	;# 
  2059  059A                     	;# 
  2060  059A                     	;# 
  2061  0617                     	;# 
  2062  0617                     	;# 
  2063  0618                     	;# 
  2064  0619                     	;# 
  2065  061A                     	;# 
  2066  061A                     	;# 
  2067  061B                     	;# 
  2068  061C                     	;# 
  2069  068D                     	;# 
  2070  068E                     	;# 
  2071  068F                     	;# 
  2072  0690                     	;# 
  2073  0691                     	;# 
  2074  0692                     	;# 
  2075  0693                     	;# 
  2076  0694                     	;# 
  2077  0695                     	;# 
  2078  0696                     	;# 
  2079  0697                     	;# 
  2080  0698                     	;# 
  2081  0699                     	;# 
  2082  069A                     	;# 
  2083  069B                     	;# 
  2084  069C                     	;# 
  2085  069D                     	;# 
  2086  069E                     	;# 
  2087  069F                     	;# 
  2088  070D                     	;# 
  2089  070E                     	;# 
  2090  070F                     	;# 
  2091  0710                     	;# 
  2092  0711                     	;# 
  2093  0712                     	;# 
  2094  0713                     	;# 
  2095  0714                     	;# 
  2096  0715                     	;# 
  2097  0716                     	;# 
  2098  0717                     	;# 
  2099  0718                     	;# 
  2100  0719                     	;# 
  2101  071A                     	;# 
  2102  071B                     	;# 
  2103  071C                     	;# 
  2104  071D                     	;# 
  2105  071E                     	;# 
  2106  071F                     	;# 
  2107  0794                     	;# 
  2108  0795                     	;# 
  2109  0796                     	;# 
  2110  0797                     	;# 
  2111  0798                     	;# 
  2112  0799                     	;# 
  2113  079A                     	;# 
  2114  079B                     	;# 
  2115  079C                     	;# 
  2116  079D                     	;# 
  2117  079E                     	;# 
  2118  079F                     	;# 
  2119  0D8E                     	;# 
  2120  0D8F                     	;# 
  2121  0D90                     	;# 
  2122  0D91                     	;# 
  2123  0D91                     	;# 
  2124  0D92                     	;# 
  2125  0D93                     	;# 
  2126  0D93                     	;# 
  2127  0D94                     	;# 
  2128  0D95                     	;# 
  2129  0D95                     	;# 
  2130  0D96                     	;# 
  2131  0D97                     	;# 
  2132  0D97                     	;# 
  2133  0D98                     	;# 
  2134  0D99                     	;# 
  2135  0D99                     	;# 
  2136  0D9A                     	;# 
  2137  0D9B                     	;# 
  2138  0D9C                     	;# 
  2139  0D9C                     	;# 
  2140  0D9D                     	;# 
  2141  0D9D                     	;# 
  2142  0D9E                     	;# 
  2143  0D9F                     	;# 
  2144  0DA0                     	;# 
  2145  0DA1                     	;# 
  2146  0DA1                     	;# 
  2147  0DA2                     	;# 
  2148  0DA3                     	;# 
  2149  0DA3                     	;# 
  2150  0DA4                     	;# 
  2151  0DA5                     	;# 
  2152  0DA5                     	;# 
  2153  0DA6                     	;# 
  2154  0DA7                     	;# 
  2155  0DA7                     	;# 
  2156  0DA8                     	;# 
  2157  0DA9                     	;# 
  2158  0DA9                     	;# 
  2159  0DAA                     	;# 
  2160  0DAB                     	;# 
  2161  0DAC                     	;# 
  2162  0DAC                     	;# 
  2163  0DAD                     	;# 
  2164  0DAD                     	;# 
  2165  0DAE                     	;# 
  2166  0DAF                     	;# 
  2167  0DB0                     	;# 
  2168  0E0F                     	;# 
  2169  0E10                     	;# 
  2170  0E11                     	;# 
  2171  0E12                     	;# 
  2172  0E13                     	;# 
  2173  0E14                     	;# 
  2174  0E15                     	;# 
  2175  0E16                     	;# 
  2176  0E17                     	;# 
  2177  0E19                     	;# 
  2178  0E19                     	;# 
  2179  0E19                     	;# 
  2180  0E1A                     	;# 
  2181  0E1B                     	;# 
  2182  0E1C                     	;# 
  2183  0E1C                     	;# 
  2184  0E1C                     	;# 
  2185  0E1D                     	;# 
  2186  0E1E                     	;# 
  2187  0E1F                     	;# 
  2188  0E1F                     	;# 
  2189  0E1F                     	;# 
  2190  0E20                     	;# 
  2191  0E21                     	;# 
  2192  0E22                     	;# 
  2193  0E24                     	;# 
  2194  0E25                     	;# 
  2195  0E28                     	;# 
  2196  0E29                     	;# 
  2197  0E2A                     	;# 
  2198  0E2B                     	;# 
  2199  0E2C                     	;# 
  2200  0E2D                     	;# 
  2201  0E2E                     	;# 
  2202  0E2F                     	;# 
  2203  0E30                     	;# 
  2204  0E31                     	;# 
  2205  0E32                     	;# 
  2206  0E33                     	;# 
  2207  0E34                     	;# 
  2208  0E35                     	;# 
  2209  0E90                     	;# 
  2210  0E91                     	;# 
  2211  0E92                     	;# 
  2212  0E94                     	;# 
  2213  0E95                     	;# 
  2214  0E9C                     	;# 
  2215  0E9D                     	;# 
  2216  0E9E                     	;# 
  2217  0E9F                     	;# 
  2218  0EA0                     	;# 
  2219  0EA1                     	;# 
  2220  0EA2                     	;# 
  2221  0EA3                     	;# 
  2222  0EA4                     	;# 
  2223  0EA5                     	;# 
  2224  0EA6                     	;# 
  2225  0EA7                     	;# 
  2226  0F0F                     	;# 
  2227  0F10                     	;# 
  2228  0F11                     	;# 
  2229  0F12                     	;# 
  2230  0F13                     	;# 
  2231  0F14                     	;# 
  2232  0F15                     	;# 
  2233  0F16                     	;# 
  2234  0F17                     	;# 
  2235  0F18                     	;# 
  2236  0F19                     	;# 
  2237  0F1A                     	;# 
  2238  0F1B                     	;# 
  2239  0F1C                     	;# 
  2240  0F1D                     	;# 
  2241  0F1E                     	;# 
  2242  0F1F                     	;# 
  2243  0F20                     	;# 
  2244  0F21                     	;# 
  2245  0F22                     	;# 
  2246  0F23                     	;# 
  2247  0F24                     	;# 
  2248  0F25                     	;# 
  2249  0F26                     	;# 
  2250  0F27                     	;# 
  2251  0F28                     	;# 
  2252  0F29                     	;# 
  2253  0F2A                     	;# 
  2254  0F2B                     	;# 
  2255  0F2C                     	;# 
  2256  0F2D                     	;# 
  2257  0FE4                     	;# 
  2258  0FE5                     	;# 
  2259  0FE6                     	;# 
  2260  0FE7                     	;# 
  2261  0FE8                     	;# 
  2262  0FE9                     	;# 
  2263  0FEA                     	;# 
  2264  0FEB                     	;# 
  2265  0FED                     	;# 
  2266  0FEE                     	;# 
  2267  0FEF                     	;# 
  2268  0000                     	;# 
  2269  0001                     	;# 
  2270  0002                     	;# 
  2271  0003                     	;# 
  2272  0004                     	;# 
  2273  0005                     	;# 
  2274  0006                     	;# 
  2275  0007                     	;# 
  2276  0008                     	;# 
  2277  0009                     	;# 
  2278  000A                     	;# 
  2279  000B                     	;# 
  2280  000C                     	;# 
  2281  000D                     	;# 
  2282  000E                     	;# 
  2283  0011                     	;# 
  2284  0012                     	;# 
  2285  0013                     	;# 
  2286  0014                     	;# 
  2287  0015                     	;# 
  2288  0016                     	;# 
  2289  0016                     	;# 
  2290  0017                     	;# 
  2291  0018                     	;# 
  2292  0019                     	;# 
  2293  001A                     	;# 
  2294  001A                     	;# 
  2295  001B                     	;# 
  2296  001B                     	;# 
  2297  001C                     	;# 
  2298  001D                     	;# 
  2299  001E                     	;# 
  2300  001F                     	;# 
  2301  008C                     	;# 
  2302  008D                     	;# 
  2303  008E                     	;# 
  2304  0091                     	;# 
  2305  0092                     	;# 
  2306  0093                     	;# 
  2307  0094                     	;# 
  2308  0095                     	;# 
  2309  0096                     	;# 
  2310  0097                     	;# 
  2311  0098                     	;# 
  2312  0099                     	;# 
  2313  009A                     	;# 
  2314  009B                     	;# 
  2315  009B                     	;# 
  2316  009C                     	;# 
  2317  009D                     	;# 
  2318  009E                     	;# 
  2319  009F                     	;# 
  2320  010C                     	;# 
  2321  010D                     	;# 
  2322  010E                     	;# 
  2323  010F                     	;# 
  2324  0110                     	;# 
  2325  0111                     	;# 
  2326  0112                     	;# 
  2327  0113                     	;# 
  2328  0114                     	;# 
  2329  0115                     	;# 
  2330  0116                     	;# 
  2331  0117                     	;# 
  2332  0118                     	;# 
  2333  0119                     	;# 
  2334  011A                     	;# 
  2335  011B                     	;# 
  2336  011C                     	;# 
  2337  011D                     	;# 
  2338  011E                     	;# 
  2339  011F                     	;# 
  2340  018C                     	;# 
  2341  018D                     	;# 
  2342  018E                     	;# 
  2343  0191                     	;# 
  2344  0191                     	;# 
  2345  0192                     	;# 
  2346  0193                     	;# 
  2347  0193                     	;# 
  2348  0194                     	;# 
  2349  0195                     	;# 
  2350  0196                     	;# 
  2351  0197                     	;# 
  2352  0199                     	;# 
  2353  0199                     	;# 
  2354  0199                     	;# 
  2355  019A                     	;# 
  2356  019A                     	;# 
  2357  019A                     	;# 
  2358  019B                     	;# 
  2359  019B                     	;# 
  2360  019B                     	;# 
  2361  019B                     	;# 
  2362  019B                     	;# 
  2363  019C                     	;# 
  2364  019C                     	;# 
  2365  019C                     	;# 
  2366  019D                     	;# 
  2367  019D                     	;# 
  2368  019D                     	;# 
  2369  019E                     	;# 
  2370  019E                     	;# 
  2371  019E                     	;# 
  2372  019F                     	;# 
  2373  019F                     	;# 
  2374  019F                     	;# 
  2375  019F                     	;# 
  2376  019F                     	;# 
  2377  020C                     	;# 
  2378  020D                     	;# 
  2379  020E                     	;# 
  2380  0211                     	;# 
  2381  0211                     	;# 
  2382  0212                     	;# 
  2383  0212                     	;# 
  2384  0213                     	;# 
  2385  0213                     	;# 
  2386  0214                     	;# 
  2387  0214                     	;# 
  2388  0215                     	;# 
  2389  0215                     	;# 
  2390  0215                     	;# 
  2391  0215                     	;# 
  2392  0216                     	;# 
  2393  0216                     	;# 
  2394  0217                     	;# 
  2395  0217                     	;# 
  2396  021D                     	;# 
  2397  021E                     	;# 
  2398  021F                     	;# 
  2399  028C                     	;# 
  2400  028D                     	;# 
  2401  028E                     	;# 
  2402  0291                     	;# 
  2403  0291                     	;# 
  2404  0292                     	;# 
  2405  0293                     	;# 
  2406  0294                     	;# 
  2407  0298                     	;# 
  2408  0298                     	;# 
  2409  0299                     	;# 
  2410  029A                     	;# 
  2411  029B                     	;# 
  2412  029E                     	;# 
  2413  030C                     	;# 
  2414  030D                     	;# 
  2415  030E                     	;# 
  2416  031B                     	;# 
  2417  031C                     	;# 
  2418  031D                     	;# 
  2419  031E                     	;# 
  2420  031F                     	;# 
  2421  038C                     	;# 
  2422  038D                     	;# 
  2423  038E                     	;# 
  2424  0391                     	;# 
  2425  0392                     	;# 
  2426  0393                     	;# 
  2427  0394                     	;# 
  2428  0395                     	;# 
  2429  0396                     	;# 
  2430  0397                     	;# 
  2431  0398                     	;# 
  2432  0399                     	;# 
  2433  039B                     	;# 
  2434  039C                     	;# 
  2435  039D                     	;# 
  2436  039E                     	;# 
  2437  039F                     	;# 
  2438  040E                     	;# 
  2439  0413                     	;# 
  2440  0413                     	;# 
  2441  0414                     	;# 
  2442  0414                     	;# 
  2443  0415                     	;# 
  2444  0416                     	;# 
  2445  0417                     	;# 
  2446  0418                     	;# 
  2447  041A                     	;# 
  2448  041A                     	;# 
  2449  041B                     	;# 
  2450  041B                     	;# 
  2451  041C                     	;# 
  2452  041D                     	;# 
  2453  041E                     	;# 
  2454  041F                     	;# 
  2455  0493                     	;# 
  2456  0493                     	;# 
  2457  0494                     	;# 
  2458  0495                     	;# 
  2459  0496                     	;# 
  2460  049A                     	;# 
  2461  049A                     	;# 
  2462  049B                     	;# 
  2463  049C                     	;# 
  2464  049D                     	;# 
  2465  050F                     	;# 
  2466  0510                     	;# 
  2467  0511                     	;# 
  2468  0512                     	;# 
  2469  0513                     	;# 
  2470  0514                     	;# 
  2471  0515                     	;# 
  2472  0516                     	;# 
  2473  0590                     	;# 
  2474  0591                     	;# 
  2475  0592                     	;# 
  2476  0592                     	;# 
  2477  0592                     	;# 
  2478  0593                     	;# 
  2479  0593                     	;# 
  2480  0594                     	;# 
  2481  0595                     	;# 
  2482  0595                     	;# 
  2483  0595                     	;# 
  2484  0596                     	;# 
  2485  0596                     	;# 
  2486  0597                     	;# 
  2487  0598                     	;# 
  2488  0598                     	;# 
  2489  0599                     	;# 
  2490  059A                     	;# 
  2491  059A                     	;# 
  2492  0617                     	;# 
  2493  0617                     	;# 
  2494  0618                     	;# 
  2495  0619                     	;# 
  2496  061A                     	;# 
  2497  061A                     	;# 
  2498  061B                     	;# 
  2499  061C                     	;# 
  2500  068D                     	;# 
  2501  068E                     	;# 
  2502  068F                     	;# 
  2503  0690                     	;# 
  2504  0691                     	;# 
  2505  0692                     	;# 
  2506  0693                     	;# 
  2507  0694                     	;# 
  2508  0695                     	;# 
  2509  0696                     	;# 
  2510  0697                     	;# 
  2511  0698                     	;# 
  2512  0699                     	;# 
  2513  069A                     	;# 
  2514  069B                     	;# 
  2515  069C                     	;# 
  2516  069D                     	;# 
  2517  069E                     	;# 
  2518  069F                     	;# 
  2519  070D                     	;# 
  2520  070E                     	;# 
  2521  070F                     	;# 
  2522  0710                     	;# 
  2523  0711                     	;# 
  2524  0712                     	;# 
  2525  0713                     	;# 
  2526  0714                     	;# 
  2527  0715                     	;# 
  2528  0716                     	;# 
  2529  0717                     	;# 
  2530  0718                     	;# 
  2531  0719                     	;# 
  2532  071A                     	;# 
  2533  071B                     	;# 
  2534  071C                     	;# 
  2535  071D                     	;# 
  2536  071E                     	;# 
  2537  071F                     	;# 
  2538  0794                     	;# 
  2539  0795                     	;# 
  2540  0796                     	;# 
  2541  0797                     	;# 
  2542  0798                     	;# 
  2543  0799                     	;# 
  2544  079A                     	;# 
  2545  079B                     	;# 
  2546  079C                     	;# 
  2547  079D                     	;# 
  2548  079E                     	;# 
  2549  079F                     	;# 
  2550  0D8E                     	;# 
  2551  0D8F                     	;# 
  2552  0D90                     	;# 
  2553  0D91                     	;# 
  2554  0D91                     	;# 
  2555  0D92                     	;# 
  2556  0D93                     	;# 
  2557  0D93                     	;# 
  2558  0D94                     	;# 
  2559  0D95                     	;# 
  2560  0D95                     	;# 
  2561  0D96                     	;# 
  2562  0D97                     	;# 
  2563  0D97                     	;# 
  2564  0D98                     	;# 
  2565  0D99                     	;# 
  2566  0D99                     	;# 
  2567  0D9A                     	;# 
  2568  0D9B                     	;# 
  2569  0D9C                     	;# 
  2570  0D9C                     	;# 
  2571  0D9D                     	;# 
  2572  0D9D                     	;# 
  2573  0D9E                     	;# 
  2574  0D9F                     	;# 
  2575  0DA0                     	;# 
  2576  0DA1                     	;# 
  2577  0DA1                     	;# 
  2578  0DA2                     	;# 
  2579  0DA3                     	;# 
  2580  0DA3                     	;# 
  2581  0DA4                     	;# 
  2582  0DA5                     	;# 
  2583  0DA5                     	;# 
  2584  0DA6                     	;# 
  2585  0DA7                     	;# 
  2586  0DA7                     	;# 
  2587  0DA8                     	;# 
  2588  0DA9                     	;# 
  2589  0DA9                     	;# 
  2590  0DAA                     	;# 
  2591  0DAB                     	;# 
  2592  0DAC                     	;# 
  2593  0DAC                     	;# 
  2594  0DAD                     	;# 
  2595  0DAD                     	;# 
  2596  0DAE                     	;# 
  2597  0DAF                     	;# 
  2598  0DB0                     	;# 
  2599  0E0F                     	;# 
  2600  0E10                     	;# 
  2601  0E11                     	;# 
  2602  0E12                     	;# 
  2603  0E13                     	;# 
  2604  0E14                     	;# 
  2605  0E15                     	;# 
  2606  0E16                     	;# 
  2607  0E17                     	;# 
  2608  0E19                     	;# 
  2609  0E19                     	;# 
  2610  0E19                     	;# 
  2611  0E1A                     	;# 
  2612  0E1B                     	;# 
  2613  0E1C                     	;# 
  2614  0E1C                     	;# 
  2615  0E1C                     	;# 
  2616  0E1D                     	;# 
  2617  0E1E                     	;# 
  2618  0E1F                     	;# 
  2619  0E1F                     	;# 
  2620  0E1F                     	;# 
  2621  0E20                     	;# 
  2622  0E21                     	;# 
  2623  0E22                     	;# 
  2624  0E24                     	;# 
  2625  0E25                     	;# 
  2626  0E28                     	;# 
  2627  0E29                     	;# 
  2628  0E2A                     	;# 
  2629  0E2B                     	;# 
  2630  0E2C                     	;# 
  2631  0E2D                     	;# 
  2632  0E2E                     	;# 
  2633  0E2F                     	;# 
  2634  0E30                     	;# 
  2635  0E31                     	;# 
  2636  0E32                     	;# 
  2637  0E33                     	;# 
  2638  0E34                     	;# 
  2639  0E35                     	;# 
  2640  0E90                     	;# 
  2641  0E91                     	;# 
  2642  0E92                     	;# 
  2643  0E94                     	;# 
  2644  0E95                     	;# 
  2645  0E9C                     	;# 
  2646  0E9D                     	;# 
  2647  0E9E                     	;# 
  2648  0E9F                     	;# 
  2649  0EA0                     	;# 
  2650  0EA1                     	;# 
  2651  0EA2                     	;# 
  2652  0EA3                     	;# 
  2653  0EA4                     	;# 
  2654  0EA5                     	;# 
  2655  0EA6                     	;# 
  2656  0EA7                     	;# 
  2657  0F0F                     	;# 
  2658  0F10                     	;# 
  2659  0F11                     	;# 
  2660  0F12                     	;# 
  2661  0F13                     	;# 
  2662  0F14                     	;# 
  2663  0F15                     	;# 
  2664  0F16                     	;# 
  2665  0F17                     	;# 
  2666  0F18                     	;# 
  2667  0F19                     	;# 
  2668  0F1A                     	;# 
  2669  0F1B                     	;# 
  2670  0F1C                     	;# 
  2671  0F1D                     	;# 
  2672  0F1E                     	;# 
  2673  0F1F                     	;# 
  2674  0F20                     	;# 
  2675  0F21                     	;# 
  2676  0F22                     	;# 
  2677  0F23                     	;# 
  2678  0F24                     	;# 
  2679  0F25                     	;# 
  2680  0F26                     	;# 
  2681  0F27                     	;# 
  2682  0F28                     	;# 
  2683  0F29                     	;# 
  2684  0F2A                     	;# 
  2685  0F2B                     	;# 
  2686  0F2C                     	;# 
  2687  0F2D                     	;# 
  2688  0FE4                     	;# 
  2689  0FE5                     	;# 
  2690  0FE6                     	;# 
  2691  0FE7                     	;# 
  2692  0FE8                     	;# 
  2693  0FE9                     	;# 
  2694  0FEA                     	;# 
  2695  0FEB                     	;# 
  2696  0FED                     	;# 
  2697  0FEE                     	;# 
  2698  0FEF                     	;# 
  2699  0000                     	;# 
  2700  0001                     	;# 
  2701  0002                     	;# 
  2702  0003                     	;# 
  2703  0004                     	;# 
  2704  0005                     	;# 
  2705  0006                     	;# 
  2706  0007                     	;# 
  2707  0008                     	;# 
  2708  0009                     	;# 
  2709  000A                     	;# 
  2710  000B                     	;# 
  2711  000C                     	;# 
  2712  000D                     	;# 
  2713  000E                     	;# 
  2714  0011                     	;# 
  2715  0012                     	;# 
  2716  0013                     	;# 
  2717  0014                     	;# 
  2718  0015                     	;# 
  2719  0016                     	;# 
  2720  0016                     	;# 
  2721  0017                     	;# 
  2722  0018                     	;# 
  2723  0019                     	;# 
  2724  001A                     	;# 
  2725  001A                     	;# 
  2726  001B                     	;# 
  2727  001B                     	;# 
  2728  001C                     	;# 
  2729  001D                     	;# 
  2730  001E                     	;# 
  2731  001F                     	;# 
  2732  008C                     	;# 
  2733  008D                     	;# 
  2734  008E                     	;# 
  2735  0091                     	;# 
  2736  0092                     	;# 
  2737  0093                     	;# 
  2738  0094                     	;# 
  2739  0095                     	;# 
  2740  0096                     	;# 
  2741  0097                     	;# 
  2742  0098                     	;# 
  2743  0099                     	;# 
  2744  009A                     	;# 
  2745  009B                     	;# 
  2746  009B                     	;# 
  2747  009C                     	;# 
  2748  009D                     	;# 
  2749  009E                     	;# 
  2750  009F                     	;# 
  2751  010C                     	;# 
  2752  010D                     	;# 
  2753  010E                     	;# 
  2754  010F                     	;# 
  2755  0110                     	;# 
  2756  0111                     	;# 
  2757  0112                     	;# 
  2758  0113                     	;# 
  2759  0114                     	;# 
  2760  0115                     	;# 
  2761  0116                     	;# 
  2762  0117                     	;# 
  2763  0118                     	;# 
  2764  0119                     	;# 
  2765  011A                     	;# 
  2766  011B                     	;# 
  2767  011C                     	;# 
  2768  011D                     	;# 
  2769  011E                     	;# 
  2770  011F                     	;# 
  2771  018C                     	;# 
  2772  018D                     	;# 
  2773  018E                     	;# 
  2774  0191                     	;# 
  2775  0191                     	;# 
  2776  0192                     	;# 
  2777  0193                     	;# 
  2778  0193                     	;# 
  2779  0194                     	;# 
  2780  0195                     	;# 
  2781  0196                     	;# 
  2782  0197                     	;# 
  2783  0199                     	;# 
  2784  0199                     	;# 
  2785  0199                     	;# 
  2786  019A                     	;# 
  2787  019A                     	;# 
  2788  019A                     	;# 
  2789  019B                     	;# 
  2790  019B                     	;# 
  2791  019B                     	;# 
  2792  019B                     	;# 
  2793  019B                     	;# 
  2794  019C                     	;# 
  2795  019C                     	;# 
  2796  019C                     	;# 
  2797  019D                     	;# 
  2798  019D                     	;# 
  2799  019D                     	;# 
  2800  019E                     	;# 
  2801  019E                     	;# 
  2802  019E                     	;# 
  2803  019F                     	;# 
  2804  019F                     	;# 
  2805  019F                     	;# 
  2806  019F                     	;# 
  2807  019F                     	;# 
  2808  020C                     	;# 
  2809  020D                     	;# 
  2810  020E                     	;# 
  2811  0211                     	;# 
  2812  0211                     	;# 
  2813  0212                     	;# 
  2814  0212                     	;# 
  2815  0213                     	;# 
  2816  0213                     	;# 
  2817  0214                     	;# 
  2818  0214                     	;# 
  2819  0215                     	;# 
  2820  0215                     	;# 
  2821  0215                     	;# 
  2822  0215                     	;# 
  2823  0216                     	;# 
  2824  0216                     	;# 
  2825  0217                     	;# 
  2826  0217                     	;# 
  2827  021D                     	;# 
  2828  021E                     	;# 
  2829  021F                     	;# 
  2830  028C                     	;# 
  2831  028D                     	;# 
  2832  028E                     	;# 
  2833  0291                     	;# 
  2834  0291                     	;# 
  2835  0292                     	;# 
  2836  0293                     	;# 
  2837  0294                     	;# 
  2838  0298                     	;# 
  2839  0298                     	;# 
  2840  0299                     	;# 
  2841  029A                     	;# 
  2842  029B                     	;# 
  2843  029E                     	;# 
  2844  030C                     	;# 
  2845  030D                     	;# 
  2846  030E                     	;# 
  2847  031B                     	;# 
  2848  031C                     	;# 
  2849  031D                     	;# 
  2850  031E                     	;# 
  2851  031F                     	;# 
  2852  038C                     	;# 
  2853  038D                     	;# 
  2854  038E                     	;# 
  2855  0391                     	;# 
  2856  0392                     	;# 
  2857  0393                     	;# 
  2858  0394                     	;# 
  2859  0395                     	;# 
  2860  0396                     	;# 
  2861  0397                     	;# 
  2862  0398                     	;# 
  2863  0399                     	;# 
  2864  039B                     	;# 
  2865  039C                     	;# 
  2866  039D                     	;# 
  2867  039E                     	;# 
  2868  039F                     	;# 
  2869  040E                     	;# 
  2870  0413                     	;# 
  2871  0413                     	;# 
  2872  0414                     	;# 
  2873  0414                     	;# 
  2874  0415                     	;# 
  2875  0416                     	;# 
  2876  0417                     	;# 
  2877  0418                     	;# 
  2878  041A                     	;# 
  2879  041A                     	;# 
  2880  041B                     	;# 
  2881  041B                     	;# 
  2882  041C                     	;# 
  2883  041D                     	;# 
  2884  041E                     	;# 
  2885  041F                     	;# 
  2886  0493                     	;# 
  2887  0493                     	;# 
  2888  0494                     	;# 
  2889  0495                     	;# 
  2890  0496                     	;# 
  2891  049A                     	;# 
  2892  049A                     	;# 
  2893  049B                     	;# 
  2894  049C                     	;# 
  2895  049D                     	;# 
  2896  050F                     	;# 
  2897  0510                     	;# 
  2898  0511                     	;# 
  2899  0512                     	;# 
  2900  0513                     	;# 
  2901  0514                     	;# 
  2902  0515                     	;# 
  2903  0516                     	;# 
  2904  0590                     	;# 
  2905  0591                     	;# 
  2906  0592                     	;# 
  2907  0592                     	;# 
  2908  0592                     	;# 
  2909  0593                     	;# 
  2910  0593                     	;# 
  2911  0594                     	;# 
  2912  0595                     	;# 
  2913  0595                     	;# 
  2914  0595                     	;# 
  2915  0596                     	;# 
  2916  0596                     	;# 
  2917  0597                     	;# 
  2918  0598                     	;# 
  2919  0598                     	;# 
  2920  0599                     	;# 
  2921  059A                     	;# 
  2922  059A                     	;# 
  2923  0617                     	;# 
  2924  0617                     	;# 
  2925  0618                     	;# 
  2926  0619                     	;# 
  2927  061A                     	;# 
  2928  061A                     	;# 
  2929  061B                     	;# 
  2930  061C                     	;# 
  2931  068D                     	;# 
  2932  068E                     	;# 
  2933  068F                     	;# 
  2934  0690                     	;# 
  2935  0691                     	;# 
  2936  0692                     	;# 
  2937  0693                     	;# 
  2938  0694                     	;# 
  2939  0695                     	;# 
  2940  0696                     	;# 
  2941  0697                     	;# 
  2942  0698                     	;# 
  2943  0699                     	;# 
  2944  069A                     	;# 
  2945  069B                     	;# 
  2946  069C                     	;# 
  2947  069D                     	;# 
  2948  069E                     	;# 
  2949  069F                     	;# 
  2950  070D                     	;# 
  2951  070E                     	;# 
  2952  070F                     	;# 
  2953  0710                     	;# 
  2954  0711                     	;# 
  2955  0712                     	;# 
  2956  0713                     	;# 
  2957  0714                     	;# 
  2958  0715                     	;# 
  2959  0716                     	;# 
  2960  0717                     	;# 
  2961  0718                     	;# 
  2962  0719                     	;# 
  2963  071A                     	;# 
  2964  071B                     	;# 
  2965  071C                     	;# 
  2966  071D                     	;# 
  2967  071E                     	;# 
  2968  071F                     	;# 
  2969  0794                     	;# 
  2970  0795                     	;# 
  2971  0796                     	;# 
  2972  0797                     	;# 
  2973  0798                     	;# 
  2974  0799                     	;# 
  2975  079A                     	;# 
  2976  079B                     	;# 
  2977  079C                     	;# 
  2978  079D                     	;# 
  2979  079E                     	;# 
  2980  079F                     	;# 
  2981  0D8E                     	;# 
  2982  0D8F                     	;# 
  2983  0D90                     	;# 
  2984  0D91                     	;# 
  2985  0D91                     	;# 
  2986  0D92                     	;# 
  2987  0D93                     	;# 
  2988  0D93                     	;# 
  2989  0D94                     	;# 
  2990  0D95                     	;# 
  2991  0D95                     	;# 
  2992  0D96                     	;# 
  2993  0D97                     	;# 
  2994  0D97                     	;# 
  2995  0D98                     	;# 
  2996  0D99                     	;# 
  2997  0D99                     	;# 
  2998  0D9A                     	;# 
  2999  0D9B                     	;# 
  3000  0D9C                     	;# 
  3001  0D9C                     	;# 
  3002  0D9D                     	;# 
  3003  0D9D                     	;# 
  3004  0D9E                     	;# 
  3005  0D9F                     	;# 
  3006  0DA0                     	;# 
  3007  0DA1                     	;# 
  3008  0DA1                     	;# 
  3009  0DA2                     	;# 
  3010  0DA3                     	;# 
  3011  0DA3                     	;# 
  3012  0DA4                     	;# 
  3013  0DA5                     	;# 
  3014  0DA5                     	;# 
  3015  0DA6                     	;# 
  3016  0DA7                     	;# 
  3017  0DA7                     	;# 
  3018  0DA8                     	;# 
  3019  0DA9                     	;# 
  3020  0DA9                     	;# 
  3021  0DAA                     	;# 
  3022  0DAB                     	;# 
  3023  0DAC                     	;# 
  3024  0DAC                     	;# 
  3025  0DAD                     	;# 
  3026  0DAD                     	;# 
  3027  0DAE                     	;# 
  3028  0DAF                     	;# 
  3029  0DB0                     	;# 
  3030  0E0F                     	;# 
  3031  0E10                     	;# 
  3032  0E11                     	;# 
  3033  0E12                     	;# 
  3034  0E13                     	;# 
  3035  0E14                     	;# 
  3036  0E15                     	;# 
  3037  0E16                     	;# 
  3038  0E17                     	;# 
  3039  0E19                     	;# 
  3040  0E19                     	;# 
  3041  0E19                     	;# 
  3042  0E1A                     	;# 
  3043  0E1B                     	;# 
  3044  0E1C                     	;# 
  3045  0E1C                     	;# 
  3046  0E1C                     	;# 
  3047  0E1D                     	;# 
  3048  0E1E                     	;# 
  3049  0E1F                     	;# 
  3050  0E1F                     	;# 
  3051  0E1F                     	;# 
  3052  0E20                     	;# 
  3053  0E21                     	;# 
  3054  0E22                     	;# 
  3055  0E24                     	;# 
  3056  0E25                     	;# 
  3057  0E28                     	;# 
  3058  0E29                     	;# 
  3059  0E2A                     	;# 
  3060  0E2B                     	;# 
  3061  0E2C                     	;# 
  3062  0E2D                     	;# 
  3063  0E2E                     	;# 
  3064  0E2F                     	;# 
  3065  0E30                     	;# 
  3066  0E31                     	;# 
  3067  0E32                     	;# 
  3068  0E33                     	;# 
  3069  0E34                     	;# 
  3070  0E35                     	;# 
  3071  0E90                     	;# 
  3072  0E91                     	;# 
  3073  0E92                     	;# 
  3074  0E94                     	;# 
  3075  0E95                     	;# 
  3076  0E9C                     	;# 
  3077  0E9D                     	;# 
  3078  0E9E                     	;# 
  3079  0E9F                     	;# 
  3080  0EA0                     	;# 
  3081  0EA1                     	;# 
  3082  0EA2                     	;# 
  3083  0EA3                     	;# 
  3084  0EA4                     	;# 
  3085  0EA5                     	;# 
  3086  0EA6                     	;# 
  3087  0EA7                     	;# 
  3088  0F0F                     	;# 
  3089  0F10                     	;# 
  3090  0F11                     	;# 
  3091  0F12                     	;# 
  3092  0F13                     	;# 
  3093  0F14                     	;# 
  3094  0F15                     	;# 
  3095  0F16                     	;# 
  3096  0F17                     	;# 
  3097  0F18                     	;# 
  3098  0F19                     	;# 
  3099  0F1A                     	;# 
  3100  0F1B                     	;# 
  3101  0F1C                     	;# 
  3102  0F1D                     	;# 
  3103  0F1E                     	;# 
  3104  0F1F                     	;# 
  3105  0F20                     	;# 
  3106  0F21                     	;# 
  3107  0F22                     	;# 
  3108  0F23                     	;# 
  3109  0F24                     	;# 
  3110  0F25                     	;# 
  3111  0F26                     	;# 
  3112  0F27                     	;# 
  3113  0F28                     	;# 
  3114  0F29                     	;# 
  3115  0F2A                     	;# 
  3116  0F2B                     	;# 
  3117  0F2C                     	;# 
  3118  0F2D                     	;# 
  3119  0FE4                     	;# 
  3120  0FE5                     	;# 
  3121  0FE6                     	;# 
  3122  0FE7                     	;# 
  3123  0FE8                     	;# 
  3124  0FE9                     	;# 
  3125  0FEA                     	;# 
  3126  0FEB                     	;# 
  3127  0FED                     	;# 
  3128  0FEE                     	;# 
  3129  0FEF                     	;# 
  3130                           
  3131 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  3132  0000                     
  3133 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  3134  0000                     
  3135 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  3136  0000                     
  3137                           	psect	stringtext1
  3138  084A                     __pstringtext1:
  3139  084A                     _i2c_fsmStateTable:
  3140  084A  340E               	retlw	low _I2C_DO_IDLE
  3141  084B  3404               	retlw	high _I2C_DO_IDLE
  3142  084C  347B               	retlw	low _I2C_DO_SEND_ADR_READ
  3143  084D  3404               	retlw	high _I2C_DO_SEND_ADR_READ
  3144  084E  346B               	retlw	low _I2C_DO_SEND_ADR_WRITE
  3145  084F  3404               	retlw	high _I2C_DO_SEND_ADR_WRITE
  3146  0850  3439               	retlw	low _I2C_DO_TX
  3147  0851  3407               	retlw	high _I2C_DO_TX
  3148  0852  34F3               	retlw	low _I2C_DO_RX
  3149  0853  3406               	retlw	high _I2C_DO_RX
  3150  0854  3464               	retlw	low _I2C_DO_RCEN
  3151  0855  3404               	retlw	high _I2C_DO_RCEN
  3152  0856  3450               	retlw	low _I2C_DO_TX_EMPTY
  3153  0857  3406               	retlw	high _I2C_DO_TX_EMPTY
  3154  0858  3413               	retlw	low _I2C_DO_SEND_RESTART_READ
  3155  0859  3404               	retlw	high _I2C_DO_SEND_RESTART_READ
  3156  085A  3418               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  3157  085B  3404               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  3158  085C  341D               	retlw	low _I2C_DO_SEND_RESTART
  3159  085D  3404               	retlw	high _I2C_DO_SEND_RESTART
  3160  085E  3422               	retlw	low _I2C_DO_SEND_STOP
  3161  085F  3404               	retlw	high _I2C_DO_SEND_STOP
  3162  0860  3427               	retlw	low _I2C_DO_RX_ACK
  3163  0861  3404               	retlw	high _I2C_DO_RX_ACK
  3164  0862  342C               	retlw	low _I2C_DO_RX_NACK_STOP
  3165  0863  3404               	retlw	high _I2C_DO_RX_NACK_STOP
  3166  0864  3431               	retlw	low _I2C_DO_RX_NACK_RESTART
  3167  0865  3404               	retlw	high _I2C_DO_RX_NACK_RESTART
  3168  0866  3436               	retlw	low _I2C_DO_RESET
  3169  0867  3404               	retlw	high _I2C_DO_RESET
  3170  0868  3424               	retlw	low _I2C_DO_ADDRESS_NACK
  3171  0869  3406               	retlw	high _I2C_DO_ADDRESS_NACK
  3172  086A                     __end_of_i2c_fsmStateTable:
  3173                           
  3174                           	psect	nvBANK0
  3175  003F                     __pnvBANK0:
  3176  003F                     _EUSART_ErrorHandler:
  3177  003F                     	ds	2
  3178  0041                     _EUSART_OverrunErrorHandler:
  3179  0041                     	ds	2
  3180  0043                     _EUSART_FramingErrorHandler:
  3181  0043                     	ds	2
  3182  0012                     _PIR2bits	set	18
  3183  0011                     _PIR1bits	set	17
  3184  000B                     _INTCONbits	set	11
  3185  008C                     _TXIF	set	140
  3186  0091                     _PIE1bits	set	145
  3187  009D                     _ADCON0bits	set	157
  3188  009D                     _ADCON0	set	157
  3189  009C                     _ADRESH	set	156
  3190  009B                     _ADRESL	set	155
  3191  009F                     _ADCON2	set	159
  3192  009E                     _ADCON1	set	158
  3193  0095                     _OPTION_REGbits	set	149
  3194  008E                     _TRISC	set	142
  3195  008D                     _TRISB	set	141
  3196  008C                     _TRISA	set	140
  3197  0097                     _WDTCON	set	151
  3198  0098                     _OSCTUNE	set	152
  3199  009A                     _OSCSTAT	set	154
  3200  0099                     _OSCCON	set	153
  3201  010E                     _LATC	set	270
  3202  010D                     _LATB	set	269
  3203  010C                     _LATA	set	268
  3204  019A                     _TXREG	set	410
  3205  019A                     _TX1REG	set	410
  3206  0199                     _RC1REG	set	409
  3207  019D                     _RC1STAbits	set	413
  3208  019E                     _TX1STAbits	set	414
  3209  019C                     _SPBRGH	set	412
  3210  019B                     _SPBRGL	set	411
  3211  019E                     _TX1STA	set	414
  3212  019D                     _RC1STA	set	413
  3213  019F                     _BAUD1CON	set	415
  3214  0196                     _PMCON2	set	406
  3215  0193                     _PMDATL	set	403
  3216  0194                     _PMDATH	set	404
  3217  0195                     _PMCON1bits	set	405
  3218  0192                     _PMADRH	set	402
  3219  0191                     _PMADRL	set	401
  3220  018C                     _ANSELA	set	396
  3221  018D                     _ANSELB	set	397
  3222  018E                     _ANSELC	set	398
  3223  0214                     _SSP1STATbits	set	532
  3224  0216                     _SSP1CON2bits	set	534
  3225  0211                     _SSP1BUF	set	529
  3226  0215                     _SSP1CON1bits	set	533
  3227  0212                     _SSP1ADD	set	530
  3228  0216                     _SSP1CON2	set	534
  3229  0215                     _SSP1CON1	set	533
  3230  0214                     _SSP1STAT	set	532
  3231  020E                     _WPUC	set	526
  3232  020C                     _WPUA	set	524
  3233  020D                     _WPUB	set	525
  3234  021D                     _BORCON	set	541
  3235  028E                     _ODCONC	set	654
  3236  028D                     _ODCONB	set	653
  3237  028C                     _ODCONA	set	652
  3238  030E                     _SLRCONC	set	782
  3239  030D                     _SLRCONB	set	781
  3240  030C                     _SLRCONA	set	780
  3241  038E                     _INLVLC	set	910
  3242  038D                     _INLVLB	set	909
  3243  038C                     _INLVLA	set	908
  3244  0E20                     _SSPCLKPPS	set	3616
  3245  0E21                     _SSPDATPPS	set	3617
  3246  0E24                     _RXPPS	set	3620
  3247  0E9C                     _RB4PPS	set	3740
  3248  0E9F                     _RB7PPS	set	3743
  3249  0E9E                     _RB6PPS	set	3742
  3250                           
  3251                           	psect	stringtext2
  3252  0800                     __pstringtext2:
  3253  0800                     STR_1:
  3254  0800  344A               	retlw	74	;'J'
  3255  0801  3447               	retlw	71	;'G'
  3256  0802  3436               	retlw	54	;'6'
  3257  0803  3420               	retlw	32	;' '
  3258  0804  3445               	retlw	69	;'E'
  3259  0805  3473               	retlw	115	;'s'
  3260  0806  3420               	retlw	32	;' '
  3261  0807  346D               	retlw	109	;'m'
  3262  0808  3461               	retlw	97	;'a'
  3263  0809  3479               	retlw	121	;'y'
  3264  080A  346F               	retlw	111	;'o'
  3265  080B  3472               	retlw	114	;'r'
  3266  080C  3420               	retlw	32	;' '
  3267  080D  3461               	retlw	97	;'a'
  3268  080E  3420               	retlw	32	;' '
  3269  080F  3463               	retlw	99	;'c'
  3270  0810  3465               	retlw	101	;'e'
  3271  0811  3472               	retlw	114	;'r'
  3272  0812  346F               	retlw	111	;'o'
  3273  0813  3420               	retlw	32	;' '
  3274  0814  3479               	retlw	121	;'y'
  3275  0815  3420               	retlw	32	;' '
  3276  0816  346D               	retlw	109	;'m'
  3277  0817  3465               	retlw	101	;'e'
  3278  0818  346E               	retlw	110	;'n'
  3279  0819  346F               	retlw	111	;'o'
  3280  081A  3472               	retlw	114	;'r'
  3281  081B  3420               	retlw	32	;' '
  3282  081C  3461               	retlw	97	;'a'
  3283  081D  3420               	retlw	32	;' '
  3284  081E  3435               	retlw	53	;'5'
  3285  081F  3430               	retlw	48	;'0'
  3286  0820  3430               	retlw	48	;'0'
  3287  0821  3420               	retlw	32	;' '
  3288  0822  340D               	retlw	13
  3289  0823  340A               	retlw	10
  3290  0824  3400               	retlw	0
  3291                           
  3292                           	psect	stringtext3
  3293  0825                     __pstringtext3:
  3294  0825                     STR_2:
  3295  0825  344A               	retlw	74	;'J'
  3296  0826  3447               	retlw	71	;'G'
  3297  0827  3436               	retlw	54	;'6'
  3298  0828  3420               	retlw	32	;' '
  3299  0829  3445               	retlw	69	;'E'
  3300  082A  3473               	retlw	115	;'s'
  3301  082B  3420               	retlw	32	;' '
  3302  082C  346D               	retlw	109	;'m'
  3303  082D  3461               	retlw	97	;'a'
  3304  082E  3479               	retlw	121	;'y'
  3305  082F  346F               	retlw	111	;'o'
  3306  0830  3472               	retlw	114	;'r'
  3307  0831  3420               	retlw	32	;' '
  3308  0832  3461               	retlw	97	;'a'
  3309  0833  3420               	retlw	32	;' '
  3310  0834  3435               	retlw	53	;'5'
  3311  0835  3430               	retlw	48	;'0'
  3312  0836  3430               	retlw	48	;'0'
  3313  0837  3420               	retlw	32	;' '
  3314  0838  3479               	retlw	121	;'y'
  3315  0839  3420               	retlw	32	;' '
  3316  083A  346D               	retlw	109	;'m'
  3317  083B  3465               	retlw	101	;'e'
  3318  083C  346E               	retlw	110	;'n'
  3319  083D  346F               	retlw	111	;'o'
  3320  083E  3472               	retlw	114	;'r'
  3321  083F  3420               	retlw	32	;' '
  3322  0840  3461               	retlw	97	;'a'
  3323  0841  3420               	retlw	32	;' '
  3324  0842  3431               	retlw	49	;'1'
  3325  0843  3430               	retlw	48	;'0'
  3326  0844  3432               	retlw	50	;'2'
  3327  0845  3434               	retlw	52	;'4'
  3328  0846  3420               	retlw	32	;' '
  3329  0847  340D               	retlw	13
  3330  0848  340A               	retlw	10
  3331  0849  3400               	retlw	0
  3332                           
  3333                           	psect	stringtext4
  3334  0000                     __pstringtext4:
  3335                           
  3336                           	psect	cinit
  3337  07F4                     start_initialization:	
  3338                           ; #config settings
  3339                           
  3340  07F4                     __initialization:
  3341                           
  3342                           ; Clear objects allocated to COMMON
  3343  07F4  01FC               	clrf	__pbssCOMMON& (0+127)
  3344                           
  3345                           ; Clear objects allocated to BANK0
  3346  07F5  3020               	movlw	low __pbssBANK0
  3347  07F6  0084               	movwf	4
  3348  07F7  3000               	movlw	high __pbssBANK0
  3349  07F8  0085               	movwf	5
  3350  07F9  301F               	movlw	31
  3351  07FA  3184  245E  3187   	fcall	clear_ram0
  3352  07FD                     end_of_initialization:	
  3353                           ;End of C runtime variable initialization code
  3354                           
  3355  07FD                     __end_of__initialization:
  3356  07FD  0020               	movlb	0
  3357  07FE  3187  2F8E         	ljmp	_main	;jump to C main() function
  3358                           
  3359                           	psect	bssCOMMON
  3360  007C                     __pbssCOMMON:
  3361  007C                     _eusartRxLastError:
  3362  007C                     	ds	1
  3363                           
  3364                           	psect	bssBANK0
  3365  0020                     __pbssBANK0:
  3366  0020                     _I2C_Status:
  3367  0020                     	ds	29
  3368  003D                     _ADC_InterruptHandler:
  3369  003D                     	ds	2
  3370                           
  3371                           	psect	clrtext
  3372  045E                     clear_ram0:	
  3373                           ;	Called with FSR0 containing the base address, and
  3374                           ;	WREG with the size to clear
  3375                           
  3376  045E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3377  045F                     clrloop0:
  3378  045F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3379  0460  3101               	addfsr 0,1
  3380  0461  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3381  0462  2C5F               	goto	clrloop0	;have we reached the end yet?
  3382  0463  3400               	retlw	0	;all done for this memory range, return
  3383                           
  3384                           	psect	cstackCOMMON
  3385  0070                     __pcstackCOMMON:
  3386  0070                     ?_I2C_Initialize:
  3387  0070                     ??_I2C_Initialize:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390  0070                     ?_PIN_MANAGER_Initialize:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393  0070                     ??_PIN_MANAGER_Initialize:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396  0070                     ?_OSCILLATOR_Initialize:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399  0070                     ??_OSCILLATOR_Initialize:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0070                     ?_WDT_Initialize:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405  0070                     ??_WDT_Initialize:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408  0070                     ?_ADC_Initialize:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0070                     ??_ADC_Initialize:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0070                     ?_EUSART_Initialize:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0070                     ?_EUSART_SetFramingErrorHandler:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0070                     ?_EUSART_SetOverrunErrorHandler:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ?_EUSART_SetErrorHandler:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ?_I2C_Open:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ??_I2C_Open:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ?_I2C_MasterRead:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_I2C_Close:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ??_I2C_Close:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ?_I2C_DO_IDLE:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  0070                     ??_I2C_DO_IDLE:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  0070                     ?_I2C_DO_SEND_ADR_READ:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  0070                     ??_I2C_DO_SEND_ADR_READ:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ?_I2C_DO_TX:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  0070                     ?_I2C_DO_RX:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  0070                     ??_I2C_DO_RX:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  0070                     ?_I2C_DO_RCEN:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  0070                     ??_I2C_DO_RCEN:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  0070                     ?_I2C_DO_TX_EMPTY:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  0070                     ??_I2C_DO_TX_EMPTY:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ?_I2C_DO_SEND_RESTART:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492  0070                     ??_I2C_DO_SEND_RESTART:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  0070                     ?_I2C_DO_SEND_STOP:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  0070                     ??_I2C_DO_SEND_STOP:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     ?_I2C_DO_RX_ACK:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  0070                     ??_I2C_DO_RX_ACK:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  0070                     ?_I2C_DO_RX_NACK_STOP:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  0070                     ??_I2C_DO_RX_NACK_STOP:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  0070                     ?_I2C_DO_RESET:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522  0070                     ??_I2C_DO_RESET:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525  0070                     ?_I2C_DO_ADDRESS_NACK:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528  0070                     ??_I2C_DO_ADDRESS_NACK:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531  0070                     ?_I2C_MasterClearIrq:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534  0070                     ??_I2C_MasterClearIrq:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537  0070                     ?_I2C_MasterOpen:	
  3538                           ; 1 bytes @ 0x0
  3539                           
  3540  0070                     ??_I2C_MasterOpen:	
  3541                           ; 1 bytes @ 0x0
  3542                           
  3543  0070                     ?_I2C_MasterDisableIrq:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546  0070                     ??_I2C_MasterDisableIrq:	
  3547                           ; 1 bytes @ 0x0
  3548                           
  3549  0070                     ?_I2C_MasterClose:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552  0070                     ??_I2C_MasterClose:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0070                     ?_I2C_MasterStart:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0070                     ??_I2C_MasterStart:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0070                     ?_I2C_Poller:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0070                     ?_I2C_SetCallback:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0070                     ?_I2C_MasterWaitForEvent:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0070                     ??_I2C_MasterWaitForEvent:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0070                     ?_I2C_MasterFsm:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0070                     ?_I2C_MasterIsNack:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0070                     ??_I2C_MasterIsNack:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0070                     ?_I2C_MasterSendTxData:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0070                     ??_I2C_MasterSendTxData:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0070                     ?_I2C_MasterGetRxData:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0070                     ??_I2C_MasterGetRxData:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0070                     ?_I2C_MasterSendAck:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0070                     ??_I2C_MasterSendAck:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0070                     ?_I2C_MasterStartRx:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0070                     ??_I2C_MasterStartRx:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0070                     ?_I2C_MasterSetIrq:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0070                     ??_I2C_MasterSetIrq:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0070                     ?_I2C_MasterEnableRestart:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0070                     ??_I2C_MasterEnableRestart:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0070                     ?_I2C_MasterStop:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0070                     ??_I2C_MasterStop:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  0070                     ?_I2C_MasterSendNack:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0070                     ??_I2C_MasterSendNack:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0070                     ?_SYSTEM_Initialize:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0070                     ?_UART_send_char:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0070                     ??_UART_send_char:	
  3637                           ; 1 bytes @ 0x0
  3638                           
  3639  0070                     ?_main:	
  3640                           ; 1 bytes @ 0x0
  3641                           
  3642  0070                     ?_I2C_MasterOperation:	
  3643                           ; 1 bytes @ 0x0
  3644                           
  3645  0070                     ?_I2C_SetBuffer:	
  3646                           ; 1 bytes @ 0x0
  3647                           
  3648  0070                     ?_ADC_GetConversion:	
  3649                           ; 1 bytes @ 0x0
  3650                           
  3651  0070                     UART_send_char@bt:	
  3652                           ; 2 bytes @ 0x0
  3653                           
  3654  0070                     I2C_MasterSendTxData@data:	
  3655                           ; 1 bytes @ 0x0
  3656                           
  3657  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3658                           ; 1 bytes @ 0x0
  3659                           
  3660  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3661                           ; 2 bytes @ 0x0
  3662                           
  3663  0070                     EUSART_SetErrorHandler@interruptHandler:	
  3664                           ; 2 bytes @ 0x0
  3665                           
  3666  0070                     I2C_SetBuffer@bufferSize:	
  3667                           ; 2 bytes @ 0x0
  3668                           
  3669  0070                     I2C_SetCallback@cb:	
  3670                           ; 2 bytes @ 0x0
  3671                           
  3672                           
  3673                           ; 2 bytes @ 0x0
  3674  0070                     	ds	1
  3675  0071                     ??_I2C_DO_SEND_ADR_WRITE:
  3676  0071                     ??_I2C_DO_TX:	
  3677                           ; 1 bytes @ 0x1
  3678                           
  3679  0071                     ?_UART_send_string:	
  3680                           ; 1 bytes @ 0x1
  3681                           
  3682  0071                     I2C_Open@address:	
  3683                           ; 1 bytes @ 0x1
  3684                           
  3685  0071                     I2C_Close@returnValue:	
  3686                           ; 1 bytes @ 0x1
  3687                           
  3688  0071                     UART_send_string@st_pt:	
  3689                           ; 1 bytes @ 0x1
  3690                           
  3691                           
  3692                           ; 2 bytes @ 0x1
  3693  0071                     	ds	1
  3694  0072                     ??_EUSART_Initialize:
  3695  0072                     ??_EUSART_SetFramingErrorHandler:	
  3696                           ; 1 bytes @ 0x2
  3697                           
  3698  0072                     ??_EUSART_SetOverrunErrorHandler:	
  3699                           ; 1 bytes @ 0x2
  3700                           
  3701  0072                     ??_EUSART_SetErrorHandler:	
  3702                           ; 1 bytes @ 0x2
  3703                           
  3704  0072                     ??_SYSTEM_Initialize:	
  3705                           ; 1 bytes @ 0x2
  3706                           
  3707  0072                     ??_ADC_GetConversion:	
  3708                           ; 1 bytes @ 0x2
  3709                           
  3710  0072                     ??_I2C_SetBuffer:	
  3711                           ; 1 bytes @ 0x2
  3712                           
  3713  0072                     I2C_Open@returnValue:	
  3714                           ; 1 bytes @ 0x2
  3715                           
  3716  0072                     I2C_SetCallback@ptr:	
  3717                           ; 1 bytes @ 0x2
  3718                           
  3719                           
  3720                           ; 1 bytes @ 0x2
  3721  0072                     	ds	1
  3722  0073                     ??_I2C_SetCallback:
  3723  0073                     ??_UART_send_string:	
  3724                           ; 1 bytes @ 0x3
  3725                           
  3726  0073                     ADC_GetConversion@channel:	
  3727                           ; 1 bytes @ 0x3
  3728                           
  3729  0073                     I2C_SetBuffer@buffer:	
  3730                           ; 1 bytes @ 0x3
  3731                           
  3732                           
  3733                           ; 1 bytes @ 0x3
  3734  0073                     	ds	1
  3735  0074                     ??_I2C_MasterFsm:
  3736  0074                     I2C_SetCallback@idx:	
  3737                           ; 1 bytes @ 0x4
  3738                           
  3739                           
  3740                           ; 1 bytes @ 0x4
  3741  0074                     	ds	1
  3742  0075                     ?_I2C_SetDataCompleteCallback:
  3743  0075                     I2C_SetDataCompleteCallback@cb:	
  3744                           ; 1 bytes @ 0x5
  3745                           
  3746                           
  3747                           ; 2 bytes @ 0x5
  3748  0075                     	ds	2
  3749  0077                     ??_I2C_Poller:
  3750  0077                     ??_I2C_MasterOperation:	
  3751                           ; 1 bytes @ 0x7
  3752                           
  3753  0077                     I2C_SetDataCompleteCallback@ptr:	
  3754                           ; 1 bytes @ 0x7
  3755                           
  3756                           
  3757                           ; 1 bytes @ 0x7
  3758  0077                     	ds	1
  3759  0078                     ??_I2C_SetDataCompleteCallback:
  3760  0078                     I2C_MasterOperation@read:	
  3761                           ; 1 bytes @ 0x8
  3762                           
  3763                           
  3764                           ; 1 bytes @ 0x8
  3765  0078                     	ds	1
  3766  0079                     ?_I2C_CallbackReturnStop:
  3767  0079                     ?_I2C_CallbackReturnReset:	
  3768                           ; 1 bytes @ 0x9
  3769                           
  3770  0079                     ?_rd1RegCompleteHandler:	
  3771                           ; 1 bytes @ 0x9
  3772                           
  3773  0079                     ?_rd2RegCompleteHandler:	
  3774                           ; 1 bytes @ 0x9
  3775                           
  3776  0079                     ?_wr1RegCompleteHandler:	
  3777                           ; 1 bytes @ 0x9
  3778                           
  3779  0079                     ?_wr2RegCompleteHandler:	
  3780                           ; 1 bytes @ 0x9
  3781                           
  3782  0079                     ?_rdBlkRegCompleteHandler:	
  3783                           ; 1 bytes @ 0x9
  3784                           
  3785  0079                     I2C_MasterOperation@returnValue:	
  3786                           ; 1 bytes @ 0x9
  3787                           
  3788  0079                     I2C_CallbackReturnStop@funPtr:	
  3789                           ; 1 bytes @ 0x9
  3790                           
  3791  0079                     I2C_CallbackReturnReset@funPtr:	
  3792                           ; 1 bytes @ 0x9
  3793                           
  3794  0079                     rd1RegCompleteHandler@ptr:	
  3795                           ; 1 bytes @ 0x9
  3796                           
  3797  0079                     rd2RegCompleteHandler@ptr:	
  3798                           ; 1 bytes @ 0x9
  3799                           
  3800  0079                     wr1RegCompleteHandler@ptr:	
  3801                           ; 1 bytes @ 0x9
  3802                           
  3803  0079                     wr2RegCompleteHandler@ptr:	
  3804                           ; 1 bytes @ 0x9
  3805                           
  3806  0079                     rdBlkRegCompleteHandler@ptr:	
  3807                           ; 1 bytes @ 0x9
  3808                           
  3809                           
  3810                           ; 1 bytes @ 0x9
  3811  0079                     	ds	1
  3812  007A                     ??_I2C_MasterRead:
  3813  007A                     ??_I2C_CallbackReturnStop:	
  3814                           ; 1 bytes @ 0xA
  3815                           
  3816  007A                     ??_I2C_CallbackReturnReset:	
  3817                           ; 1 bytes @ 0xA
  3818                           
  3819  007A                     ??_rd1RegCompleteHandler:	
  3820                           ; 1 bytes @ 0xA
  3821                           
  3822  007A                     ??_rd2RegCompleteHandler:	
  3823                           ; 1 bytes @ 0xA
  3824                           
  3825  007A                     ??_wr1RegCompleteHandler:	
  3826                           ; 1 bytes @ 0xA
  3827                           
  3828  007A                     ??_wr2RegCompleteHandler:	
  3829                           ; 1 bytes @ 0xA
  3830                           
  3831  007A                     ??_rdBlkRegCompleteHandler:	
  3832                           ; 1 bytes @ 0xA
  3833                           
  3834  007A                     ??_main:	
  3835                           ; 1 bytes @ 0xA
  3836                           
  3837                           
  3838                           ; 1 bytes @ 0xA
  3839  007A                     	ds	2
  3840                           
  3841                           	psect	cstackBANK0
  3842  0045                     __pcstackBANK0:
  3843  0045                     main@str:
  3844                           
  3845                           ; 2 bytes @ 0x0
  3846  0045                     	ds	2
  3847  0047                     main@str_535:
  3848                           
  3849                           ; 2 bytes @ 0x2
  3850  0047                     	ds	2
  3851  0049                     main@convertedValue:
  3852                           
  3853                           ; 2 bytes @ 0x4
  3854  0049                     	ds	2
  3855                           
  3856                           	psect	maintext
  3857  078E                     __pmaintext:	
  3858 ;;
  3859 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3860 ;;
  3861 ;; *************** function _main *****************
  3862 ;; Defined at:
  3863 ;;		line 76 in file "main.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  str             2    2[BANK0 ] PTR unsigned char 
  3868 ;;		 -> STR_2(37), 
  3869 ;;  str             2    0[BANK0 ] PTR unsigned char 
  3870 ;;		 -> STR_1(37), 
  3871 ;;  convertedVal    2    4[BANK0 ] unsigned short 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : B1F/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3881 ;;      Params:         0       0       0       0       0       0       0       0
  3882 ;;      Locals:         0       6       0       0       0       0       0       0
  3883 ;;      Temps:          2       0       0       0       0       0       0       0
  3884 ;;      Totals:         2       6       0       0       0       0       0       0
  3885 ;;Total ram usage:        8 bytes
  3886 ;; Hardware stack levels required when called:    8
  3887 ;; This function calls:
  3888 ;;		_ADC_GetConversion
  3889 ;;		_ADC_Initialize
  3890 ;;		_I2C_Close
  3891 ;;		_I2C_Initialize
  3892 ;;		_I2C_MasterRead
  3893 ;;		_I2C_Open
  3894 ;;		_SYSTEM_Initialize
  3895 ;;		_UART_send_string
  3896 ;; This function is called by:
  3897 ;;		Startup code after reset
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _main
  3903  078E                     _main:
  3904  078E                     l2713:	
  3905                           ;incstack = 0
  3906                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3907                           
  3908                           
  3909                           ;main.c: 79:     SYSTEM_Initialize();
  3910  078E  3185  251B  3187   	fcall	_SYSTEM_Initialize
  3911                           
  3912                           ;main.c: 95:     I2C_Initialize();
  3913  0791  3184  248D  3187   	fcall	_I2C_Initialize
  3914                           
  3915                           ;main.c: 97:     ADC_Initialize();
  3916  0794  3184  2484  3187   	fcall	_ADC_Initialize
  3917                           
  3918                           ;main.c: 99:     uint16_t convertedValue;;main.c: 101:     ADC_Initialize();
  3919  0797  3184  2484  3187   	fcall	_ADC_Initialize
  3920  079A                     l308:	
  3921                           ;main.c: 103:     while (1)
  3922                           
  3923                           
  3924                           ;main.c: 104:     {;main.c: 105:         I2C_Open(0x68);
  3925  079A  3068               	movlw	104
  3926  079B  3186  267F  3187   	fcall	_I2C_Open
  3927                           
  3928                           ;main.c: 109:         convertedValue = ADC_GetConversion(0x2);
  3929  079E  3002               	movlw	2
  3930  079F  3185  255D  3187   	fcall	_ADC_GetConversion
  3931  07A2  0871               	movf	?_ADC_GetConversion+1,w
  3932  07A3  0020               	movlb	0	; select bank0
  3933  07A4  00CA               	movwf	main@convertedValue+1
  3934  07A5  0870               	movf	?_ADC_GetConversion,w
  3935  07A6  00C9               	movwf	main@convertedValue
  3936  07A7                     l2715:
  3937                           
  3938                           ;main.c: 110:         if(convertedValue > 0 && convertedValue < 200)
  3939  07A7  0849               	movf	main@convertedValue,w
  3940  07A8  044A               	iorwf	main@convertedValue+1,w
  3941  07A9  1903               	btfsc	3,2
  3942  07AA  2FAC               	goto	u641
  3943  07AB  2FAD               	goto	u640
  3944  07AC                     u641:
  3945  07AC  2FCD               	goto	l2725
  3946  07AD                     u640:
  3947  07AD                     l2717:
  3948  07AD  3000               	movlw	0
  3949  07AE  024A               	subwf	main@convertedValue+1,w
  3950  07AF  30C8               	movlw	200
  3951  07B0  1903               	skipnz
  3952  07B1  0249               	subwf	main@convertedValue,w
  3953  07B2  1803               	skipnc
  3954  07B3  2FB5               	goto	u651
  3955  07B4  2FB6               	goto	u650
  3956  07B5                     u651:
  3957  07B5  2FCD               	goto	l2725
  3958  07B6                     u650:
  3959  07B6                     l2719:
  3960                           
  3961                           ;main.c: 111:         {;main.c: 112:             char* str = "JG6 Es mayor a cero y meno
      +                          r a 500 \r\n";
  3962  07B6  3000               	movlw	low (STR_1| (0+32768))
  3963  07B7  00C5               	movwf	main@str
  3964  07B8  3088               	movlw	high (STR_1| (0+32768))
  3965  07B9  00C6               	movwf	main@str+1
  3966  07BA                     l2721:
  3967                           
  3968                           ;main.c: 113:             UART_send_string(str);
  3969  07BA  0846               	movf	main@str+1,w
  3970  07BB  00F2               	movwf	UART_send_string@st_pt+1
  3971  07BC  0845               	movf	main@str,w
  3972  07BD  00F1               	movwf	UART_send_string@st_pt
  3973  07BE  3185  252E  3187   	fcall	_UART_send_string
  3974  07C1                     l2723:
  3975                           
  3976                           ;main.c: 114:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  3977  07C1  300B               	movlw	11
  3978  07C2  00FB               	movwf	??_main+1
  3979  07C3  3026               	movlw	38
  3980  07C4  00FA               	movwf	??_main
  3981  07C5  305E               	movlw	94
  3982  07C6                     u837:
  3983  07C6  0B89               	decfsz	9,f
  3984  07C7  2FC6               	goto	u837
  3985  07C8  0BFA               	decfsz	??_main,f
  3986  07C9  2FC6               	goto	u837
  3987  07CA  0BFB               	decfsz	??_main+1,f
  3988  07CB  2FC6               	goto	u837
  3989                           
  3990                           ;main.c: 115:         }
  3991  07CC  2FEB               	goto	l2735
  3992  07CD                     l2725:
  3993  07CD  3000               	movlw	0
  3994  07CE  024A               	subwf	main@convertedValue+1,w
  3995  07CF  30C9               	movlw	201
  3996  07D0  1903               	skipnz
  3997  07D1  0249               	subwf	main@convertedValue,w
  3998  07D2  1C03               	skipc
  3999  07D3  2FD5               	goto	u661
  4000  07D4  2FD6               	goto	u660
  4001  07D5                     u661:
  4002  07D5  2FEB               	goto	l2735
  4003  07D6                     u660:
  4004  07D6                     l2727:
  4005  07D6  3001               	movlw	1
  4006  07D7  024A               	subwf	main@convertedValue+1,w
  4007  07D8  30A8               	movlw	168
  4008  07D9  1903               	skipnz
  4009  07DA  0249               	subwf	main@convertedValue,w
  4010  07DB  1803               	skipnc
  4011  07DC  2FDE               	goto	u671
  4012  07DD  2FDF               	goto	u670
  4013  07DE                     u671:
  4014  07DE  2FEB               	goto	l2735
  4015  07DF                     u670:
  4016  07DF                     l2729:
  4017                           
  4018                           ;main.c: 117:         {;main.c: 118:             char* str = "JG6 Es mayor a 500 y menor
      +                           a 1024 \r\n";
  4019  07DF  3025               	movlw	low (STR_2| (0+32768))
  4020  07E0  00C7               	movwf	main@str_535
  4021  07E1  3088               	movlw	high (STR_2| (0+32768))
  4022  07E2  00C8               	movwf	main@str_535+1
  4023  07E3                     l2731:
  4024                           
  4025                           ;main.c: 119:             UART_send_string(str);
  4026  07E3  0848               	movf	main@str_535+1,w
  4027  07E4  00F2               	movwf	UART_send_string@st_pt+1
  4028  07E5  0847               	movf	main@str_535,w
  4029  07E6  00F1               	movwf	UART_send_string@st_pt
  4030  07E7  3185  252E  3187   	fcall	_UART_send_string
  4031  07EA  2FC1               	goto	l2723
  4032  07EB                     l2735:
  4033                           
  4034                           ;main.c: 124:         I2C_MasterRead();
  4035  07EB  3184  243B  3187   	fcall	_I2C_MasterRead
  4036  07EE                     l2737:
  4037                           
  4038                           ;main.c: 128:         I2C_Close();
  4039  07EE  3185  2578  3187   	fcall	_I2C_Close
  4040  07F1  2F9A               	goto	l308
  4041  07F2  3180  2802         	ljmp	start
  4042  07F4                     __end_of_main:
  4043                           
  4044                           	psect	text1
  4045  052E                     __ptext1:	
  4046 ;; *************** function _UART_send_string *****************
  4047 ;; Defined at:
  4048 ;;		line 67 in file "main.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  st_pt           2    1[COMMON] PTR unsigned char 
  4051 ;;		 -> STR_2(37), STR_1(37), 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4063 ;;      Params:         2       0       0       0       0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0
  4065 ;;      Temps:          1       0       0       0       0       0       0       0
  4066 ;;      Totals:         3       0       0       0       0       0       0       0
  4067 ;;Total ram usage:        3 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    1
  4070 ;; This function calls:
  4071 ;;		_UART_send_char
  4072 ;; This function is called by:
  4073 ;;		_main
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           
  4078                           ;psect for function _UART_send_string
  4079  052E                     _UART_send_string:
  4080  052E                     l2645:	
  4081                           ;incstack = 0
  4082                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4083                           
  4084                           
  4085                           ;main.c: 67: void UART_send_string(char* st_pt);main.c: 68: {;main.c: 69:     while(*st_
      +                          pt)
  4086  052E  2D3B               	goto	l2651
  4087  052F                     l2647:
  4088                           
  4089                           ;main.c: 70:         UART_send_char(*st_pt++);
  4090  052F  0871               	movf	UART_send_string@st_pt,w
  4091  0530  0084               	movwf	4
  4092  0531  0872               	movf	UART_send_string@st_pt+1,w
  4093  0532  0085               	movwf	5
  4094  0533  0800               	movf	0,w	;code access
  4095  0534  3184  2496  3185   	fcall	_UART_send_char
  4096  0537                     l2649:
  4097  0537  3001               	movlw	1
  4098  0538  07F1               	addwf	UART_send_string@st_pt,f
  4099  0539  3000               	movlw	0
  4100  053A  3DF2               	addwfc	UART_send_string@st_pt+1,f
  4101  053B                     l2651:
  4102                           
  4103                           ;main.c: 69:     while(*st_pt)
  4104  053B  0871               	movf	UART_send_string@st_pt,w
  4105  053C  0084               	movwf	4
  4106  053D  0872               	movf	UART_send_string@st_pt+1,w
  4107  053E  0085               	movwf	5
  4108  053F  0012               	moviw fsr0++
  4109  0540  1D03               	btfss	3,2
  4110  0541  2D43               	goto	u611
  4111  0542  2D44               	goto	u610
  4112  0543                     u611:
  4113  0543  2D2F               	goto	l2647
  4114  0544                     u610:
  4115  0544                     l303:
  4116  0544  0008               	return
  4117  0545                     __end_of_UART_send_string:
  4118                           
  4119                           	psect	text2
  4120  0496                     __ptext2:	
  4121 ;; *************** function _UART_send_char *****************
  4122 ;; Defined at:
  4123 ;;		line 59 in file "main.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  bt              1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  bt              1    0[COMMON] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4137 ;;      Params:         0       0       0       0       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0
  4140 ;;      Totals:         1       0       0       0       0       0       0       0
  4141 ;;Total ram usage:        1 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_UART_send_string
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _UART_send_char
  4152  0496                     _UART_send_char:
  4153                           
  4154                           ;incstack = 0
  4155                           ; Regs used in _UART_send_char: [wreg]
  4156                           ;UART_send_char@bt stored from wreg
  4157  0496  00F0               	movwf	UART_send_char@bt
  4158  0497                     l2591:
  4159  0497                     l294:	
  4160                           ;main.c: 59: void UART_send_char(char bt);main.c: 60: {;main.c: 61:     while(!TXIF);
  4161                           
  4162  0497  0020               	movlb	0	; select bank0
  4163  0498  1E11               	btfss	17,4	;volatile
  4164  0499  2C9B               	goto	u561
  4165  049A  2C9C               	goto	u560
  4166  049B                     u561:
  4167  049B  2C97               	goto	l294
  4168  049C                     u560:
  4169  049C                     l2593:
  4170                           
  4171                           ;main.c: 62:     TXREG = bt;
  4172  049C  0870               	movf	UART_send_char@bt,w
  4173  049D  0023               	movlb	3	; select bank3
  4174  049E  009A               	movwf	26	;volatile
  4175  049F                     l297:
  4176  049F  0008               	return
  4177  04A0                     __end_of_UART_send_char:
  4178                           
  4179                           	psect	text3
  4180  051B                     __ptext3:	
  4181 ;; *************** function _SYSTEM_Initialize *****************
  4182 ;; Defined at:
  4183 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4197 ;;      Params:         0       0       0       0       0       0       0       0
  4198 ;;      Locals:         0       0       0       0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0
  4200 ;;      Totals:         0       0       0       0       0       0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    2
  4204 ;; This function calls:
  4205 ;;		_ADC_Initialize
  4206 ;;		_EUSART_Initialize
  4207 ;;		_I2C_Initialize
  4208 ;;		_OSCILLATOR_Initialize
  4209 ;;		_PIN_MANAGER_Initialize
  4210 ;;		_WDT_Initialize
  4211 ;; This function is called by:
  4212 ;;		_main
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           
  4217                           ;psect for function _SYSTEM_Initialize
  4218  051B                     _SYSTEM_Initialize:
  4219  051B                     l2631:	
  4220                           ;incstack = 0
  4221                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4222                           
  4223                           
  4224                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  4225  051B  3184  248D  3185   	fcall	_I2C_Initialize
  4226                           
  4227                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4228  051E  3186  26B9  3185   	fcall	_PIN_MANAGER_Initialize
  4229                           
  4230                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4231  0521  3184  2473  3185   	fcall	_OSCILLATOR_Initialize
  4232                           
  4233                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4234  0524  3184  2405  3185   	fcall	_WDT_Initialize
  4235                           
  4236                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  4237  0527  3184  2484  3185   	fcall	_ADC_Initialize
  4238                           
  4239                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  4240  052A  3185  25B2  3185   	fcall	_EUSART_Initialize
  4241  052D                     l25:
  4242  052D  0008               	return
  4243  052E                     __end_of_SYSTEM_Initialize:
  4244                           
  4245                           	psect	text4
  4246  0405                     __ptext4:	
  4247 ;; *************** function _WDT_Initialize *****************
  4248 ;; Defined at:
  4249 ;;		line 73 in file "mcc_generated_files/mcc.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4263 ;;      Params:         0       0       0       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_SYSTEM_Initialize
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           
  4277                           ;psect for function _WDT_Initialize
  4278  0405                     _WDT_Initialize:
  4279  0405                     l2567:	
  4280                           ;incstack = 0
  4281                           ; Regs used in _WDT_Initialize: [wreg]
  4282                           
  4283                           
  4284                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  4285  0405  3016               	movlw	22
  4286  0406  0021               	movlb	1	; select bank1
  4287  0407  0097               	movwf	23	;volatile
  4288  0408                     l31:
  4289  0408  0008               	return
  4290  0409                     __end_of_WDT_Initialize:
  4291                           
  4292                           	psect	text5
  4293  06B9                     __ptext5:	
  4294 ;; *************** function _PIN_MANAGER_Initialize *****************
  4295 ;; Defined at:
  4296 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4310 ;;      Params:         0       0       0       0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_SYSTEM_Initialize
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function _PIN_MANAGER_Initialize
  4325  06B9                     _PIN_MANAGER_Initialize:
  4326  06B9                     l2519:	
  4327                           ;incstack = 0
  4328                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4329                           
  4330                           
  4331                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4332  06B9  0022               	movlb	2	; select bank2
  4333  06BA  018C               	clrf	12	;volatile
  4334                           
  4335                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4336  06BB  018D               	clrf	13	;volatile
  4337                           
  4338                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4339  06BC  018E               	clrf	14	;volatile
  4340  06BD                     l2521:
  4341                           
  4342                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
  4343  06BD  3037               	movlw	55
  4344  06BE  0021               	movlb	1	; select bank1
  4345  06BF  008C               	movwf	12	;volatile
  4346  06C0                     l2523:
  4347                           
  4348                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  4349  06C0  3070               	movlw	112
  4350  06C1  008D               	movwf	13	;volatile
  4351  06C2                     l2525:
  4352                           
  4353                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFE;
  4354  06C2  30FE               	movlw	254
  4355  06C3  008E               	movwf	14	;volatile
  4356  06C4                     l2527:
  4357                           
  4358                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  4359  06C4  30CF               	movlw	207
  4360  06C5  0023               	movlb	3	; select bank3
  4361  06C6  008E               	movwf	14	;volatile
  4362  06C7                     l2529:
  4363                           
  4364                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
  4365  06C7  3080               	movlw	128
  4366  06C8  008D               	movwf	13	;volatile
  4367  06C9                     l2531:
  4368                           
  4369                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  4370  06C9  3017               	movlw	23
  4371  06CA  008C               	movwf	12	;volatile
  4372                           
  4373                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4374  06CB  0024               	movlb	4	; select bank4
  4375  06CC  018D               	clrf	13	;volatile
  4376                           
  4377                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4378  06CD  018C               	clrf	12	;volatile
  4379                           
  4380                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4381  06CE  018E               	clrf	14	;volatile
  4382  06CF                     l2533:
  4383                           
  4384                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  4385  06CF  0021               	movlb	1	; select bank1
  4386  06D0  1795               	bsf	21,7	;volatile
  4387                           
  4388                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  4389  06D1  0025               	movlb	5	; select bank5
  4390  06D2  018C               	clrf	12	;volatile
  4391                           
  4392                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  4393  06D3  018D               	clrf	13	;volatile
  4394                           
  4395                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  4396  06D4  018E               	clrf	14	;volatile
  4397  06D5                     l2535:
  4398                           
  4399                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  4400  06D5  3037               	movlw	55
  4401  06D6  0026               	movlb	6	; select bank6
  4402  06D7  008C               	movwf	12	;volatile
  4403  06D8                     l2537:
  4404                           
  4405                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  4406  06D8  30F0               	movlw	240
  4407  06D9  008D               	movwf	13	;volatile
  4408  06DA                     l2539:
  4409                           
  4410                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  4411  06DA  30FF               	movlw	255
  4412  06DB  008E               	movwf	14	;volatile
  4413  06DC                     l2541:
  4414                           
  4415                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  4416  06DC  303F               	movlw	63
  4417  06DD  0027               	movlb	7	; select bank7
  4418  06DE  008C               	movwf	12	;volatile
  4419  06DF                     l2543:
  4420                           
  4421                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  4422  06DF  30F0               	movlw	240
  4423  06E0  008D               	movwf	13	;volatile
  4424  06E1                     l2545:
  4425                           
  4426                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  4427  06E1  30FF               	movlw	255
  4428  06E2  008E               	movwf	14	;volatile
  4429  06E3                     l2547:
  4430                           
  4431                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x0D;
  4432  06E3  300D               	movlw	13
  4433  06E4  003C               	movlb	28	; select bank28
  4434  06E5  00A4               	movwf	36	;volatile
  4435  06E6                     l2549:
  4436                           
  4437                           ;mcc_generated_files/pin_manager.c: 117:     SSPDATPPS = 0x0C;
  4438  06E6  300C               	movlw	12
  4439  06E7  00A1               	movwf	33	;volatile
  4440  06E8                     l2551:
  4441                           
  4442                           ;mcc_generated_files/pin_manager.c: 119:     RB6PPS = 0x12;
  4443  06E8  3012               	movlw	18
  4444  06E9  003D               	movlb	29	; select bank29
  4445  06EA  009E               	movwf	30	;volatile
  4446  06EB                     l2553:
  4447                           
  4448                           ;mcc_generated_files/pin_manager.c: 121:     RB7PPS = 0x16;
  4449  06EB  3016               	movlw	22
  4450  06EC  009F               	movwf	31	;volatile
  4451  06ED                     l2555:
  4452                           
  4453                           ;mcc_generated_files/pin_manager.c: 123:     RB4PPS = 0x13;
  4454  06ED  3013               	movlw	19
  4455  06EE  009C               	movwf	28	;volatile
  4456  06EF                     l2557:
  4457                           
  4458                           ;mcc_generated_files/pin_manager.c: 125:     SSPCLKPPS = 0x0E;
  4459  06EF  300E               	movlw	14
  4460  06F0  003C               	movlb	28	; select bank28
  4461  06F1  00A0               	movwf	32	;volatile
  4462  06F2                     l90:
  4463  06F2  0008               	return
  4464  06F3                     __end_of_PIN_MANAGER_Initialize:
  4465                           
  4466                           	psect	text6
  4467  0473                     __ptext6:	
  4468 ;; *************** function _OSCILLATOR_Initialize *****************
  4469 ;; Defined at:
  4470 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4484 ;;      Params:         0       0       0       0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_SYSTEM_Initialize
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _OSCILLATOR_Initialize
  4499  0473                     _OSCILLATOR_Initialize:
  4500  0473                     l2559:	
  4501                           ;incstack = 0
  4502                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4503                           
  4504                           
  4505                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x72;
  4506  0473  3072               	movlw	114
  4507  0474  0021               	movlb	1	; select bank1
  4508  0475  0099               	movwf	25	;volatile
  4509  0476                     l2561:
  4510                           
  4511                           ;mcc_generated_files/mcc.c: 66:     OSCSTAT = 0x00;
  4512  0476  019A               	clrf	26	;volatile
  4513  0477                     l2563:
  4514                           
  4515                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  4516  0477  0198               	clrf	24	;volatile
  4517  0478                     l2565:
  4518                           
  4519                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  4520  0478  0024               	movlb	4	; select bank4
  4521  0479  019D               	clrf	29	;volatile
  4522  047A                     l28:
  4523  047A  0008               	return
  4524  047B                     __end_of_OSCILLATOR_Initialize:
  4525                           
  4526                           	psect	text7
  4527  048D                     __ptext7:	
  4528 ;; *************** function _I2C_Initialize *****************
  4529 ;; Defined at:
  4530 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4544 ;;      Params:         0       0       0       0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_SYSTEM_Initialize
  4554 ;;		_main
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function _I2C_Initialize
  4560  048D                     _I2C_Initialize:
  4561  048D                     l2511:	
  4562                           ;incstack = 0
  4563                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4564                           
  4565                           
  4566                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x00;
  4567  048D  0024               	movlb	4	; select bank4
  4568  048E  0194               	clrf	20	;volatile
  4569  048F                     l2513:
  4570                           
  4571                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  4572  048F  3008               	movlw	8
  4573  0490  0095               	movwf	21	;volatile
  4574  0491                     l2515:
  4575                           
  4576                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  4577  0491  0196               	clrf	22	;volatile
  4578                           
  4579                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x13;
  4580  0492  3013               	movlw	19
  4581  0493  0092               	movwf	18	;volatile
  4582  0494                     l2517:
  4583                           
  4584                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  4585  0494  1295               	bcf	21,5	;volatile
  4586  0495                     l421:
  4587  0495  0008               	return
  4588  0496                     __end_of_I2C_Initialize:
  4589                           
  4590                           	psect	text8
  4591  05B2                     __ptext8:	
  4592 ;; *************** function _EUSART_Initialize *****************
  4593 ;; Defined at:
  4594 ;;		line 66 in file "mcc_generated_files/eusart.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0, pclath, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4608 ;;      Params:         0       0       0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used:    1
  4614 ;; Hardware stack levels required when called:    1
  4615 ;; This function calls:
  4616 ;;		_EUSART_SetErrorHandler
  4617 ;;		_EUSART_SetFramingErrorHandler
  4618 ;;		_EUSART_SetOverrunErrorHandler
  4619 ;; This function is called by:
  4620 ;;		_SYSTEM_Initialize
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           
  4625                           ;psect for function _EUSART_Initialize
  4626  05B2                     _EUSART_Initialize:
  4627  05B2                     l2579:	
  4628                           ;incstack = 0
  4629                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4630                           
  4631                           
  4632                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  4633  05B2  3008               	movlw	8
  4634  05B3  0023               	movlb	3	; select bank3
  4635  05B4  009F               	movwf	31	;volatile
  4636                           
  4637                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x80;
  4638  05B5  3080               	movlw	128
  4639  05B6  009D               	movwf	29	;volatile
  4640                           
  4641                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  4642  05B7  3024               	movlw	36
  4643  05B8  009E               	movwf	30	;volatile
  4644                           
  4645                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xCF;
  4646  05B9  30CF               	movlw	207
  4647  05BA  009B               	movwf	27	;volatile
  4648  05BB                     l2581:
  4649                           
  4650                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  4651  05BB  019C               	clrf	28	;volatile
  4652  05BC                     l2583:
  4653                           
  4654                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4655  05BC  3000               	movlw	0
  4656  05BD  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4657  05BE  3000               	movlw	0
  4658  05BF  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4659  05C0  3184  2452  3185   	fcall	_EUSART_SetFramingErrorHandler
  4660  05C3                     l2585:
  4661                           
  4662                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4663  05C3  3000               	movlw	0
  4664  05C4  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4665  05C5  3000               	movlw	0
  4666  05C6  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4667  05C7  3184  2458  3185   	fcall	_EUSART_SetOverrunErrorHandler
  4668  05CA                     l2587:
  4669                           
  4670                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4671  05CA  3000               	movlw	0
  4672  05CB  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4673  05CC  3000               	movlw	0
  4674  05CD  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4675  05CE  3184  244C  3185   	fcall	_EUSART_SetErrorHandler
  4676  05D1                     l2589:
  4677                           
  4678                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4679  05D1  01FC               	clrf	_eusartRxLastError	;volatile
  4680  05D2                     l214:
  4681  05D2  0008               	return
  4682  05D3                     __end_of_EUSART_Initialize:
  4683                           
  4684                           	psect	text9
  4685  0458                     __ptext9:	
  4686 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4687 ;; Defined at:
  4688 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4691 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;		None
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4703 ;;      Params:         2       0       0       0       0       0       0       0
  4704 ;;      Locals:         0       0       0       0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0
  4706 ;;      Totals:         2       0       0       0       0       0       0       0
  4707 ;;Total ram usage:        2 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_EUSART_Initialize
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _EUSART_SetOverrunErrorHandler
  4718  0458                     _EUSART_SetOverrunErrorHandler:
  4719  0458                     l2497:	
  4720                           ;incstack = 0
  4721                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4722                           
  4723                           
  4724                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4725  0458  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4726  0459  0020               	movlb	0	; select bank0
  4727  045A  00C2               	movwf	_EUSART_OverrunErrorHandler+1
  4728  045B  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4729  045C  00C1               	movwf	_EUSART_OverrunErrorHandler
  4730  045D                     l256:
  4731  045D  0008               	return
  4732  045E                     __end_of_EUSART_SetOverrunErrorHandler:
  4733                           
  4734                           	psect	text10
  4735  0452                     __ptext10:	
  4736 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4737 ;; Defined at:
  4738 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4741 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4753 ;;      Params:         2       0       0       0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0       0
  4756 ;;      Totals:         2       0       0       0       0       0       0       0
  4757 ;;Total ram usage:        2 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_EUSART_Initialize
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _EUSART_SetFramingErrorHandler
  4768  0452                     _EUSART_SetFramingErrorHandler:
  4769  0452                     l2495:	
  4770                           ;incstack = 0
  4771                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4772                           
  4773                           
  4774                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4775  0452  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4776  0453  0020               	movlb	0	; select bank0
  4777  0454  00C4               	movwf	_EUSART_FramingErrorHandler+1
  4778  0455  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4779  0456  00C3               	movwf	_EUSART_FramingErrorHandler
  4780  0457                     l253:
  4781  0457  0008               	return
  4782  0458                     __end_of_EUSART_SetFramingErrorHandler:
  4783                           
  4784                           	psect	text11
  4785  044C                     __ptext11:	
  4786 ;; *************** function _EUSART_SetErrorHandler *****************
  4787 ;; Defined at:
  4788 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4791 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4803 ;;      Params:         2       0       0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0       0
  4806 ;;      Totals:         2       0       0       0       0       0       0       0
  4807 ;;Total ram usage:        2 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_EUSART_Initialize
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           
  4817                           ;psect for function _EUSART_SetErrorHandler
  4818  044C                     _EUSART_SetErrorHandler:
  4819  044C                     l2499:	
  4820                           ;incstack = 0
  4821                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4822                           
  4823                           
  4824                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4825  044C  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4826  044D  0020               	movlb	0	; select bank0
  4827  044E  00C0               	movwf	_EUSART_ErrorHandler+1
  4828  044F  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4829  0450  00BF               	movwf	_EUSART_ErrorHandler
  4830  0451                     l259:
  4831  0451  0008               	return
  4832  0452                     __end_of_EUSART_SetErrorHandler:
  4833                           
  4834                           	psect	text12
  4835  0484                     __ptext12:	
  4836 ;; *************** function _ADC_Initialize *****************
  4837 ;; Defined at:
  4838 ;;		line 67 in file "mcc_generated_files/adc.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;		None
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4852 ;;      Params:         0       0       0       0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0
  4855 ;;      Totals:         0       0       0       0       0       0       0       0
  4856 ;;Total ram usage:        0 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_SYSTEM_Initialize
  4862 ;;		_main
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           
  4867                           ;psect for function _ADC_Initialize
  4868  0484                     _ADC_Initialize:
  4869  0484                     l2569:	
  4870                           ;incstack = 0
  4871                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4872                           
  4873                           
  4874                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x80;
  4875  0484  3080               	movlw	128
  4876  0485  0021               	movlb	1	; select bank1
  4877  0486  009E               	movwf	30	;volatile
  4878  0487                     l2571:
  4879                           
  4880                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
  4881  0487  019F               	clrf	31	;volatile
  4882  0488                     l2573:
  4883                           
  4884                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  4885  0488  019B               	clrf	27	;volatile
  4886  0489                     l2575:
  4887                           
  4888                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  4889  0489  019C               	clrf	28	;volatile
  4890  048A                     l2577:
  4891                           
  4892                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  4893  048A  3001               	movlw	1
  4894  048B  009D               	movwf	29	;volatile
  4895  048C                     l112:
  4896  048C  0008               	return
  4897  048D                     __end_of_ADC_Initialize:
  4898                           
  4899                           	psect	text13
  4900  067F                     __ptext13:	
  4901 ;; *************** function _I2C_Open *****************
  4902 ;; Defined at:
  4903 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  address         1    wreg     unsigned char 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  address         1    1[COMMON] unsigned char 
  4908 ;;  returnValue     1    2[COMMON] enum E355
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      enum E9227
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4918 ;;      Params:         0       0       0       0       0       0       0       0
  4919 ;;      Locals:         2       0       0       0       0       0       0       0
  4920 ;;      Temps:          1       0       0       0       0       0       0       0
  4921 ;;      Totals:         3       0       0       0       0       0       0       0
  4922 ;;Total ram usage:        3 bytes
  4923 ;; Hardware stack levels used:    1
  4924 ;; Hardware stack levels required when called:    1
  4925 ;; This function calls:
  4926 ;;		_I2C_MasterClearIrq
  4927 ;;		_I2C_MasterOpen
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;;		_I2C_Read1ByteRegister
  4931 ;;		_I2C_Read2ByteRegister
  4932 ;;		_I2C_Write1ByteRegister
  4933 ;;		_I2C_Write2ByteRegister
  4934 ;;		_I2C_WriteNBytes
  4935 ;;		_I2C_ReadNBytes
  4936 ;;		_I2C_ReadDataBlock
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function _I2C_Open
  4942  067F                     _I2C_Open:
  4943                           
  4944                           ;incstack = 0
  4945                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  4946                           ;I2C_Open@address stored from wreg
  4947  067F  00F1               	movwf	I2C_Open@address
  4948  0680                     l2653:
  4949                           
  4950                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4951  0680  01F2               	clrf	I2C_Open@returnValue
  4952  0681  0AF2               	incf	I2C_Open@returnValue,f
  4953                           
  4954                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4955  0682  0020               	movlb	0	; select bank0
  4956  0683  193C               	btfsc	_I2C_Status+28,2
  4957  0684  2E86               	goto	u621
  4958  0685  2E87               	goto	u620
  4959  0686                     u621:
  4960  0686  2EB7               	goto	l424
  4961  0687                     u620:
  4962  0687                     l2655:
  4963                           
  4964                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4965  0687  0871               	movf	I2C_Open@address,w
  4966  0688  00F0               	movwf	??_I2C_Open
  4967  0689  0870               	movf	??_I2C_Open,w
  4968  068A  00B6               	movwf	_I2C_Status+22
  4969  068B                     l2657:
  4970                           
  4971                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4972  068B  10BC               	bcf	_I2C_Status+28,1
  4973  068C                     l2659:
  4974                           
  4975                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4976  068C  153C               	bsf	_I2C_Status+28,2
  4977  068D                     l2661:
  4978                           
  4979                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4980  068D  103C               	bcf	_I2C_Status+28,0
  4981                           
  4982                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4983  068E  300E               	movlw	14
  4984  068F  00F0               	movwf	??_I2C_Open
  4985  0690  0870               	movf	??_I2C_Open,w
  4986  0691  00BA               	movwf	_I2C_Status+26
  4987                           
  4988                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4989  0692  30F4               	movlw	244
  4990  0693  00B4               	movwf	_I2C_Status+20
  4991  0694  3001               	movlw	1
  4992  0695  00B5               	movwf	_I2C_Status+21
  4993  0696                     l2663:
  4994                           
  4995                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4996  0696  15BC               	bsf	_I2C_Status+28,3
  4997                           
  4998                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  4999  0697  30DE               	movlw	low _I2C_CallbackReturnStop
  5000  0698  00A0               	movwf	_I2C_Status
  5001  0699  3003               	movlw	high _I2C_CallbackReturnStop
  5002  069A  00A1               	movwf	_I2C_Status+1
  5003  069B                     l2665:
  5004                           
  5005                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  5006  069B  01AC               	clrf	low ((_I2C_Status| 0+12))
  5007  069C                     l2667:
  5008                           
  5009                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  5010  069C  30DE               	movlw	low _I2C_CallbackReturnStop
  5011  069D  00A2               	movwf	low ((_I2C_Status| 0+2))
  5012  069E  3003               	movlw	high _I2C_CallbackReturnStop
  5013  069F  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  5014                           
  5015                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  5016  06A0  01AD               	clrf	low ((_I2C_Status| 0+13))
  5017  06A1                     l2669:
  5018                           
  5019                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  5020  06A1  30DE               	movlw	low _I2C_CallbackReturnStop
  5021  06A2  00A4               	movwf	low ((_I2C_Status| 0+4))
  5022  06A3  3003               	movlw	high _I2C_CallbackReturnStop
  5023  06A4  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  5024  06A5                     l2671:
  5025                           
  5026                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  5027  06A5  01AE               	clrf	low ((_I2C_Status| 0+14))
  5028                           
  5029                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  5030  06A6  30DE               	movlw	low _I2C_CallbackReturnStop
  5031  06A7  00A6               	movwf	low ((_I2C_Status| 0+6))
  5032  06A8  3003               	movlw	high _I2C_CallbackReturnStop
  5033  06A9  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  5034  06AA                     l2673:
  5035                           
  5036                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  5037  06AA  01AF               	clrf	low ((_I2C_Status| 0+15))
  5038  06AB                     l2675:
  5039                           
  5040                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  5041  06AB  30E0               	movlw	low _I2C_CallbackReturnReset
  5042  06AC  00A8               	movwf	low ((_I2C_Status| 0+8))
  5043  06AD  3003               	movlw	high _I2C_CallbackReturnReset
  5044  06AE  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  5045                           
  5046                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  5047  06AF  01B0               	clrf	low ((_I2C_Status| 0+16))
  5048  06B0                     l2677:
  5049                           
  5050                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  5051  06B0  3183  23E2  3186   	fcall	_I2C_MasterClearIrq
  5052  06B3                     l2679:
  5053                           
  5054                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  5055  06B3  3184  24BA  3186   	fcall	_I2C_MasterOpen
  5056  06B6                     l2681:
  5057                           
  5058                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  5059  06B6  01F2               	clrf	I2C_Open@returnValue
  5060  06B7                     l424:	
  5061                           ;mcc_generated_files/i2c_master.c: 205:     }
  5062                           
  5063                           
  5064                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  5065  06B7  0872               	movf	I2C_Open@returnValue,w
  5066  06B8                     l425:
  5067  06B8  0008               	return
  5068  06B9                     __end_of_I2C_Open:
  5069                           
  5070                           	psect	text14
  5071  04BA                     __ptext14:	
  5072 ;; *************** function _I2C_MasterOpen *****************
  5073 ;; Defined at:
  5074 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;		None
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;		None
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      _Bool 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5088 ;;      Params:         0       0       0       0       0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_I2C_Open
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           
  5102                           ;psect for function _I2C_MasterOpen
  5103  04BA                     _I2C_MasterOpen:
  5104  04BA                     l2595:	
  5105                           ;incstack = 0
  5106                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  5107                           
  5108                           
  5109                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
  5110  04BA  0024               	movlb	4	; select bank4
  5111  04BB  1A95               	btfsc	21,5	;volatile
  5112  04BC  2CBE               	goto	u571
  5113  04BD  2CBF               	goto	u570
  5114  04BE                     u571:
  5115  04BE  2CC6               	goto	l590
  5116  04BF                     u570:
  5117  04BF                     l2597:
  5118                           
  5119                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x00;
  5120  04BF  0194               	clrf	20	;volatile
  5121  04C0                     l2599:
  5122                           
  5123                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
  5124  04C0  3008               	movlw	8
  5125  04C1  0095               	movwf	21	;volatile
  5126  04C2                     l2601:
  5127                           
  5128                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
  5129  04C2  0196               	clrf	22	;volatile
  5130                           
  5131                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x13;
  5132  04C3  3013               	movlw	19
  5133  04C4  0092               	movwf	18	;volatile
  5134  04C5                     l2603:
  5135                           
  5136                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
  5137  04C5  1695               	bsf	21,5	;volatile
  5138  04C6                     l590:
  5139  04C6  0008               	return
  5140  04C7                     __end_of_I2C_MasterOpen:
  5141                           
  5142                           	psect	text15
  5143  043B                     __ptext15:	
  5144 ;; *************** function _I2C_MasterRead *****************
  5145 ;; Defined at:
  5146 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      enum E9227
  5153 ;; Registers used:
  5154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5160 ;;      Params:         0       0       0       0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    7
  5167 ;; This function calls:
  5168 ;;		_I2C_MasterOperation
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;;		_I2C_ReadNBytes
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           
  5176                           ;psect for function _I2C_MasterRead
  5177  043B                     _I2C_MasterRead:
  5178  043B                     l2685:	
  5179                           ;incstack = 0
  5180                           ; Regs used in _I2C_MasterRead: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5181                           
  5182                           
  5183                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  5184  043B  3001               	movlw	1
  5185  043C  3185  2594  3184   	fcall	_I2C_MasterOperation
  5186  043F                     l438:
  5187  043F  0008               	return
  5188  0440                     __end_of_I2C_MasterRead:
  5189                           
  5190                           	psect	text16
  5191  0594                     __ptext16:	
  5192 ;; *************** function _I2C_MasterOperation *****************
  5193 ;; Defined at:
  5194 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  read            1    wreg     _Bool 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  read            1    8[COMMON] _Bool 
  5199 ;;  returnValue     1    9[COMMON] enum E355
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      enum E355
  5202 ;; Registers used:
  5203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5209 ;;      Params:         0       0       0       0       0       0       0       0
  5210 ;;      Locals:         2       0       0       0       0       0       0       0
  5211 ;;      Temps:          1       0       0       0       0       0       0       0
  5212 ;;      Totals:         3       0       0       0       0       0       0       0
  5213 ;;Total ram usage:        3 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    6
  5216 ;; This function calls:
  5217 ;;		_I2C_MasterStart
  5218 ;;		_I2C_Poller
  5219 ;; This function is called by:
  5220 ;;		_I2C_MasterRead
  5221 ;;		_I2C_MasterWrite
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function _I2C_MasterOperation
  5227  0594                     _I2C_MasterOperation:
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5231                           ;I2C_MasterOperation@read stored from wreg
  5232  0594  00F8               	movwf	I2C_MasterOperation@read
  5233  0595                     l2611:
  5234                           
  5235                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5236  0595  01F9               	clrf	I2C_MasterOperation@returnValue
  5237  0596  0AF9               	incf	I2C_MasterOperation@returnValue,f
  5238                           
  5239                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  5240  0597  0020               	movlb	0	; select bank0
  5241  0598  18BC               	btfsc	_I2C_Status+28,1
  5242  0599  2D9B               	goto	u581
  5243  059A  2D9C               	goto	u580
  5244  059B                     u581:
  5245  059B  2DB0               	goto	l2627
  5246  059C                     u580:
  5247  059C                     l2613:
  5248                           
  5249                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  5250  059C  14BC               	bsf	_I2C_Status+28,1
  5251  059D                     l2615:
  5252                           
  5253                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  5254  059D  01F9               	clrf	I2C_MasterOperation@returnValue
  5255  059E                     l2617:
  5256                           
  5257                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  5258  059E  0878               	movf	I2C_MasterOperation@read,w
  5259  059F  1903               	btfsc	3,2
  5260  05A0  2DA2               	goto	u591
  5261  05A1  2DA3               	goto	u590
  5262  05A2                     u591:
  5263  05A2  2DA6               	goto	l2621
  5264  05A3                     u590:
  5265  05A3                     l2619:
  5266                           
  5267                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  5268  05A3  01BA               	clrf	_I2C_Status+26
  5269  05A4  0ABA               	incf	_I2C_Status+26,f
  5270                           
  5271                           ;mcc_generated_files/i2c_master.c: 235:         }
  5272  05A5  2DAA               	goto	l2623
  5273  05A6                     l2621:
  5274                           
  5275                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  5276  05A6  3002               	movlw	2
  5277  05A7  00F7               	movwf	??_I2C_MasterOperation
  5278  05A8  0877               	movf	??_I2C_MasterOperation,w
  5279  05A9  00BA               	movwf	_I2C_Status+26
  5280  05AA                     l2623:
  5281                           
  5282                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  5283  05AA  3183  23EB  3185   	fcall	_I2C_MasterStart
  5284  05AD                     l2625:
  5285                           
  5286                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  5287  05AD  3184  24AD  3185   	fcall	_I2C_Poller
  5288  05B0                     l2627:
  5289                           
  5290                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  5291  05B0  0879               	movf	I2C_MasterOperation@returnValue,w
  5292  05B1                     l435:
  5293  05B1  0008               	return
  5294  05B2                     __end_of_I2C_MasterOperation:
  5295                           
  5296                           	psect	text17
  5297  04AD                     __ptext17:	
  5298 ;; *************** function _I2C_Poller *****************
  5299 ;; Defined at:
  5300 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5314 ;;      Params:         0       0       0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    5
  5321 ;; This function calls:
  5322 ;;		_I2C_MasterFsm
  5323 ;;		_I2C_MasterWaitForEvent
  5324 ;; This function is called by:
  5325 ;;		_I2C_MasterOperation
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           
  5330                           ;psect for function _I2C_Poller
  5331  04AD                     _I2C_Poller:
  5332  04AD                     l2503:	
  5333                           ;incstack = 0
  5334                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5335                           
  5336                           
  5337                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5338  04AD  2CB4               	goto	l2509
  5339  04AE                     l2505:
  5340                           
  5341                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  5342  04AE  3184  2446  3184   	fcall	_I2C_MasterWaitForEvent
  5343  04B1                     l2507:
  5344                           
  5345                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  5346  04B1  3185  25F9  3184   	fcall	_I2C_MasterFsm
  5347  04B4                     l2509:
  5348                           
  5349                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5350  04B4  0020               	movlb	0	; select bank0
  5351  04B5  18BC               	btfsc	_I2C_Status+28,1
  5352  04B6  2CB8               	goto	u551
  5353  04B7  2CB9               	goto	u550
  5354  04B8                     u551:
  5355  04B8  2CAE               	goto	l2505
  5356  04B9                     u550:
  5357  04B9                     l474:
  5358  04B9  0008               	return
  5359  04BA                     __end_of_I2C_Poller:
  5360                           
  5361                           	psect	text18
  5362  0446                     __ptext18:	
  5363 ;; *************** function _I2C_MasterWaitForEvent *****************
  5364 ;; Defined at:
  5365 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		None
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5379 ;;      Params:         0       0       0       0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0       0
  5382 ;;      Totals:         0       0       0       0       0       0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_I2C_Poller
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           
  5393                           ;psect for function _I2C_MasterWaitForEvent
  5394  0446                     _I2C_MasterWaitForEvent:
  5395  0446                     l647:	
  5396                           ;incstack = 0
  5397                           ; Regs used in _I2C_MasterWaitForEvent: []
  5398                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
  5399                           
  5400                           
  5401                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSP1IF)
  5402  0446  0020               	movlb	0	; select bank0
  5403  0447  1D91               	btfss	17,3	;volatile
  5404  0448  2C4A               	goto	u521
  5405  0449  2C4B               	goto	u520
  5406  044A                     u521:
  5407  044A  2C46               	goto	l647
  5408  044B                     u520:
  5409  044B                     l651:
  5410  044B  0008               	return
  5411  044C                     __end_of_I2C_MasterWaitForEvent:
  5412                           
  5413                           	psect	text19
  5414  05F9                     __ptext19:	
  5415 ;; *************** function _I2C_MasterFsm *****************
  5416 ;; Defined at:
  5417 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5431 ;;      Params:         0       0       0       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0
  5433 ;;      Temps:          3       0       0       0       0       0       0       0
  5434 ;;      Totals:         3       0       0       0       0       0       0       0
  5435 ;;Total ram usage:        3 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    4
  5438 ;; This function calls:
  5439 ;;		_I2C_DO_ADDRESS_NACK
  5440 ;;		_I2C_DO_IDLE
  5441 ;;		_I2C_DO_RCEN
  5442 ;;		_I2C_DO_RESET
  5443 ;;		_I2C_DO_RX
  5444 ;;		_I2C_DO_RX_ACK
  5445 ;;		_I2C_DO_RX_NACK_RESTART
  5446 ;;		_I2C_DO_RX_NACK_STOP
  5447 ;;		_I2C_DO_SEND_ADR_READ
  5448 ;;		_I2C_DO_SEND_ADR_WRITE
  5449 ;;		_I2C_DO_SEND_RESTART
  5450 ;;		_I2C_DO_SEND_RESTART_READ
  5451 ;;		_I2C_DO_SEND_RESTART_WRITE
  5452 ;;		_I2C_DO_SEND_STOP
  5453 ;;		_I2C_DO_TX
  5454 ;;		_I2C_DO_TX_EMPTY
  5455 ;;		_I2C_MasterClearIrq
  5456 ;;		_I2C_MasterIsNack
  5457 ;; This function is called by:
  5458 ;;		_I2C_Poller
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function _I2C_MasterFsm
  5464  05F9                     _I2C_MasterFsm:
  5465  05F9                     l2485:	
  5466                           ;incstack = 0
  5467                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5468                           
  5469                           
  5470                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  5471  05F9  3183  23E2  3185   	fcall	_I2C_MasterClearIrq
  5472  05FC                     l2487:
  5473                           
  5474                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5475  05FC  0020               	movlb	0	; select bank0
  5476  05FD  1C3C               	btfss	_I2C_Status+28,0
  5477  05FE  2E00               	goto	u531
  5478  05FF  2E01               	goto	u530
  5479  0600                     u531:
  5480  0600  2E0E               	goto	l2493
  5481  0601                     u530:
  5482  0601                     l2489:
  5483  0601  3184  2440  3185   	fcall	_I2C_MasterIsNack
  5484  0604  3A00               	xorlw	0
  5485  0605  1903               	skipnz
  5486  0606  2E08               	goto	u541
  5487  0607  2E09               	goto	u540
  5488  0608                     u541:
  5489  0608  2E0E               	goto	l2493
  5490  0609                     u540:
  5491  0609                     l2491:
  5492                           
  5493                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5494  0609  300F               	movlw	15
  5495  060A  00F4               	movwf	??_I2C_MasterFsm
  5496  060B  0874               	movf	??_I2C_MasterFsm,w
  5497  060C  0020               	movlb	0	; select bank0
  5498  060D  00BA               	movwf	_I2C_Status+26
  5499  060E                     l2493:
  5500                           
  5501                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  5502  060E  0020               	movlb	0	; select bank0
  5503  060F  083A               	movf	_I2C_Status+26,w
  5504  0610  00F4               	movwf	??_I2C_MasterFsm
  5505  0611  01F5               	clrf	??_I2C_MasterFsm+1
  5506  0612  35F4               	lslf	??_I2C_MasterFsm,f
  5507  0613  0DF5               	rlf	??_I2C_MasterFsm+1,f
  5508  0614  304A               	movlw	low (_i2c_fsmStateTable| (0+32768))
  5509  0615  0774               	addwf	??_I2C_MasterFsm,w
  5510  0616  0084               	movwf	4
  5511  0617  3088               	movlw	high (_i2c_fsmStateTable| (0+32768))
  5512  0618  3D75               	addwfc	??_I2C_MasterFsm+1,w
  5513  0619  0085               	movwf	5
  5514  061A  3F01               	moviw [1]fsr0
  5515  061B  008A               	movwf	10
  5516  061C  3F00               	moviw [0]fsr0
  5517  061D  000A               	callw
  5518  061E  3185               	pagesel	$
  5519  061F  00F6               	movwf	??_I2C_MasterFsm+2
  5520  0620  0876               	movf	??_I2C_MasterFsm+2,w
  5521  0621  0020               	movlb	0	; select bank0
  5522  0622  00BA               	movwf	_I2C_Status+26
  5523  0623                     l478:
  5524  0623  0008               	return
  5525  0624                     __end_of_I2C_MasterFsm:
  5526                           
  5527                           	psect	text20
  5528  0624                     __ptext20:	
  5529 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5530 ;; Defined at:
  5531 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;		None
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      enum E9284
  5538 ;; Registers used:
  5539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5545 ;;      Params:         0       0       0       0       0       0       0       0
  5546 ;;      Locals:         0       0       0       0       0       0       0       0
  5547 ;;      Temps:          3       0       0       0       0       0       0       0
  5548 ;;      Totals:         3       0       0       0       0       0       0       0
  5549 ;;Total ram usage:        3 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    3
  5552 ;; This function calls:
  5553 ;;		Absolute function
  5554 ;;		_I2C_CallbackReturnReset
  5555 ;;		_I2C_CallbackReturnStop
  5556 ;;		_I2C_DO_SEND_RESTART
  5557 ;;		_I2C_DO_SEND_STOP
  5558 ;;		_rd1RegCompleteHandler
  5559 ;;		_rd2RegCompleteHandler
  5560 ;;		_rdBlkRegCompleteHandler
  5561 ;;		_wr1RegCompleteHandler
  5562 ;;		_wr2RegCompleteHandler
  5563 ;; This function is called by:
  5564 ;;		_I2C_MasterFsm
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           
  5569                           ;psect for function _I2C_DO_ADDRESS_NACK
  5570  0624                     _I2C_DO_ADDRESS_NACK:
  5571  0624                     l2463:	
  5572                           ;incstack = 0
  5573                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5574                           
  5575                           
  5576                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  5577  0624  0020               	movlb	0	; select bank0
  5578  0625  103C               	bcf	_I2C_Status+28,0
  5579  0626                     l2465:
  5580                           
  5581                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  5582  0626  3002               	movlw	2
  5583  0627  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  5584  0628  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  5585  0629  00BB               	movwf	_I2C_Status+27
  5586                           
  5587                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5588  062A  2E33               	goto	l2477
  5589  062B                     l2467:
  5590                           
  5591                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  5592  062B  3184  241D  3186   	fcall	_I2C_DO_SEND_RESTART
  5593  062E  2E4F               	goto	l569
  5594  062F                     l2471:
  5595                           
  5596                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  5597  062F  3184  2422  3186   	fcall	_I2C_DO_SEND_STOP
  5598  0632  2E4F               	goto	l569
  5599  0633                     l2477:
  5600  0633  082E               	movf	low ((_I2C_Status| 0+14)),w
  5601  0634  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  5602  0635  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  5603  0636  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  5604  0637  3004               	movlw	4
  5605  0638  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5606  0639  0086               	movwf	6
  5607  063A  0187               	clrf	7
  5608  063B  3F41               	moviw [1]fsr1
  5609  063C  008A               	movwf	10
  5610  063D  3F40               	moviw [0]fsr1
  5611  063E  000A               	callw
  5612  063F  3186               	pagesel	$
  5613  0640  00F1               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5614  0641  01F2               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5615                           
  5616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5617                           ; Switch size 1, requested type "simple"
  5618                           ; Number of cases is 1, Range of values is 0 to 0
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte            4     3 (average)
  5622                           ; direct_byte            8     6 (fixed)
  5623                           ; jumptable            260     6 (fixed)
  5624                           ;	Chosen strategy is simple_byte
  5625  0642  0872               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5626  0643  3A00               	xorlw	0	; case 0
  5627  0644  1903               	skipnz
  5628  0645  2E47               	goto	l2947
  5629  0646  2E2F               	goto	l2471
  5630  0647                     l2947:
  5631                           
  5632                           ; Switch size 1, requested type "simple"
  5633                           ; Number of cases is 2, Range of values is 2 to 3
  5634                           ; switch strategies available:
  5635                           ; Name         Instructions Cycles
  5636                           ; simple_byte            7     4 (average)
  5637                           ; direct_byte           13     9 (fixed)
  5638                           ; jumptable            263     9 (fixed)
  5639                           ;	Chosen strategy is simple_byte
  5640  0647  0871               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5641  0648  3A02               	xorlw	2	; case 2
  5642  0649  1903               	skipnz
  5643  064A  2E2B               	goto	l2467
  5644  064B  3A01               	xorlw	1	; case 3
  5645  064C  1903               	skipnz
  5646  064D  2E2B               	goto	l2467
  5647  064E  2E2F               	goto	l2471
  5648  064F                     l569:
  5649  064F  0008               	return
  5650  0650                     __end_of_I2C_DO_ADDRESS_NACK:
  5651                           
  5652                           	psect	text21
  5653  0436                     __ptext21:	
  5654 ;; *************** function _I2C_DO_RESET *****************
  5655 ;; Defined at:
  5656 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;		None
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  1    wreg      enum E9284
  5663 ;; Registers used:
  5664 ;;		wreg, status,2
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5670 ;;      Params:         0       0       0       0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0       0
  5673 ;;      Totals:         0       0       0       0       0       0       0       0
  5674 ;;Total ram usage:        0 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_I2C_MasterFsm
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           
  5684                           ;psect for function _I2C_DO_RESET
  5685  0436                     _I2C_DO_RESET:
  5686  0436                     l2455:	
  5687                           ;incstack = 0
  5688                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5689                           
  5690                           
  5691                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  5692  0436  0020               	movlb	0	; select bank0
  5693  0437  10BC               	bcf	_I2C_Status+28,1
  5694  0438                     l2457:
  5695                           
  5696                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  5697  0438  01BB               	clrf	_I2C_Status+27
  5698  0439                     l2459:
  5699                           
  5700                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  5701  0439  300E               	movlw	14
  5702  043A                     l563:
  5703  043A  0008               	return
  5704  043B                     __end_of_I2C_DO_RESET:
  5705                           
  5706                           	psect	text22
  5707  0431                     __ptext22:	
  5708 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5709 ;; Defined at:
  5710 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  5711 ;; Parameters:    Size  Location     Type
  5712 ;;		None
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;		None
  5715 ;; Return value:  Size  Location     Type
  5716 ;;                  1    wreg      enum E9284
  5717 ;; Registers used:
  5718 ;;		wreg, status,2, status,0, pclath, cstack
  5719 ;; Tracked objects:
  5720 ;;		On entry : 0/0
  5721 ;;		On exit  : 0/0
  5722 ;;		Unchanged: 0/0
  5723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5724 ;;      Params:         0       0       0       0       0       0       0       0
  5725 ;;      Locals:         0       0       0       0       0       0       0       0
  5726 ;;      Temps:          0       0       0       0       0       0       0       0
  5727 ;;      Totals:         0       0       0       0       0       0       0       0
  5728 ;;Total ram usage:        0 bytes
  5729 ;; Hardware stack levels used:    1
  5730 ;; Hardware stack levels required when called:    1
  5731 ;; This function calls:
  5732 ;;		_I2C_MasterSendNack
  5733 ;; This function is called by:
  5734 ;;		_I2C_DO_RX
  5735 ;;		_I2C_MasterFsm
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           
  5740                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5741  0431                     _I2C_DO_RX_NACK_RESTART:
  5742  0431                     l2259:	
  5743                           ;incstack = 0
  5744                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5745                           
  5746                           
  5747                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  5748  0431  3183  23FD  3184   	fcall	_I2C_MasterSendNack
  5749  0434                     l2261:
  5750                           
  5751                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  5752  0434  3009               	movlw	9
  5753  0435                     l560:
  5754  0435  0008               	return
  5755  0436                     __end_of_I2C_DO_RX_NACK_RESTART:
  5756                           
  5757                           	psect	text23
  5758  042C                     __ptext23:	
  5759 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5760 ;; Defined at:
  5761 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;		None
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      enum E9284
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0, pclath, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5775 ;;      Params:         0       0       0       0       0       0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0
  5778 ;;      Totals:         0       0       0       0       0       0       0       0
  5779 ;;Total ram usage:        0 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    1
  5782 ;; This function calls:
  5783 ;;		_I2C_MasterSendNack
  5784 ;; This function is called by:
  5785 ;;		_I2C_DO_RX
  5786 ;;		_I2C_MasterFsm
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           
  5791                           ;psect for function _I2C_DO_RX_NACK_STOP
  5792  042C                     _I2C_DO_RX_NACK_STOP:
  5793  042C                     l2265:	
  5794                           ;incstack = 0
  5795                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5796                           
  5797                           
  5798                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  5799  042C  3183  23FD  3184   	fcall	_I2C_MasterSendNack
  5800  042F                     l2267:
  5801                           
  5802                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  5803  042F  300A               	movlw	10
  5804  0430                     l557:
  5805  0430  0008               	return
  5806  0431                     __end_of_I2C_DO_RX_NACK_STOP:
  5807                           
  5808                           	psect	text24
  5809  0427                     __ptext24:	
  5810 ;; *************** function _I2C_DO_RX_ACK *****************
  5811 ;; Defined at:
  5812 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;		None
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;		None
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      enum E9284
  5819 ;; Registers used:
  5820 ;;		wreg, status,2, status,0, pclath, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5826 ;;      Params:         0       0       0       0       0       0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0
  5829 ;;      Totals:         0       0       0       0       0       0       0       0
  5830 ;;Total ram usage:        0 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    1
  5833 ;; This function calls:
  5834 ;;		_I2C_MasterSendAck
  5835 ;; This function is called by:
  5836 ;;		_I2C_MasterFsm
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           
  5841                           ;psect for function _I2C_DO_RX_ACK
  5842  0427                     _I2C_DO_RX_ACK:
  5843  0427                     l2449:	
  5844                           ;incstack = 0
  5845                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5846                           
  5847                           
  5848                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5849  0427  3184  2401  3184   	fcall	_I2C_MasterSendAck
  5850  042A                     l2451:
  5851                           
  5852                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5853  042A  3005               	movlw	5
  5854  042B                     l554:
  5855  042B  0008               	return
  5856  042C                     __end_of_I2C_DO_RX_ACK:
  5857                           
  5858                           	psect	text25
  5859  0422                     __ptext25:	
  5860 ;; *************** function _I2C_DO_SEND_STOP *****************
  5861 ;; Defined at:
  5862 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      enum E9284
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0, pclath, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5876 ;;      Params:         0       0       0       0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0       0       0       0
  5878 ;;      Temps:          0       0       0       0       0       0       0       0
  5879 ;;      Totals:         0       0       0       0       0       0       0       0
  5880 ;;Total ram usage:        0 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    1
  5883 ;; This function calls:
  5884 ;;		_I2C_MasterStop
  5885 ;; This function is called by:
  5886 ;;		_I2C_DO_TX
  5887 ;;		_I2C_DO_TX_EMPTY
  5888 ;;		_I2C_DO_ADDRESS_NACK
  5889 ;;		_I2C_MasterFsm
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           
  5894                           ;psect for function _I2C_DO_SEND_STOP
  5895  0422                     _I2C_DO_SEND_STOP:
  5896  0422                     l2247:	
  5897                           ;incstack = 0
  5898                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5899                           
  5900                           
  5901                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5902  0422  3183  23F1  3184   	fcall	_I2C_MasterStop
  5903  0425                     l2249:
  5904                           
  5905                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5906  0425  3000               	movlw	0
  5907  0426                     l551:
  5908  0426  0008               	return
  5909  0427                     __end_of_I2C_DO_SEND_STOP:
  5910                           
  5911                           	psect	text26
  5912  041D                     __ptext26:	
  5913 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5914 ;; Defined at:
  5915 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      enum E9284
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0, pclath, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5929 ;;      Params:         0       0       0       0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    1
  5936 ;; This function calls:
  5937 ;;		_I2C_MasterEnableRestart
  5938 ;; This function is called by:
  5939 ;;		_I2C_DO_TX_EMPTY
  5940 ;;		_I2C_DO_ADDRESS_NACK
  5941 ;;		_I2C_MasterFsm
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _I2C_DO_SEND_RESTART
  5947  041D                     _I2C_DO_SEND_RESTART:
  5948  041D                     l2273:	
  5949                           ;incstack = 0
  5950                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5951                           
  5952                           
  5953                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5954  041D  3183  23EE  3184   	fcall	_I2C_MasterEnableRestart
  5955  0420                     l2275:
  5956                           
  5957                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5958  0420  3001               	movlw	1
  5959  0421                     l548:
  5960  0421  0008               	return
  5961  0422                     __end_of_I2C_DO_SEND_RESTART:
  5962                           
  5963                           	psect	text27
  5964  0418                     __ptext27:	
  5965 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5966 ;; Defined at:
  5967 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;		None
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;		None
  5972 ;; Return value:  Size  Location     Type
  5973 ;;                  1    wreg      enum E9284
  5974 ;; Registers used:
  5975 ;;		wreg, status,2, status,0, pclath, cstack
  5976 ;; Tracked objects:
  5977 ;;		On entry : 0/0
  5978 ;;		On exit  : 0/0
  5979 ;;		Unchanged: 0/0
  5980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5981 ;;      Params:         0       0       0       0       0       0       0       0
  5982 ;;      Locals:         0       0       0       0       0       0       0       0
  5983 ;;      Temps:          0       0       0       0       0       0       0       0
  5984 ;;      Totals:         0       0       0       0       0       0       0       0
  5985 ;;Total ram usage:        0 bytes
  5986 ;; Hardware stack levels used:    1
  5987 ;; Hardware stack levels required when called:    1
  5988 ;; This function calls:
  5989 ;;		_I2C_MasterEnableRestart
  5990 ;; This function is called by:
  5991 ;;		_I2C_DO_TX
  5992 ;;		_I2C_MasterFsm
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           
  5997                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  5998  0418                     _I2C_DO_SEND_RESTART_WRITE:
  5999  0418                     l2241:	
  6000                           ;incstack = 0
  6001                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6002                           
  6003                           
  6004                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  6005  0418  3183  23EE  3184   	fcall	_I2C_MasterEnableRestart
  6006  041B                     l2243:
  6007                           
  6008                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  6009  041B  3002               	movlw	2
  6010  041C                     l545:
  6011  041C  0008               	return
  6012  041D                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  6013                           
  6014                           	psect	text28
  6015  0413                     __ptext28:	
  6016 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6017 ;; Defined at:
  6018 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      enum E9284
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, status,0, pclath, cstack
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6032 ;;      Params:         0       0       0       0       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0
  6035 ;;      Totals:         0       0       0       0       0       0       0       0
  6036 ;;Total ram usage:        0 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    1
  6039 ;; This function calls:
  6040 ;;		_I2C_MasterEnableRestart
  6041 ;; This function is called by:
  6042 ;;		_I2C_DO_TX
  6043 ;;		_I2C_MasterFsm
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           
  6048                           ;psect for function _I2C_DO_SEND_RESTART_READ
  6049  0413                     _I2C_DO_SEND_RESTART_READ:
  6050  0413                     l2235:	
  6051                           ;incstack = 0
  6052                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  6053                           
  6054                           
  6055                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  6056  0413  3183  23EE  3184   	fcall	_I2C_MasterEnableRestart
  6057  0416                     l2237:
  6058                           
  6059                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  6060  0416  3001               	movlw	1
  6061  0417                     l542:
  6062  0417  0008               	return
  6063  0418                     __end_of_I2C_DO_SEND_RESTART_READ:
  6064                           
  6065                           	psect	text29
  6066  0464                     __ptext29:	
  6067 ;; *************** function _I2C_DO_RCEN *****************
  6068 ;; Defined at:
  6069 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      enum E9284
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, pclath, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6083 ;;      Params:         0       0       0       0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0
  6086 ;;      Totals:         0       0       0       0       0       0       0       0
  6087 ;;Total ram usage:        0 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    1
  6090 ;; This function calls:
  6091 ;;		_I2C_MasterStartRx
  6092 ;; This function is called by:
  6093 ;;		_I2C_MasterFsm
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           
  6098                           ;psect for function _I2C_DO_RCEN
  6099  0464                     _I2C_DO_RCEN:
  6100  0464                     l2417:	
  6101                           ;incstack = 0
  6102                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6103                           
  6104                           
  6105                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  6106  0464  0020               	movlb	0	; select bank0
  6107  0465  103C               	bcf	_I2C_Status+28,0
  6108  0466                     l2419:
  6109                           
  6110                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  6111  0466  3183  23F4  3184   	fcall	_I2C_MasterStartRx
  6112  0469                     l2421:
  6113                           
  6114                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  6115  0469  3004               	movlw	4
  6116  046A                     l518:
  6117  046A  0008               	return
  6118  046B                     __end_of_I2C_DO_RCEN:
  6119                           
  6120                           	psect	text30
  6121  06F3                     __ptext30:	
  6122 ;; *************** function _I2C_DO_RX *****************
  6123 ;; Defined at:
  6124 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;		None
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;		None
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      enum E9284
  6131 ;; Registers used:
  6132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6138 ;;      Params:         0       0       0       0       0       0       0       0
  6139 ;;      Locals:         0       0       0       0       0       0       0       0
  6140 ;;      Temps:          3       0       0       0       0       0       0       0
  6141 ;;      Totals:         3       0       0       0       0       0       0       0
  6142 ;;Total ram usage:        3 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    3
  6145 ;; This function calls:
  6146 ;;		Absolute function
  6147 ;;		_I2C_CallbackReturnReset
  6148 ;;		_I2C_CallbackReturnStop
  6149 ;;		_I2C_DO_RX_NACK_RESTART
  6150 ;;		_I2C_DO_RX_NACK_STOP
  6151 ;;		_I2C_MasterGetRxData
  6152 ;;		_I2C_MasterSendAck
  6153 ;;		_rd1RegCompleteHandler
  6154 ;;		_rd2RegCompleteHandler
  6155 ;;		_rdBlkRegCompleteHandler
  6156 ;;		_wr1RegCompleteHandler
  6157 ;;		_wr2RegCompleteHandler
  6158 ;; This function is called by:
  6159 ;;		_I2C_MasterFsm
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _I2C_DO_RX
  6165  06F3                     _I2C_DO_RX:
  6166  06F3                     l2387:	
  6167                           ;incstack = 0
  6168                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6169                           
  6170                           
  6171                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6172  06F3  3183  23F7  3186   	fcall	_I2C_MasterGetRxData
  6173  06F6  00F0               	movwf	??_I2C_DO_RX
  6174  06F7  0020               	movlb	0	; select bank0
  6175  06F8  0837               	movf	low ((_I2C_Status| 0+23)),w
  6176  06F9  0086               	movwf	6
  6177  06FA  0187               	clrf	7
  6178  06FB  0870               	movf	??_I2C_DO_RX,w
  6179  06FC  0081               	movwf	1
  6180  06FD                     l2389:
  6181  06FD  3001               	movlw	1
  6182  06FE  00F0               	movwf	??_I2C_DO_RX
  6183  06FF  0870               	movf	??_I2C_DO_RX,w
  6184  0700  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  6185  0701                     l2391:
  6186                           
  6187                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  6188  0701  3001               	movlw	1
  6189  0702  02B8               	subwf	_I2C_Status+24,f
  6190  0703  3000               	movlw	0
  6191  0704  3BB9               	subwfb	_I2C_Status+25,f
  6192  0705  0838               	movf	_I2C_Status+24,w
  6193  0706  0439               	iorwf	_I2C_Status+25,w
  6194  0707  1903               	btfsc	3,2
  6195  0708  2F0A               	goto	u511
  6196  0709  2F0B               	goto	u510
  6197  070A                     u511:
  6198  070A  2F10               	goto	l506
  6199  070B                     u510:
  6200  070B                     l2393:
  6201                           
  6202                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  6203  070B  3184  2401  3186   	fcall	_I2C_MasterSendAck
  6204  070E                     l2395:
  6205                           
  6206                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  6207  070E  3005               	movlw	5
  6208  070F  2F38               	goto	l507
  6209  0710                     l506:	
  6210                           ;mcc_generated_files/i2c_master.c: 386:     else
  6211                           
  6212                           
  6213                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  6214  0710  15BC               	bsf	_I2C_Status+28,3
  6215                           
  6216                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6217  0711  2F1A               	goto	l2411
  6218  0712                     l2401:
  6219                           
  6220                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  6221  0712  3184  2431  3186   	fcall	_I2C_DO_RX_NACK_RESTART
  6222  0715  2F38               	goto	l507
  6223  0716                     l2405:
  6224                           
  6225                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  6226  0716  3184  242C  3186   	fcall	_I2C_DO_RX_NACK_STOP
  6227  0719  2F38               	goto	l507
  6228  071A                     l2411:
  6229  071A  082C               	movf	low ((_I2C_Status| 0+12)),w
  6230  071B  00F0               	movwf	??_I2C_DO_RX
  6231  071C  0870               	movf	??_I2C_DO_RX,w
  6232  071D  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  6233  071E  0821               	movf	_I2C_Status+1,w
  6234  071F  008A               	movwf	10
  6235  0720  0820               	movf	_I2C_Status,w
  6236  0721  000A               	callw
  6237  0722  3186               	pagesel	$
  6238  0723  00F1               	movwf	??_I2C_DO_RX+1
  6239  0724  01F2               	clrf	??_I2C_DO_RX+2
  6240                           
  6241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6242                           ; Switch size 1, requested type "simple"
  6243                           ; Number of cases is 1, Range of values is 0 to 0
  6244                           ; switch strategies available:
  6245                           ; Name         Instructions Cycles
  6246                           ; simple_byte            4     3 (average)
  6247                           ; direct_byte            8     6 (fixed)
  6248                           ; jumptable            260     6 (fixed)
  6249                           ;	Chosen strategy is simple_byte
  6250  0725  0872               	movf	??_I2C_DO_RX+2,w
  6251  0726  3A00               	xorlw	0	; case 0
  6252  0727  1903               	skipnz
  6253  0728  2F2A               	goto	l2949
  6254  0729  2F16               	goto	l2405
  6255  072A                     l2949:
  6256                           
  6257                           ; Switch size 1, requested type "simple"
  6258                           ; Number of cases is 4, Range of values is 1 to 4
  6259                           ; switch strategies available:
  6260                           ; Name         Instructions Cycles
  6261                           ; simple_byte           13     7 (average)
  6262                           ; direct_byte           17     9 (fixed)
  6263                           ; jumptable            263     9 (fixed)
  6264                           ;	Chosen strategy is simple_byte
  6265  072A  0871               	movf	??_I2C_DO_RX+1,w
  6266  072B  3A01               	xorlw	1	; case 1
  6267  072C  1903               	skipnz
  6268  072D  2F16               	goto	l2405
  6269  072E  3A03               	xorlw	3	; case 2
  6270  072F  1903               	skipnz
  6271  0730  2F12               	goto	l2401
  6272  0731  3A01               	xorlw	1	; case 3
  6273  0732  1903               	skipnz
  6274  0733  2F12               	goto	l2401
  6275  0734  3A07               	xorlw	7	; case 4
  6276  0735  1903               	skipnz
  6277  0736  2F16               	goto	l2405
  6278  0737  2F16               	goto	l2405
  6279  0738                     l507:
  6280  0738  0008               	return
  6281  0739                     __end_of_I2C_DO_RX:
  6282                           
  6283                           	psect	text31
  6284  0739                     __ptext31:	
  6285 ;; *************** function _I2C_DO_TX *****************
  6286 ;; Defined at:
  6287 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      enum E9284
  6294 ;; Registers used:
  6295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6301 ;;      Params:         0       0       0       0       0       0       0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0
  6303 ;;      Temps:          3       0       0       0       0       0       0       0
  6304 ;;      Totals:         3       0       0       0       0       0       0       0
  6305 ;;Total ram usage:        3 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    3
  6308 ;; This function calls:
  6309 ;;		Absolute function
  6310 ;;		_I2C_CallbackReturnReset
  6311 ;;		_I2C_CallbackReturnStop
  6312 ;;		_I2C_DO_SEND_RESTART_READ
  6313 ;;		_I2C_DO_SEND_RESTART_WRITE
  6314 ;;		_I2C_DO_SEND_STOP
  6315 ;;		_I2C_MasterIsNack
  6316 ;;		_I2C_MasterSendTxData
  6317 ;;		_rd1RegCompleteHandler
  6318 ;;		_rd2RegCompleteHandler
  6319 ;;		_rdBlkRegCompleteHandler
  6320 ;;		_wr1RegCompleteHandler
  6321 ;;		_wr2RegCompleteHandler
  6322 ;; This function is called by:
  6323 ;;		_I2C_MasterFsm
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function _I2C_DO_TX
  6329  0739                     _I2C_DO_TX:
  6330  0739                     l2353:	
  6331                           ;incstack = 0
  6332                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6333                           
  6334                           
  6335                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  6336  0739  3184  2440  3187   	fcall	_I2C_MasterIsNack
  6337  073C  3A00               	xorlw	0
  6338  073D  1903               	skipnz
  6339  073E  2F40               	goto	u491
  6340  073F  2F41               	goto	u490
  6341  0740                     u491:
  6342  0740  2F71               	goto	l490
  6343  0741                     u490:
  6344  0741  2F4E               	goto	l2371
  6345  0742                     l2357:
  6346                           
  6347                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6348  0742  3184  2413  3187   	fcall	_I2C_DO_SEND_RESTART_READ
  6349  0745  2F8D               	goto	l493
  6350  0746                     l2361:
  6351                           
  6352                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6353  0746  3184  2418  3187   	fcall	_I2C_DO_SEND_RESTART_WRITE
  6354  0749  2F8D               	goto	l493
  6355  074A                     l2365:
  6356                           
  6357                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  6358  074A  3184  2422  3187   	fcall	_I2C_DO_SEND_STOP
  6359  074D  2F8D               	goto	l493
  6360  074E                     l2371:
  6361  074E  0020               	movlb	0	; select bank0
  6362  074F  082F               	movf	low ((_I2C_Status| 0+15)),w
  6363  0750  00F1               	movwf	??_I2C_DO_TX
  6364  0751  0871               	movf	??_I2C_DO_TX,w
  6365  0752  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  6366  0753  3006               	movlw	6
  6367  0754  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6368  0755  0086               	movwf	6
  6369  0756  0187               	clrf	7
  6370  0757  3F41               	moviw [1]fsr1
  6371  0758  008A               	movwf	10
  6372  0759  3F40               	moviw [0]fsr1
  6373  075A  000A               	callw
  6374  075B  3187               	pagesel	$
  6375  075C  00F2               	movwf	??_I2C_DO_TX+1
  6376  075D  01F3               	clrf	??_I2C_DO_TX+2
  6377                           
  6378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6379                           ; Switch size 1, requested type "simple"
  6380                           ; Number of cases is 1, Range of values is 0 to 0
  6381                           ; switch strategies available:
  6382                           ; Name         Instructions Cycles
  6383                           ; simple_byte            4     3 (average)
  6384                           ; direct_byte            8     6 (fixed)
  6385                           ; jumptable            260     6 (fixed)
  6386                           ;	Chosen strategy is simple_byte
  6387  075E  0873               	movf	??_I2C_DO_TX+2,w
  6388  075F  3A00               	xorlw	0	; case 0
  6389  0760  1903               	skipnz
  6390  0761  2F63               	goto	l2951
  6391  0762  2F4A               	goto	l2365
  6392  0763                     l2951:
  6393                           
  6394                           ; Switch size 1, requested type "simple"
  6395                           ; Number of cases is 4, Range of values is 1 to 4
  6396                           ; switch strategies available:
  6397                           ; Name         Instructions Cycles
  6398                           ; simple_byte           13     7 (average)
  6399                           ; direct_byte           17     9 (fixed)
  6400                           ; jumptable            263     9 (fixed)
  6401                           ;	Chosen strategy is simple_byte
  6402  0763  0872               	movf	??_I2C_DO_TX+1,w
  6403  0764  3A01               	xorlw	1	; case 1
  6404  0765  1903               	skipnz
  6405  0766  2F4A               	goto	l2365
  6406  0767  3A03               	xorlw	3	; case 2
  6407  0768  1903               	skipnz
  6408  0769  2F42               	goto	l2357
  6409  076A  3A01               	xorlw	1	; case 3
  6410  076B  1903               	skipnz
  6411  076C  2F46               	goto	l2361
  6412  076D  3A07               	xorlw	7	; case 4
  6413  076E  1903               	skipnz
  6414  076F  2F4A               	goto	l2365
  6415  0770  2F4A               	goto	l2365
  6416  0771                     l490:	
  6417                           ;mcc_generated_files/i2c_master.c: 370:     else
  6418                           
  6419                           
  6420                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  6421  0771  0020               	movlb	0	; select bank0
  6422  0772  103C               	bcf	_I2C_Status+28,0
  6423  0773                     l2373:
  6424                           
  6425                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6426  0773  3017               	movlw	23
  6427  0774  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6428  0775  0086               	movwf	6
  6429  0776  0187               	clrf	7
  6430  0777  3F40               	moviw [0]fsr1
  6431  0778  0084               	movwf	4
  6432  0779  0185               	clrf	5
  6433  077A  0A81               	incf	1,f
  6434  077B  0800               	movf	0,w
  6435  077C  3184  2409  3187   	fcall	_I2C_MasterSendTxData
  6436  077F                     l2375:
  6437                           
  6438                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6439  077F  3001               	movlw	1
  6440  0780  0020               	movlb	0	; select bank0
  6441  0781  02B8               	subwf	_I2C_Status+24,f
  6442  0782  3000               	movlw	0
  6443  0783  3BB9               	subwfb	_I2C_Status+25,f
  6444  0784  0838               	movf	_I2C_Status+24,w
  6445  0785  0439               	iorwf	_I2C_Status+25,w
  6446  0786  1D03               	btfss	3,2
  6447  0787  2F89               	goto	u501
  6448  0788  2F8A               	goto	u500
  6449  0789                     u501:
  6450  0789  2F8C               	goto	l2379
  6451  078A                     u500:
  6452  078A                     l2377:
  6453  078A  3006               	movlw	6
  6454  078B  2F8D               	goto	l493
  6455  078C                     l2379:
  6456  078C  3003               	movlw	3
  6457  078D                     l493:
  6458  078D  0008               	return
  6459  078E                     __end_of_I2C_DO_TX:
  6460                           
  6461                           	psect	text32
  6462  046B                     __ptext32:	
  6463 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6464 ;; Defined at:
  6465 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      enum E9284
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0, pclath, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6479 ;;      Params:         0       0       0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0       0       0
  6482 ;;      Totals:         0       0       0       0       0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    1
  6486 ;; This function calls:
  6487 ;;		_I2C_MasterSendTxData
  6488 ;; This function is called by:
  6489 ;;		_I2C_MasterFsm
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6495  046B                     _I2C_DO_SEND_ADR_WRITE:
  6496  046B                     l2345:	
  6497                           ;incstack = 0
  6498                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6499                           
  6500                           
  6501                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  6502  046B  0020               	movlb	0	; select bank0
  6503  046C  143C               	bsf	_I2C_Status+28,0
  6504  046D                     l2347:
  6505                           
  6506                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  6507  046D  3536               	lslf	_I2C_Status+22,w
  6508  046E  3184  2409  3184   	fcall	_I2C_MasterSendTxData
  6509  0471                     l2349:
  6510                           
  6511                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  6512  0471  3003               	movlw	3
  6513  0472                     l487:
  6514  0472  0008               	return
  6515  0473                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6516                           
  6517                           	psect	text33
  6518  047B                     __ptext33:	
  6519 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6520 ;; Defined at:
  6521 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  1    wreg      enum E9284
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0, pclath, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6535 ;;      Params:         0       0       0       0       0       0       0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0
  6538 ;;      Totals:         0       0       0       0       0       0       0       0
  6539 ;;Total ram usage:        0 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    1
  6542 ;; This function calls:
  6543 ;;		_I2C_MasterSendTxData
  6544 ;; This function is called by:
  6545 ;;		_I2C_MasterFsm
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           
  6550                           ;psect for function _I2C_DO_SEND_ADR_READ
  6551  047B                     _I2C_DO_SEND_ADR_READ:
  6552  047B                     l2337:	
  6553                           ;incstack = 0
  6554                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6555                           
  6556                           
  6557                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  6558  047B  0020               	movlb	0	; select bank0
  6559  047C  143C               	bsf	_I2C_Status+28,0
  6560  047D                     l2339:
  6561                           
  6562                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  6563  047D  1403               	setc
  6564  047E  0D36               	rlf	_I2C_Status+22,w
  6565  047F  3184  2409  3184   	fcall	_I2C_MasterSendTxData
  6566  0482                     l2341:
  6567                           
  6568                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  6569  0482  3005               	movlw	5
  6570  0483                     l484:
  6571  0483  0008               	return
  6572  0484                     __end_of_I2C_DO_SEND_ADR_READ:
  6573                           
  6574                           	psect	text34
  6575  040E                     __ptext34:	
  6576 ;; *************** function _I2C_DO_IDLE *****************
  6577 ;; Defined at:
  6578 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      enum E9284
  6585 ;; Registers used:
  6586 ;;		wreg, status,2
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6592 ;;      Params:         0       0       0       0       0       0       0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0
  6595 ;;      Totals:         0       0       0       0       0       0       0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_I2C_MasterFsm
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           
  6606                           ;psect for function _I2C_DO_IDLE
  6607  040E                     _I2C_DO_IDLE:
  6608  040E                     l2329:	
  6609                           ;incstack = 0
  6610                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6611                           
  6612                           
  6613                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  6614  040E  0020               	movlb	0	; select bank0
  6615  040F  10BC               	bcf	_I2C_Status+28,1
  6616  0410                     l2331:
  6617                           
  6618                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  6619  0410  01BB               	clrf	_I2C_Status+27
  6620  0411                     l2333:
  6621                           
  6622                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  6623  0411  300E               	movlw	14
  6624  0412                     l481:
  6625  0412  0008               	return
  6626  0413                     __end_of_I2C_DO_IDLE:
  6627                           
  6628                           	psect	text35
  6629  0650                     __ptext35:	
  6630 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6631 ;; Defined at:
  6632 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;		None
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      enum E9284
  6639 ;; Registers used:
  6640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6646 ;;      Params:         0       0       0       0       0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0
  6648 ;;      Temps:          3       0       0       0       0       0       0       0
  6649 ;;      Totals:         3       0       0       0       0       0       0       0
  6650 ;;Total ram usage:        3 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    3
  6653 ;; This function calls:
  6654 ;;		Absolute function
  6655 ;;		_I2C_CallbackReturnReset
  6656 ;;		_I2C_CallbackReturnStop
  6657 ;;		_I2C_DO_SEND_RESTART
  6658 ;;		_I2C_DO_SEND_STOP
  6659 ;;		_I2C_MasterSetIrq
  6660 ;;		_rd1RegCompleteHandler
  6661 ;;		_rd2RegCompleteHandler
  6662 ;;		_rdBlkRegCompleteHandler
  6663 ;;		_wr1RegCompleteHandler
  6664 ;;		_wr2RegCompleteHandler
  6665 ;; This function is called by:
  6666 ;;		_I2C_MasterFsm
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function _I2C_DO_TX_EMPTY
  6672  0650                     _I2C_DO_TX_EMPTY:
  6673  0650                     l2425:	
  6674                           ;incstack = 0
  6675                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6676                           
  6677                           
  6678                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  6679  0650  0020               	movlb	0	; select bank0
  6680  0651  15BC               	bsf	_I2C_Status+28,3
  6681                           
  6682                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6683  0652  2E60               	goto	l2443
  6684  0653                     l2427:
  6685                           
  6686                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  6687  0653  3184  241D  3186   	fcall	_I2C_DO_SEND_RESTART
  6688  0656  2E7E               	goto	l524
  6689  0657                     l2431:
  6690                           
  6691                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  6692  0657  3183  23FA  3186   	fcall	_I2C_MasterSetIrq
  6693  065A                     l2433:
  6694                           
  6695                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  6696  065A  3003               	movlw	3
  6697  065B  2E7E               	goto	l524
  6698  065C                     l2437:
  6699                           
  6700                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  6701  065C  3184  2422  3186   	fcall	_I2C_DO_SEND_STOP
  6702  065F  2E7E               	goto	l524
  6703  0660                     l2443:
  6704  0660  082C               	movf	low ((_I2C_Status| 0+12)),w
  6705  0661  00F0               	movwf	??_I2C_DO_TX_EMPTY
  6706  0662  0870               	movf	??_I2C_DO_TX_EMPTY,w
  6707  0663  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  6708  0664  0821               	movf	_I2C_Status+1,w
  6709  0665  008A               	movwf	10
  6710  0666  0820               	movf	_I2C_Status,w
  6711  0667  000A               	callw
  6712  0668  3186               	pagesel	$
  6713  0669  00F1               	movwf	??_I2C_DO_TX_EMPTY+1
  6714  066A  01F2               	clrf	??_I2C_DO_TX_EMPTY+2
  6715                           
  6716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6717                           ; Switch size 1, requested type "simple"
  6718                           ; Number of cases is 1, Range of values is 0 to 0
  6719                           ; switch strategies available:
  6720                           ; Name         Instructions Cycles
  6721                           ; simple_byte            4     3 (average)
  6722                           ; direct_byte            8     6 (fixed)
  6723                           ; jumptable            260     6 (fixed)
  6724                           ;	Chosen strategy is simple_byte
  6725  066B  0872               	movf	??_I2C_DO_TX_EMPTY+2,w
  6726  066C  3A00               	xorlw	0	; case 0
  6727  066D  1903               	skipnz
  6728  066E  2E70               	goto	l2953
  6729  066F  2E5C               	goto	l2437
  6730  0670                     l2953:
  6731                           
  6732                           ; Switch size 1, requested type "simple"
  6733                           ; Number of cases is 4, Range of values is 1 to 4
  6734                           ; switch strategies available:
  6735                           ; Name         Instructions Cycles
  6736                           ; simple_byte           13     7 (average)
  6737                           ; direct_byte           17     9 (fixed)
  6738                           ; jumptable            263     9 (fixed)
  6739                           ;	Chosen strategy is simple_byte
  6740  0670  0871               	movf	??_I2C_DO_TX_EMPTY+1,w
  6741  0671  3A01               	xorlw	1	; case 1
  6742  0672  1903               	skipnz
  6743  0673  2E5C               	goto	l2437
  6744  0674  3A03               	xorlw	3	; case 2
  6745  0675  1903               	skipnz
  6746  0676  2E53               	goto	l2427
  6747  0677  3A01               	xorlw	1	; case 3
  6748  0678  1903               	skipnz
  6749  0679  2E53               	goto	l2427
  6750  067A  3A07               	xorlw	7	; case 4
  6751  067B  1903               	skipnz
  6752  067C  2E57               	goto	l2431
  6753  067D  2E5C               	goto	l2437
  6754  067E                     l524:
  6755  067E  0008               	return
  6756  067F                     __end_of_I2C_DO_TX_EMPTY:
  6757                           
  6758                           	psect	text36
  6759  03FA                     __ptext36:	
  6760 ;; *************** function _I2C_MasterSetIrq *****************
  6761 ;; Defined at:
  6762 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  6763 ;; Parameters:    Size  Location     Type
  6764 ;;		None
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;		None
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		None
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6776 ;;      Params:         0       0       0       0       0       0       0       0
  6777 ;;      Locals:         0       0       0       0       0       0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0
  6779 ;;      Totals:         0       0       0       0       0       0       0       0
  6780 ;;Total ram usage:        0 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_I2C_DO_TX_EMPTY
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           
  6790                           ;psect for function _I2C_MasterSetIrq
  6791  03FA                     _I2C_MasterSetIrq:
  6792  03FA                     l2279:	
  6793                           ;incstack = 0
  6794                           ; Regs used in _I2C_MasterSetIrq: []
  6795                           
  6796                           
  6797                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSP1IF = 1;
  6798  03FA  0020               	movlb	0	; select bank0
  6799  03FB  1591               	bsf	17,3	;volatile
  6800  03FC                     l644:
  6801  03FC  0008               	return
  6802  03FD                     __end_of_I2C_MasterSetIrq:
  6803                           
  6804                           	psect	text37
  6805  0440                     __ptext37:	
  6806 ;; *************** function _I2C_MasterIsNack *****************
  6807 ;; Defined at:
  6808 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;		None
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      _Bool 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, status,0
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6822 ;;      Params:         0       0       0       0       0       0       0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0       0
  6825 ;;      Totals:         0       0       0       0       0       0       0       0
  6826 ;;Total ram usage:        0 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; This function calls:
  6829 ;;		Nothing
  6830 ;; This function is called by:
  6831 ;;		_I2C_MasterFsm
  6832 ;;		_I2C_DO_TX
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           
  6837                           ;psect for function _I2C_MasterIsNack
  6838  0440                     _I2C_MasterIsNack:
  6839  0440                     l2229:	
  6840                           ;incstack = 0
  6841                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6842                           
  6843                           
  6844                           ;mcc_generated_files/i2c_master.c: 600:     return SSP1CON2bits.ACKSTAT;
  6845  0440  0024               	movlb	4	; select bank4
  6846  0441  0E16               	swapf	22,w	;volatile
  6847  0442  0C89               	rrf	9,f
  6848  0443  0C89               	rrf	9,f
  6849  0444  3901               	andlw	1
  6850  0445                     l617:
  6851  0445  0008               	return
  6852  0446                     __end_of_I2C_MasterIsNack:
  6853                           
  6854                           	psect	text38
  6855  0409                     __ptext38:	
  6856 ;; *************** function _I2C_MasterSendTxData *****************
  6857 ;; Defined at:
  6858 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  data            1    wreg     unsigned char 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  data            1    0[COMMON] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		wreg
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6872 ;;      Params:         0       0       0       0       0       0       0       0
  6873 ;;      Locals:         1       0       0       0       0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0
  6875 ;;      Totals:         1       0       0       0       0       0       0       0
  6876 ;;Total ram usage:        1 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_I2C_DO_SEND_ADR_READ
  6882 ;;		_I2C_DO_SEND_ADR_WRITE
  6883 ;;		_I2C_DO_TX
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           
  6888                           ;psect for function _I2C_MasterSendTxData
  6889  0409                     _I2C_MasterSendTxData:
  6890                           
  6891                           ;incstack = 0
  6892                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6893                           ;I2C_MasterSendTxData@data stored from wreg
  6894  0409  00F0               	movwf	I2C_MasterSendTxData@data
  6895  040A                     l2233:
  6896                           
  6897                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSP1BUF = data;
  6898  040A  0870               	movf	I2C_MasterSendTxData@data,w
  6899  040B  0024               	movlb	4	; select bank4
  6900  040C  0091               	movwf	17	;volatile
  6901  040D                     l599:
  6902  040D  0008               	return
  6903  040E                     __end_of_I2C_MasterSendTxData:
  6904                           
  6905                           	psect	text39
  6906  0401                     __ptext39:	
  6907 ;; *************** function _I2C_MasterSendAck *****************
  6908 ;; Defined at:
  6909 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		None
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6923 ;;      Params:         0       0       0       0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0       0       0       0
  6926 ;;      Totals:         0       0       0       0       0       0       0       0
  6927 ;;Total ram usage:        0 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_I2C_DO_RX
  6933 ;;		_I2C_DO_RX_ACK
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function _I2C_MasterSendAck
  6939  0401                     _I2C_MasterSendAck:
  6940  0401                     l2257:	
  6941                           ;incstack = 0
  6942                           ; Regs used in _I2C_MasterSendAck: []
  6943                           
  6944                           
  6945                           ;mcc_generated_files/i2c_master.c: 605:     SSP1CON2bits.ACKDT = 0;
  6946  0401  0024               	movlb	4	; select bank4
  6947  0402  1296               	bcf	22,5	;volatile
  6948                           
  6949                           ;mcc_generated_files/i2c_master.c: 606:     SSP1CON2bits.ACKEN = 1;
  6950  0403  1616               	bsf	22,4	;volatile
  6951  0404                     l620:
  6952  0404  0008               	return
  6953  0405                     __end_of_I2C_MasterSendAck:
  6954                           
  6955                           	psect	text40
  6956  03F7                     __ptext40:	
  6957 ;; *************** function _I2C_MasterGetRxData *****************
  6958 ;; Defined at:
  6959 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      unsigned char 
  6966 ;; Registers used:
  6967 ;;		wreg
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6973 ;;      Params:         0       0       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0       0       0
  6976 ;;      Totals:         0       0       0       0       0       0       0       0
  6977 ;;Total ram usage:        0 bytes
  6978 ;; Hardware stack levels used:    1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_I2C_DO_RX
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           
  6987                           ;psect for function _I2C_MasterGetRxData
  6988  03F7                     _I2C_MasterGetRxData:
  6989  03F7                     l2253:	
  6990                           ;incstack = 0
  6991                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6992                           
  6993                           
  6994                           ;mcc_generated_files/i2c_master.c: 565:     return SSP1BUF;
  6995  03F7  0024               	movlb	4	; select bank4
  6996  03F8  0811               	movf	17,w	;volatile
  6997  03F9                     l596:
  6998  03F9  0008               	return
  6999  03FA                     __end_of_I2C_MasterGetRxData:
  7000                           
  7001                           	psect	text41
  7002  03FD                     __ptext41:	
  7003 ;; *************** function _I2C_MasterSendNack *****************
  7004 ;; Defined at:
  7005 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		None
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7019 ;;      Params:         0       0       0       0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0       0       0       0
  7021 ;;      Temps:          0       0       0       0       0       0       0       0
  7022 ;;      Totals:         0       0       0       0       0       0       0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_I2C_DO_RX_NACK_STOP
  7029 ;;		_I2C_DO_RX_NACK_RESTART
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           
  7034                           ;psect for function _I2C_MasterSendNack
  7035  03FD                     _I2C_MasterSendNack:
  7036  03FD                     l2227:	
  7037                           ;incstack = 0
  7038                           ; Regs used in _I2C_MasterSendNack: []
  7039                           
  7040                           
  7041                           ;mcc_generated_files/i2c_master.c: 611:     SSP1CON2bits.ACKDT = 1;
  7042  03FD  0024               	movlb	4	; select bank4
  7043  03FE  1696               	bsf	22,5	;volatile
  7044                           
  7045                           ;mcc_generated_files/i2c_master.c: 612:     SSP1CON2bits.ACKEN = 1;
  7046  03FF  1616               	bsf	22,4	;volatile
  7047  0400                     l623:
  7048  0400  0008               	return
  7049  0401                     __end_of_I2C_MasterSendNack:
  7050                           
  7051                           	psect	text42
  7052  03F4                     __ptext42:	
  7053 ;; *************** function _I2C_MasterStartRx *****************
  7054 ;; Defined at:
  7055 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;		None
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;		None
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		None
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7069 ;;      Params:         0       0       0       0       0       0       0       0
  7070 ;;      Locals:         0       0       0       0       0       0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0
  7072 ;;      Totals:         0       0       0       0       0       0       0       0
  7073 ;;Total ram usage:        0 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_I2C_DO_RCEN
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function _I2C_MasterStartRx
  7084  03F4                     _I2C_MasterStartRx:
  7085  03F4                     l2271:	
  7086                           ;incstack = 0
  7087                           ; Regs used in _I2C_MasterStartRx: []
  7088                           
  7089                           
  7090                           ;mcc_generated_files/i2c_master.c: 585:     SSP1CON2bits.RCEN = 1;
  7091  03F4  0024               	movlb	4	; select bank4
  7092  03F5  1596               	bsf	22,3	;volatile
  7093  03F6                     l608:
  7094  03F6  0008               	return
  7095  03F7                     __end_of_I2C_MasterStartRx:
  7096                           
  7097                           	psect	text43
  7098  0545                     __ptext43:	
  7099 ;; *************** function _rdBlkRegCompleteHandler *****************
  7100 ;; Defined at:
  7101 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  ptr             1    9[COMMON] PTR void 
  7104 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7105 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;		None
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  1    wreg      enum E360
  7110 ;; Registers used:
  7111 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7117 ;;      Params:         1       0       0       0       0       0       0       0
  7118 ;;      Locals:         0       0       0       0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0
  7120 ;;      Totals:         1       0       0       0       0       0       0       0
  7121 ;;Total ram usage:        1 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; Hardware stack levels required when called:    2
  7124 ;; This function calls:
  7125 ;;		_I2C_SetBuffer
  7126 ;;		_I2C_SetDataCompleteCallback
  7127 ;; This function is called by:
  7128 ;;		_I2C_ReadDataBlock
  7129 ;;		_I2C_DO_TX
  7130 ;;		_I2C_DO_RX
  7131 ;;		_I2C_DO_TX_EMPTY
  7132 ;;		_I2C_DO_ADDRESS_NACK
  7133 ;;		_I2C_DO_RX_EMPTY
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           
  7138                           ;psect for function _rdBlkRegCompleteHandler
  7139  0545                     _rdBlkRegCompleteHandler:
  7140  0545                     l2321:	
  7141                           ;incstack = 0
  7142                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7143                           
  7144                           
  7145                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7146  0545  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7147  0546  0086               	movwf	6
  7148  0547  0187               	clrf	7
  7149  0548  3F40               	moviw [0]fsr1
  7150  0549  00F0               	movwf	I2C_SetBuffer@bufferSize
  7151  054A  3F41               	moviw [1]fsr1
  7152  054B  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7153  054C  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  7154  054D  3E02               	addlw	2
  7155  054E  0086               	movwf	6
  7156  054F  0187               	clrf	7
  7157  0550  0801               	movf	1,w
  7158  0551  3184  24C7  3185   	fcall	_I2C_SetBuffer
  7159                           
  7160                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7161  0554  3000               	movlw	0
  7162  0555  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7163  0556  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7164  0557  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7165  0558  3184  24A0  3185   	fcall	_I2C_SetDataCompleteCallback
  7166  055B                     l2323:
  7167                           
  7168                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7169  055B  3002               	movlw	2
  7170  055C                     l753:
  7171  055C  0008               	return
  7172  055D                     __end_of_rdBlkRegCompleteHandler:
  7173                           
  7174                           	psect	text44
  7175  050A                     __ptext44:	
  7176 ;; *************** function _wr1RegCompleteHandler *****************
  7177 ;; Defined at:
  7178 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  ptr             1    9[COMMON] PTR void 
  7181 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7182 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      enum E360
  7187 ;; Registers used:
  7188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7194 ;;      Params:         1       0       0       0       0       0       0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0       0
  7197 ;;      Totals:         1       0       0       0       0       0       0       0
  7198 ;;Total ram usage:        1 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    2
  7201 ;; This function calls:
  7202 ;;		_I2C_SetBuffer
  7203 ;;		_I2C_SetDataCompleteCallback
  7204 ;; This function is called by:
  7205 ;;		_I2C_Write1ByteRegister
  7206 ;;		_I2C_DO_TX
  7207 ;;		_I2C_DO_RX
  7208 ;;		_I2C_DO_TX_EMPTY
  7209 ;;		_I2C_DO_ADDRESS_NACK
  7210 ;;		_I2C_DO_RX_EMPTY
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           
  7215                           ;psect for function _wr1RegCompleteHandler
  7216  050A                     _wr1RegCompleteHandler:
  7217  050A                     l2305:	
  7218                           ;incstack = 0
  7219                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7220                           
  7221                           
  7222                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7223  050A  3001               	movlw	1
  7224  050B  00F0               	movwf	I2C_SetBuffer@bufferSize
  7225  050C  3000               	movlw	0
  7226  050D  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7227  050E  0879               	movf	wr1RegCompleteHandler@ptr,w
  7228  050F  3184  24C7  3185   	fcall	_I2C_SetBuffer
  7229  0512                     l2307:
  7230                           
  7231                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7232  0512  3000               	movlw	0
  7233  0513  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7234  0514  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7235  0515  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7236  0516  3184  24A0  3185   	fcall	_I2C_SetDataCompleteCallback
  7237  0519                     l2309:
  7238                           
  7239                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7240  0519  3004               	movlw	4
  7241  051A                     l747:
  7242  051A  0008               	return
  7243  051B                     __end_of_wr1RegCompleteHandler:
  7244                           
  7245                           	psect	text45
  7246  04F9                     __ptext45:	
  7247 ;; *************** function _rd2RegCompleteHandler *****************
  7248 ;; Defined at:
  7249 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  ptr             1    9[COMMON] PTR void 
  7252 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7253 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      enum E360
  7258 ;; Registers used:
  7259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7265 ;;      Params:         1       0       0       0       0       0       0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0
  7268 ;;      Totals:         1       0       0       0       0       0       0       0
  7269 ;;Total ram usage:        1 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:    2
  7272 ;; This function calls:
  7273 ;;		_I2C_SetBuffer
  7274 ;;		_I2C_SetDataCompleteCallback
  7275 ;; This function is called by:
  7276 ;;		_I2C_Read2ByteRegister
  7277 ;;		_I2C_DO_TX
  7278 ;;		_I2C_DO_RX
  7279 ;;		_I2C_DO_TX_EMPTY
  7280 ;;		_I2C_DO_ADDRESS_NACK
  7281 ;;		_I2C_DO_RX_EMPTY
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _rd2RegCompleteHandler
  7287  04F9                     _rd2RegCompleteHandler:
  7288  04F9                     l2297:	
  7289                           ;incstack = 0
  7290                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7291                           
  7292                           
  7293                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7294  04F9  3002               	movlw	2
  7295  04FA  00F0               	movwf	I2C_SetBuffer@bufferSize
  7296  04FB  3000               	movlw	0
  7297  04FC  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7298  04FD  0879               	movf	rd2RegCompleteHandler@ptr,w
  7299  04FE  3184  24C7  3184   	fcall	_I2C_SetBuffer
  7300  0501                     l2299:
  7301                           
  7302                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7303  0501  3000               	movlw	0
  7304  0502  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7305  0503  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7306  0504  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7307  0505  3184  24A0  3184   	fcall	_I2C_SetDataCompleteCallback
  7308  0508                     l2301:
  7309                           
  7310                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7311  0508  3002               	movlw	2
  7312  0509                     l744:
  7313  0509  0008               	return
  7314  050A                     __end_of_rd2RegCompleteHandler:
  7315                           
  7316                           	psect	text46
  7317  04E8                     __ptext46:	
  7318 ;; *************** function _rd1RegCompleteHandler *****************
  7319 ;; Defined at:
  7320 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  ptr             1    9[COMMON] PTR void 
  7323 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7324 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;		None
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      enum E360
  7329 ;; Registers used:
  7330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7336 ;;      Params:         1       0       0       0       0       0       0       0
  7337 ;;      Locals:         0       0       0       0       0       0       0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0
  7339 ;;      Totals:         1       0       0       0       0       0       0       0
  7340 ;;Total ram usage:        1 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    2
  7343 ;; This function calls:
  7344 ;;		_I2C_SetBuffer
  7345 ;;		_I2C_SetDataCompleteCallback
  7346 ;; This function is called by:
  7347 ;;		_I2C_Read1ByteRegister
  7348 ;;		_I2C_DO_TX
  7349 ;;		_I2C_DO_RX
  7350 ;;		_I2C_DO_TX_EMPTY
  7351 ;;		_I2C_DO_ADDRESS_NACK
  7352 ;;		_I2C_DO_RX_EMPTY
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           
  7357                           ;psect for function _rd1RegCompleteHandler
  7358  04E8                     _rd1RegCompleteHandler:
  7359  04E8                     l2289:	
  7360                           ;incstack = 0
  7361                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7362                           
  7363                           
  7364                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7365  04E8  3001               	movlw	1
  7366  04E9  00F0               	movwf	I2C_SetBuffer@bufferSize
  7367  04EA  3000               	movlw	0
  7368  04EB  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7369  04EC  0879               	movf	rd1RegCompleteHandler@ptr,w
  7370  04ED  3184  24C7  3184   	fcall	_I2C_SetBuffer
  7371  04F0                     l2291:
  7372                           
  7373                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7374  04F0  3000               	movlw	0
  7375  04F1  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7376  04F2  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7377  04F3  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7378  04F4  3184  24A0  3184   	fcall	_I2C_SetDataCompleteCallback
  7379  04F7                     l2293:
  7380                           
  7381                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7382  04F7  3002               	movlw	2
  7383  04F8                     l741:
  7384  04F8  0008               	return
  7385  04F9                     __end_of_rd1RegCompleteHandler:
  7386                           
  7387                           	psect	text47
  7388  03E0                     __ptext47:	
  7389 ;; *************** function _I2C_CallbackReturnReset *****************
  7390 ;; Defined at:
  7391 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  funPtr          1    9[COMMON] PTR void 
  7394 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7395 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;		None
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  1    wreg      enum E360
  7400 ;; Registers used:
  7401 ;;		wreg
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7407 ;;      Params:         1       0       0       0       0       0       0       0
  7408 ;;      Locals:         0       0       0       0       0       0       0       0
  7409 ;;      Temps:          0       0       0       0       0       0       0       0
  7410 ;;      Totals:         1       0       0       0       0       0       0       0
  7411 ;;Total ram usage:        1 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_I2C_Open
  7417 ;;		_I2C_DO_TX
  7418 ;;		_I2C_DO_RX
  7419 ;;		_I2C_DO_TX_EMPTY
  7420 ;;		_I2C_DO_ADDRESS_NACK
  7421 ;;		_I2C_DO_RX_EMPTY
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           
  7426                           ;psect for function _I2C_CallbackReturnReset
  7427  03E0                     _I2C_CallbackReturnReset:
  7428  03E0                     l2285:	
  7429                           ;incstack = 0
  7430                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7431                           
  7432                           
  7433                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  7434  03E0  3005               	movlw	5
  7435  03E1                     l580:
  7436  03E1  0008               	return
  7437  03E2                     __end_of_I2C_CallbackReturnReset:
  7438                           
  7439                           	psect	text48
  7440  03DE                     __ptext48:	
  7441 ;; *************** function _I2C_CallbackReturnStop *****************
  7442 ;; Defined at:
  7443 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  funPtr          1    9[COMMON] PTR void 
  7446 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7447 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      enum E360
  7452 ;; Registers used:
  7453 ;;		wreg
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7459 ;;      Params:         1       0       0       0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0       0
  7462 ;;      Totals:         1       0       0       0       0       0       0       0
  7463 ;;Total ram usage:        1 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_I2C_Open
  7469 ;;		_I2C_SetCallback
  7470 ;;		_I2C_DO_TX
  7471 ;;		_I2C_DO_RX
  7472 ;;		_I2C_DO_TX_EMPTY
  7473 ;;		_I2C_DO_ADDRESS_NACK
  7474 ;;		_I2C_DO_RX_EMPTY
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function _I2C_CallbackReturnStop
  7480  03DE                     _I2C_CallbackReturnStop:
  7481  03DE                     l2281:	
  7482                           ;incstack = 0
  7483                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7484                           
  7485                           
  7486                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  7487  03DE  3001               	movlw	1
  7488  03DF                     l577:
  7489  03DF  0008               	return
  7490  03E0                     __end_of_I2C_CallbackReturnStop:
  7491                           
  7492                           	psect	text49
  7493  04D7                     __ptext49:	
  7494 ;; *************** function _wr2RegCompleteHandler *****************
  7495 ;; Defined at:
  7496 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;  ptr             1    9[COMMON] PTR void 
  7499 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7500 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;		None
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      enum E360
  7505 ;; Registers used:
  7506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7512 ;;      Params:         1       0       0       0       0       0       0       0
  7513 ;;      Locals:         0       0       0       0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0
  7515 ;;      Totals:         1       0       0       0       0       0       0       0
  7516 ;;Total ram usage:        1 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:    2
  7519 ;; This function calls:
  7520 ;;		_I2C_SetBuffer
  7521 ;;		_I2C_SetDataCompleteCallback
  7522 ;; This function is called by:
  7523 ;;		_I2C_Write2ByteRegister
  7524 ;;		_I2C_DO_TX
  7525 ;;		_I2C_DO_RX
  7526 ;;		_I2C_DO_TX_EMPTY
  7527 ;;		_I2C_DO_ADDRESS_NACK
  7528 ;;		_I2C_DO_RX_EMPTY
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function _wr2RegCompleteHandler
  7534  04D7                     _wr2RegCompleteHandler:
  7535  04D7                     l2313:	
  7536                           ;incstack = 0
  7537                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7538                           
  7539                           
  7540                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7541  04D7  3002               	movlw	2
  7542  04D8  00F0               	movwf	I2C_SetBuffer@bufferSize
  7543  04D9  3000               	movlw	0
  7544  04DA  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7545  04DB  0879               	movf	wr2RegCompleteHandler@ptr,w
  7546  04DC  3184  24C7  3184   	fcall	_I2C_SetBuffer
  7547  04DF                     l2315:
  7548                           
  7549                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7550  04DF  3000               	movlw	0
  7551  04E0  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7552  04E1  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7553  04E2  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7554  04E3  3184  24A0  3184   	fcall	_I2C_SetDataCompleteCallback
  7555  04E6                     l2317:
  7556                           
  7557                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7558  04E6  3004               	movlw	4
  7559  04E7                     l750:
  7560  04E7  0008               	return
  7561  04E8                     __end_of_wr2RegCompleteHandler:
  7562                           
  7563                           	psect	text50
  7564  04A0                     __ptext50:	
  7565 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7566 ;; Defined at:
  7567 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  7570 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  7571 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  7572 ;;  ptr             1    7[COMMON] PTR void 
  7573 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7574 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;		None
  7577 ;; Return value:  Size  Location     Type
  7578 ;;                  1    wreg      void 
  7579 ;; Registers used:
  7580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7586 ;;      Params:         3       0       0       0       0       0       0       0
  7587 ;;      Locals:         0       0       0       0       0       0       0       0
  7588 ;;      Temps:          1       0       0       0       0       0       0       0
  7589 ;;      Totals:         4       0       0       0       0       0       0       0
  7590 ;;Total ram usage:        4 bytes
  7591 ;; Hardware stack levels used:    1
  7592 ;; Hardware stack levels required when called:    1
  7593 ;; This function calls:
  7594 ;;		_I2C_SetCallback
  7595 ;; This function is called by:
  7596 ;;		_rd1RegCompleteHandler
  7597 ;;		_rd2RegCompleteHandler
  7598 ;;		_wr1RegCompleteHandler
  7599 ;;		_wr2RegCompleteHandler
  7600 ;;		_rdBlkRegCompleteHandler
  7601 ;;		_I2C_Read1ByteRegister
  7602 ;;		_I2C_Read2ByteRegister
  7603 ;;		_I2C_Write1ByteRegister
  7604 ;;		_I2C_Write2ByteRegister
  7605 ;;		_I2C_ReadDataBlock
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           
  7610                           ;psect for function _I2C_SetDataCompleteCallback
  7611  04A0                     _I2C_SetDataCompleteCallback:
  7612  04A0                     l2221:	
  7613                           ;incstack = 0
  7614                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7615                           
  7616                           
  7617                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7618  04A0  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7619  04A1  00F1               	movwf	I2C_SetCallback@cb+1
  7620  04A2  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  7621  04A3  00F0               	movwf	I2C_SetCallback@cb
  7622  04A4  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  7623  04A5  00F8               	movwf	??_I2C_SetDataCompleteCallback
  7624  04A6  0878               	movf	??_I2C_SetDataCompleteCallback,w
  7625  04A7  00F2               	movwf	I2C_SetCallback@ptr
  7626  04A8  3000               	movlw	0
  7627  04A9  3185  25D3  3184   	fcall	_I2C_SetCallback
  7628  04AC                     l451:
  7629  04AC  0008               	return
  7630  04AD                     __end_of_I2C_SetDataCompleteCallback:
  7631                           
  7632                           	psect	text51
  7633  05D3                     __ptext51:	
  7634 ;; *************** function _I2C_SetCallback *****************
  7635 ;; Defined at:
  7636 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;  idx             1    wreg     enum E9302
  7639 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  7640 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  7641 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  7642 ;;  ptr             1    2[COMMON] PTR void 
  7643 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7644 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  idx             1    4[COMMON] enum E9302
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      void 
  7649 ;; Registers used:
  7650 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7656 ;;      Params:         3       0       0       0       0       0       0       0
  7657 ;;      Locals:         1       0       0       0       0       0       0       0
  7658 ;;      Temps:          1       0       0       0       0       0       0       0
  7659 ;;      Totals:         5       0       0       0       0       0       0       0
  7660 ;;Total ram usage:        5 bytes
  7661 ;; Hardware stack levels used:    1
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_I2C_SetDataCompleteCallback
  7666 ;;		_I2C_SetWriteCollisionCallback
  7667 ;;		_I2C_SetAddressNackCallback
  7668 ;;		_I2C_SetDataNackCallback
  7669 ;;		_I2C_SetTimeoutCallback
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           
  7674                           ;psect for function _I2C_SetCallback
  7675  05D3                     _I2C_SetCallback:
  7676                           
  7677                           ;incstack = 0
  7678                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7679                           ;I2C_SetCallback@idx stored from wreg
  7680  05D3  00F4               	movwf	I2C_SetCallback@idx
  7681  05D4                     l2209:
  7682                           
  7683                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  7684  05D4  0870               	movf	I2C_SetCallback@cb,w
  7685  05D5  0471               	iorwf	I2C_SetCallback@cb+1,w
  7686  05D6  1903               	btfsc	3,2
  7687  05D7  2DD9               	goto	u471
  7688  05D8  2DDA               	goto	u470
  7689  05D9                     u471:
  7690  05D9  2DEB               	goto	l2213
  7691  05DA                     u470:
  7692  05DA                     l2211:
  7693                           
  7694                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7695  05DA  3574               	lslf	I2C_SetCallback@idx,w
  7696  05DB  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7697  05DC  0086               	movwf	6
  7698  05DD  0187               	clrf	7
  7699  05DE  0870               	movf	I2C_SetCallback@cb,w
  7700  05DF  3FC0               	movwi [0]fsr1
  7701  05E0  0871               	movf	I2C_SetCallback@cb+1,w
  7702  05E1  3FC1               	movwi [1]fsr1
  7703                           
  7704                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  7705  05E2  0872               	movf	I2C_SetCallback@ptr,w
  7706  05E3  00F3               	movwf	??_I2C_SetCallback
  7707  05E4  0874               	movf	I2C_SetCallback@idx,w
  7708  05E5  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7709  05E6  0086               	movwf	6
  7710  05E7  0187               	clrf	7
  7711  05E8  0873               	movf	??_I2C_SetCallback,w
  7712  05E9  0081               	movwf	1
  7713                           
  7714                           ;mcc_generated_files/i2c_master.c: 304:     }
  7715  05EA  2DF8               	goto	l468
  7716  05EB                     l2213:
  7717                           
  7718                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  7719  05EB  3574               	lslf	I2C_SetCallback@idx,w
  7720  05EC  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7721  05ED  0086               	movwf	6
  7722  05EE  0187               	clrf	7
  7723  05EF  30DE               	movlw	low _I2C_CallbackReturnStop
  7724  05F0  3FC0               	movwi [0]fsr1
  7725  05F1  3003               	movlw	high _I2C_CallbackReturnStop
  7726  05F2  3FC1               	movwi [1]fsr1
  7727                           
  7728                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  7729  05F3  0874               	movf	I2C_SetCallback@idx,w
  7730  05F4  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7731  05F5  0086               	movwf	6
  7732  05F6  0187               	clrf	7
  7733  05F7  0181               	clrf	1
  7734  05F8                     l468:
  7735  05F8  0008               	return
  7736  05F9                     __end_of_I2C_SetCallback:
  7737                           
  7738                           	psect	text52
  7739  04C7                     __ptext52:	
  7740 ;; *************** function _I2C_SetBuffer *****************
  7741 ;; Defined at:
  7742 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  buffer          1    wreg     PTR void 
  7745 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7746 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7747 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7748 ;;  bufferSize      2    0[COMMON] unsigned int 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  buffer          1    3[COMMON] PTR void 
  7751 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  7752 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  7753 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7763 ;;      Params:         2       0       0       0       0       0       0       0
  7764 ;;      Locals:         1       0       0       0       0       0       0       0
  7765 ;;      Temps:          1       0       0       0       0       0       0       0
  7766 ;;      Totals:         4       0       0       0       0       0       0       0
  7767 ;;Total ram usage:        4 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_rd1RegCompleteHandler
  7773 ;;		_rd2RegCompleteHandler
  7774 ;;		_wr1RegCompleteHandler
  7775 ;;		_wr2RegCompleteHandler
  7776 ;;		_rdBlkRegCompleteHandler
  7777 ;;		_I2C_Read1ByteRegister
  7778 ;;		_I2C_Read2ByteRegister
  7779 ;;		_I2C_Write1ByteRegister
  7780 ;;		_I2C_Write2ByteRegister
  7781 ;;		_I2C_WriteNBytes
  7782 ;;		_I2C_ReadNBytes
  7783 ;;		_I2C_ReadDataBlock
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           
  7788                           ;psect for function _I2C_SetBuffer
  7789  04C7                     _I2C_SetBuffer:
  7790                           
  7791                           ;incstack = 0
  7792                           ; Regs used in _I2C_SetBuffer: [wreg]
  7793                           ;I2C_SetBuffer@buffer stored from wreg
  7794  04C7  00F3               	movwf	I2C_SetBuffer@buffer
  7795  04C8                     l2215:
  7796                           
  7797                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  7798  04C8  0020               	movlb	0	; select bank0
  7799  04C9  1DBC               	btfss	_I2C_Status+28,3
  7800  04CA  2CCC               	goto	u481
  7801  04CB  2CCD               	goto	u480
  7802  04CC                     u481:
  7803  04CC  2CD6               	goto	l448
  7804  04CD                     u480:
  7805  04CD                     l2217:
  7806                           
  7807                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  7808  04CD  0873               	movf	I2C_SetBuffer@buffer,w
  7809  04CE  00F2               	movwf	??_I2C_SetBuffer
  7810  04CF  0872               	movf	??_I2C_SetBuffer,w
  7811  04D0  00B7               	movwf	low ((_I2C_Status| 0+23))
  7812                           
  7813                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  7814  04D1  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  7815  04D2  00B9               	movwf	_I2C_Status+25
  7816  04D3  0870               	movf	I2C_SetBuffer@bufferSize,w
  7817  04D4  00B8               	movwf	_I2C_Status+24
  7818  04D5                     l2219:
  7819                           
  7820                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  7821  04D5  11BC               	bcf	_I2C_Status+28,3
  7822  04D6                     l448:
  7823  04D6  0008               	return
  7824  04D7                     __end_of_I2C_SetBuffer:
  7825                           
  7826                           	psect	text53
  7827  03F1                     __ptext53:	
  7828 ;; *************** function _I2C_MasterStop *****************
  7829 ;; Defined at:
  7830 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;		None
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		None
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7844 ;;      Params:         0       0       0       0       0       0       0       0
  7845 ;;      Locals:         0       0       0       0       0       0       0       0
  7846 ;;      Temps:          0       0       0       0       0       0       0       0
  7847 ;;      Totals:         0       0       0       0       0       0       0       0
  7848 ;;Total ram usage:        0 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; This function calls:
  7851 ;;		Nothing
  7852 ;; This function is called by:
  7853 ;;		_I2C_DO_SEND_STOP
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function _I2C_MasterStop
  7859  03F1                     _I2C_MasterStop:
  7860  03F1                     l2225:	
  7861                           ;incstack = 0
  7862                           ; Regs used in _I2C_MasterStop: []
  7863                           
  7864                           
  7865                           ;mcc_generated_files/i2c_master.c: 595:     SSP1CON2bits.PEN = 1;
  7866  03F1  0024               	movlb	4	; select bank4
  7867  03F2  1516               	bsf	22,2	;volatile
  7868  03F3                     l614:
  7869  03F3  0008               	return
  7870  03F4                     __end_of_I2C_MasterStop:
  7871                           
  7872                           	psect	text54
  7873  03EE                     __ptext54:	
  7874 ;; *************** function _I2C_MasterEnableRestart *****************
  7875 ;; Defined at:
  7876 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;		None
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      void 
  7883 ;; Registers used:
  7884 ;;		None
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7890 ;;      Params:         0       0       0       0       0       0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0
  7893 ;;      Totals:         0       0       0       0       0       0       0       0
  7894 ;;Total ram usage:        0 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_I2C_DO_SEND_RESTART_READ
  7900 ;;		_I2C_DO_SEND_RESTART_WRITE
  7901 ;;		_I2C_DO_SEND_RESTART
  7902 ;;		_I2C_DO_RX_EMPTY
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           
  7907                           ;psect for function _I2C_MasterEnableRestart
  7908  03EE                     _I2C_MasterEnableRestart:
  7909  03EE                     l2223:	
  7910                           ;incstack = 0
  7911                           ; Regs used in _I2C_MasterEnableRestart: []
  7912                           
  7913                           
  7914                           ;mcc_generated_files/i2c_master.c: 575:     SSP1CON2bits.RSEN = 1;
  7915  03EE  0024               	movlb	4	; select bank4
  7916  03EF  1496               	bsf	22,1	;volatile
  7917  03F0                     l602:
  7918  03F0  0008               	return
  7919  03F1                     __end_of_I2C_MasterEnableRestart:
  7920                           
  7921                           	psect	text55
  7922  03EB                     __ptext55:	
  7923 ;; *************** function _I2C_MasterStart *****************
  7924 ;; Defined at:
  7925 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;		None
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  1    wreg      void 
  7932 ;; Registers used:
  7933 ;;		None
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7939 ;;      Params:         0       0       0       0       0       0       0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0
  7942 ;;      Totals:         0       0       0       0       0       0       0       0
  7943 ;;Total ram usage:        0 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_I2C_MasterOperation
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           
  7953                           ;psect for function _I2C_MasterStart
  7954  03EB                     _I2C_MasterStart:
  7955  03EB                     l2501:	
  7956                           ;incstack = 0
  7957                           ; Regs used in _I2C_MasterStart: []
  7958                           
  7959                           
  7960                           ;mcc_generated_files/i2c_master.c: 590:     SSP1CON2bits.SEN = 1;
  7961  03EB  0024               	movlb	4	; select bank4
  7962  03EC  1416               	bsf	22,0	;volatile
  7963  03ED                     l611:
  7964  03ED  0008               	return
  7965  03EE                     __end_of_I2C_MasterStart:
  7966                           
  7967                           	psect	text56
  7968  0578                     __ptext56:	
  7969 ;; *************** function _I2C_Close *****************
  7970 ;; Defined at:
  7971 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;		None
  7974 ;; Auto vars:     Size  Location     Type
  7975 ;;  returnValue     1    1[COMMON] enum E355
  7976 ;; Return value:  Size  Location     Type
  7977 ;;                  1    wreg      enum E9227
  7978 ;; Registers used:
  7979 ;;		wreg, status,2, status,0, pclath, cstack
  7980 ;; Tracked objects:
  7981 ;;		On entry : 0/0
  7982 ;;		On exit  : 0/0
  7983 ;;		Unchanged: 0/0
  7984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7985 ;;      Params:         0       0       0       0       0       0       0       0
  7986 ;;      Locals:         1       0       0       0       0       0       0       0
  7987 ;;      Temps:          1       0       0       0       0       0       0       0
  7988 ;;      Totals:         2       0       0       0       0       0       0       0
  7989 ;;Total ram usage:        2 bytes
  7990 ;; Hardware stack levels used:    1
  7991 ;; Hardware stack levels required when called:    1
  7992 ;; This function calls:
  7993 ;;		_I2C_MasterClearIrq
  7994 ;;		_I2C_MasterClose
  7995 ;;		_I2C_MasterDisableIrq
  7996 ;; This function is called by:
  7997 ;;		_main
  7998 ;;		_I2C_Read1ByteRegister
  7999 ;;		_I2C_Read2ByteRegister
  8000 ;;		_I2C_Write1ByteRegister
  8001 ;;		_I2C_Write2ByteRegister
  8002 ;;		_I2C_WriteNBytes
  8003 ;;		_I2C_ReadNBytes
  8004 ;;		_I2C_ReadDataBlock
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           
  8009                           ;psect for function _I2C_Close
  8010  0578                     _I2C_Close:
  8011  0578                     l2689:	
  8012                           ;incstack = 0
  8013                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  8014                           
  8015                           
  8016                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  8017  0578  01F1               	clrf	I2C_Close@returnValue
  8018  0579  0AF1               	incf	I2C_Close@returnValue,f
  8019                           
  8020                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  8021  057A  0020               	movlb	0	; select bank0
  8022  057B  18BC               	btfsc	_I2C_Status+28,1
  8023  057C  2D7E               	goto	u631
  8024  057D  2D7F               	goto	u630
  8025  057E                     u631:
  8026  057E  2D92               	goto	l2703
  8027  057F                     u630:
  8028  057F                     l2691:
  8029                           
  8030                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  8031  057F  113C               	bcf	_I2C_Status+28,2
  8032  0580                     l2693:
  8033                           
  8034                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  8035  0580  30FF               	movlw	255
  8036  0581  00F0               	movwf	??_I2C_Close
  8037  0582  0870               	movf	??_I2C_Close,w
  8038  0583  00B6               	movwf	_I2C_Status+22
  8039  0584                     l2695:
  8040                           
  8041                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  8042  0584  3183  23E2  3185   	fcall	_I2C_MasterClearIrq
  8043  0587                     l2697:
  8044                           
  8045                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  8046  0587  3183  23E8  3185   	fcall	_I2C_MasterDisableIrq
  8047  058A                     l2699:
  8048                           
  8049                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  8050  058A  3183  23E5  3185   	fcall	_I2C_MasterClose
  8051  058D                     l2701:
  8052                           
  8053                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  8054  058D  0020               	movlb	0	; select bank0
  8055  058E  083B               	movf	_I2C_Status+27,w
  8056  058F  00F0               	movwf	??_I2C_Close
  8057  0590  0870               	movf	??_I2C_Close,w
  8058  0591  00F1               	movwf	I2C_Close@returnValue
  8059  0592                     l2703:
  8060                           
  8061                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  8062  0592  0871               	movf	I2C_Close@returnValue,w
  8063  0593                     l429:
  8064  0593  0008               	return
  8065  0594                     __end_of_I2C_Close:
  8066                           
  8067                           	psect	text57
  8068  03E8                     __ptext57:	
  8069 ;; *************** function _I2C_MasterDisableIrq *****************
  8070 ;; Defined at:
  8071 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		None
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8085 ;;      Params:         0       0       0       0       0       0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0
  8088 ;;      Totals:         0       0       0       0       0       0       0       0
  8089 ;;Total ram usage:        0 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; This function calls:
  8092 ;;		Nothing
  8093 ;; This function is called by:
  8094 ;;		_I2C_Close
  8095 ;;		_I2C_SetTimeOut
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           
  8100                           ;psect for function _I2C_MasterDisableIrq
  8101  03E8                     _I2C_MasterDisableIrq:
  8102  03E8                     l2607:	
  8103                           ;incstack = 0
  8104                           ; Regs used in _I2C_MasterDisableIrq: []
  8105                           
  8106                           
  8107                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSP1IE = 0;
  8108  03E8  0021               	movlb	1	; select bank1
  8109  03E9  1191               	bcf	17,3	;volatile
  8110  03EA                     l638:
  8111  03EA  0008               	return
  8112  03EB                     __end_of_I2C_MasterDisableIrq:
  8113                           
  8114                           	psect	text58
  8115  03E5                     __ptext58:	
  8116 ;; *************** function _I2C_MasterClose *****************
  8117 ;; Defined at:
  8118 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      void 
  8125 ;; Registers used:
  8126 ;;		None
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8132 ;;      Params:         0       0       0       0       0       0       0       0
  8133 ;;      Locals:         0       0       0       0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0       0       0       0
  8135 ;;      Totals:         0       0       0       0       0       0       0       0
  8136 ;;Total ram usage:        0 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_I2C_Close
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           
  8146                           ;psect for function _I2C_MasterClose
  8147  03E5                     _I2C_MasterClose:
  8148  03E5                     l2609:	
  8149                           ;incstack = 0
  8150                           ; Regs used in _I2C_MasterClose: []
  8151                           
  8152                           
  8153                           ;mcc_generated_files/i2c_master.c: 560:     SSP1CON1bits.SSPEN = 0;
  8154  03E5  0024               	movlb	4	; select bank4
  8155  03E6  1295               	bcf	21,5	;volatile
  8156  03E7                     l593:
  8157  03E7  0008               	return
  8158  03E8                     __end_of_I2C_MasterClose:
  8159                           
  8160                           	psect	text59
  8161  03E2                     __ptext59:	
  8162 ;; *************** function _I2C_MasterClearIrq *****************
  8163 ;; Defined at:
  8164 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;		None
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;		None
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		None
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8178 ;;      Params:         0       0       0       0       0       0       0       0
  8179 ;;      Locals:         0       0       0       0       0       0       0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0       0
  8181 ;;      Totals:         0       0       0       0       0       0       0       0
  8182 ;;Total ram usage:        0 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_I2C_Open
  8188 ;;		_I2C_Close
  8189 ;;		_I2C_MasterFsm
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           
  8194                           ;psect for function _I2C_MasterClearIrq
  8195  03E2                     _I2C_MasterClearIrq:
  8196  03E2                     l2327:	
  8197                           ;incstack = 0
  8198                           ; Regs used in _I2C_MasterClearIrq: []
  8199                           
  8200                           
  8201                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
  8202  03E2  0020               	movlb	0	; select bank0
  8203  03E3  1191               	bcf	17,3	;volatile
  8204  03E4                     l641:
  8205  03E4  0008               	return
  8206  03E5                     __end_of_I2C_MasterClearIrq:
  8207                           
  8208                           	psect	text60
  8209  055D                     __ptext60:	
  8210 ;; *************** function _ADC_GetConversion *****************
  8211 ;; Defined at:
  8212 ;;		line 115 in file "mcc_generated_files/adc.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  channel         1    wreg     enum E8899
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  channel         1    3[COMMON] enum E8899
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2    0[COMMON] unsigned short 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8226 ;;      Params:         2       0       0       0       0       0       0       0
  8227 ;;      Locals:         1       0       0       0       0       0       0       0
  8228 ;;      Temps:          1       0       0       0       0       0       0       0
  8229 ;;      Totals:         4       0       0       0       0       0       0       0
  8230 ;;Total ram usage:        4 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		_main
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           
  8240                           ;psect for function _ADC_GetConversion
  8241  055D                     _ADC_GetConversion:
  8242                           
  8243                           ;incstack = 0
  8244                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  8245                           ;ADC_GetConversion@channel stored from wreg
  8246  055D  00F3               	movwf	ADC_GetConversion@channel
  8247  055E                     l2633:
  8248                           
  8249                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
  8250  055E  0873               	movf	ADC_GetConversion@channel,w
  8251  055F  00F2               	movwf	??_ADC_GetConversion
  8252  0560  0DF2               	rlf	??_ADC_GetConversion,f
  8253  0561  0DF2               	rlf	??_ADC_GetConversion,f
  8254  0562  0021               	movlb	1	; select bank1
  8255  0563  081D               	movf	29,w	;volatile
  8256  0564  0672               	xorwf	??_ADC_GetConversion,w
  8257  0565  3983               	andlw	-125
  8258  0566  0672               	xorwf	??_ADC_GetConversion,w
  8259  0567  009D               	movwf	29	;volatile
  8260  0568                     l2635:
  8261                           
  8262                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
  8263  0568  141D               	bsf	29,0	;volatile
  8264  0569                     l2637:
  8265                           
  8266                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  8267  0569  3003               	movlw	3
  8268  056A                     u847:
  8269  056A  0B89               	decfsz	9,f
  8270  056B  2D6A               	goto	u847
  8271  056C  0000               	nop
  8272  056D                     l2639:
  8273                           
  8274                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.ADGO = 1;
  8275  056D  0021               	movlb	1	; select bank1
  8276  056E  149D               	bsf	29,1	;volatile
  8277  056F                     l127:	
  8278                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
  8279                           
  8280                           
  8281                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.ADGO)
  8282  056F  189D               	btfsc	29,1	;volatile
  8283  0570  2D72               	goto	u601
  8284  0571  2D73               	goto	u600
  8285  0572                     u601:
  8286  0572  2D6F               	goto	l127
  8287  0573                     u600:
  8288  0573                     l2641:
  8289                           
  8290                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8291  0573  081C               	movf	28,w	;volatile
  8292  0574  00F1               	movwf	?_ADC_GetConversion+1
  8293  0575  081B               	movf	27,w	;volatile
  8294  0576  00F0               	movwf	?_ADC_GetConversion
  8295  0577                     l130:
  8296  0577  0008               	return
  8297  0578                     __end_of_ADC_GetConversion:
  8298  007E                     btemp	set	126	;btemp
  8299  007E                     wtemp0	set	126
  8300                           
  8301                           	psect	config
  8302                           
  8303                           ;Config register CONFIG1 @ 0x8007
  8304                           ;	Oscillator Selection Bits
  8305                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8306                           ;	Watchdog Timer Enable
  8307                           ;	WDTE = OFF, WDT disabled
  8308                           ;	Power-up Timer Enable
  8309                           ;	PWRTE = OFF, PWRT disabled
  8310                           ;	MCLR Pin Function Select
  8311                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8312                           ;	Flash Program Memory Code Protection
  8313                           ;	CP = OFF, Program memory code protection is disabled
  8314                           ;	Brown-out Reset Enable
  8315                           ;	BOREN = ON, Brown-out Reset enabled
  8316                           ;	Clock Out Enable
  8317                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8318                           ;	Internal/External Switchover Mode
  8319                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  8320                           ;	Fail-Safe Clock Monitor Enable
  8321                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8322  8007                     	org	32775
  8323  8007  3FE4               	dw	16356
  8324                           
  8325                           ;Config register CONFIG2 @ 0x8008
  8326                           ;	Flash Memory Self-Write Protection
  8327                           ;	WRT = OFF, Write protection off
  8328                           ;	Peripheral Pin Select one-way control
  8329                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  8330                           ;	Zero-cross detect disable
  8331                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  8332                           ;	Phase Lock Loop enable
  8333                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  8334                           ;	Stack Overflow/Underflow Reset Enable
  8335                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8336                           ;	Brown-out Reset Voltage Selection
  8337                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8338                           ;	Low-Power Brown Out Reset
  8339                           ;	LPBOR = OFF, Low-Power BOR is disabled
  8340                           ;	Low-Voltage Programming Enable
  8341                           ;	LVP = ON, Low-voltage programming enabled
  8342  8008                     	org	32776
  8343  8008  3EFF               	dw	16127

Data Sizes:
    Strings     74
    Constant    32
    Data        0
    BSS         32
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      6      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1760$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1765	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1760	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_MasterFsm$1759	const PTR FTN()enum E9284 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S630$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S1162$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S630$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S630$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S630$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    i2c_fsmStateTable	const PTR FTN()enum E9284[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    main@str_535	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[37]), 

    main@str	PTR unsigned char  size(2) Largest target is 37
		 -> STR_1(CODE[37]), 

    UART_send_string@st_pt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[37]), STR_1(CODE[37]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _UART_send_string->_UART_send_char
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   79040
                                             10 COMMON     2     2      0
                                              0 BANK0      6     6      0
                  _ADC_GetConversion
                     _ADC_Initialize
                          _I2C_Close
                     _I2C_Initialize
                     _I2C_MasterRead
                           _I2C_Open
                  _SYSTEM_Initialize
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     3     1      2     219
                                              1 COMMON     3     1      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             3     3      0      46
                                              0 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_MasterRead                                       0     0      0   78300
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterOperation                                  3     3      0   78300
                                              7 COMMON     3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (3) _I2C_Poller                                           0     0      0   78254
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterFsm                                        3     3      0   78254
                                              4 COMMON     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_TX_EMPTY                                      3     3      0   19547
                                              0 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_TX                                            3     3      0   19569
                                              1 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_RX                                            3     3      0   19547
                                              0 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_DO_ADDRESS_NACK                                  3     3      0   19547
                                              0 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rdBlkRegCompleteHandler                              1     0      1    4139
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _I2C_SetDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (8) _I2C_SetCallback                                      5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (7) _I2C_SetBuffer                                        4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (6) _I2C_CallbackReturnReset                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Close                                            2     2      0      24
                                              0 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _I2C_Close
     _I2C_MasterClearIrq
     _I2C_MasterClose
     _I2C_MasterDisableIrq
   _I2C_Initialize
   _I2C_MasterRead
     _I2C_MasterOperation
       _I2C_MasterStart
       _I2C_Poller
         _I2C_MasterFsm
           _I2C_DO_ADDRESS_NACK *
             Absolute function(Fake) *
             _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _rd1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rd2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
           _I2C_DO_IDLE *
           _I2C_DO_RCEN *
             _I2C_MasterStartRx
           _I2C_DO_RESET *
           _I2C_DO_RX *
             Absolute function(Fake) *
             _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART *
               _I2C_MasterSendNack
             _I2C_DO_RX_NACK_STOP *
               _I2C_MasterSendNack
             _I2C_MasterGetRxData *
             _I2C_MasterSendAck *
             _rd1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rd2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
           _I2C_DO_RX_ACK *
             _I2C_MasterSendAck
           _I2C_DO_RX_NACK_RESTART *
             _I2C_MasterSendNack
           _I2C_DO_RX_NACK_STOP *
             _I2C_MasterSendNack
           _I2C_DO_SEND_ADR_READ *
             _I2C_MasterSendTxData
           _I2C_DO_SEND_ADR_WRITE *
             _I2C_MasterSendTxData
           _I2C_DO_SEND_RESTART *
             _I2C_MasterEnableRestart
           _I2C_DO_SEND_RESTART_READ *
             _I2C_MasterEnableRestart
           _I2C_DO_SEND_RESTART_WRITE *
             _I2C_MasterEnableRestart
           _I2C_DO_SEND_STOP *
             _I2C_MasterStop
           _I2C_DO_TX *
             Absolute function(Fake) *
             _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_MasterIsNack *
             _I2C_MasterSendTxData *
             _rd1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rd2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
           _I2C_DO_TX_EMPTY *
             Absolute function(Fake) *
             _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_MasterSetIrq *
             _rd1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rd2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _rdBlkRegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr1RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
             _wr2RegCompleteHandler *
               _I2C_SetBuffer
               _I2C_SetDataCompleteCallback
                 _I2C_SetCallback
           _I2C_MasterClearIrq *
           _I2C_MasterIsNack *
         _I2C_MasterWaitForEvent
   _I2C_Open
     _I2C_MasterClearIrq
     _I2C_MasterOpen
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      38       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      38      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 07 18:47:16 2021

                       ??_I2C_DO_SEND_ADR_READ 0070                    __size_of_I2C_MasterSendNack 0004  
                           __size_of_I2C_Close 001C                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                           l31 0408                                             l25 052D  
                                           l28 047A                                             l90 06F2  
                          __size_of_I2C_Poller 000D                          ??_I2C_DO_SEND_RESTART 0070  
                 __size_of_I2C_MasterOperation 001E                                            l112 048C  
                                          l130 0577                                            l214 05D2  
                                          l127 056F                                            l303 0544  
                __size_of_I2C_MasterSendTxData 0005                                            l308 079A  
                                          l253 0457                                            l421 0495  
                                          l424 06B7                                            l256 045D  
                                          l425 06B8                                            l602 03F0  
                                          l506 0710                                            l611 03ED  
                                          l451 04AC                                            l507 0738  
                                          l435 05B1                                            l259 0451  
                                          l620 0404                                            l524 067E  
                                          l429 0593                                            l614 03F3  
                                          l518 046A                                            l542 0417  
                                          l438 043F                                            l294 0497  
                                          l623 0400                                            l551 0426  
                                          l448 04D6                                            l608 03F6  
                                          l560 0435                                            l641 03E4  
                                          l617 0445                                            l481 0412  
                                          l545 041C                                            l297 049F  
                                          l490 0771                                            l554 042B  
                                          l474 04B9                                            l563 043A  
                                          l651 044B                                            l468 05F8  
                                          l580 03E1                                            l644 03FC  
                                          l484 0483                                            l548 0421  
                                          l741 04F8                                            l493 078D  
                                          l557 0430                                            l638 03EA  
                                          l750 04E7                                            l478 0623  
                                          l590 04C6                                            l487 0472  
                                          l647 0446                                            l744 0509  
                                          l593 03E7                                            l577 03DF  
                                          l753 055C                                            l569 064F  
                                          l747 051A                                            l596 03F9  
                                          l599 040D                                            u500 078A  
                                          u501 0789                                            u510 070B  
                                          u511 070A                                            u600 0573  
                                          u520 044B                                            u601 0572  
                                          u521 044A                                            u530 0601  
                                          u610 0544                                            u531 0600  
                                          u611 0543                                            u540 0609  
                                          u620 0687                                            u541 0608  
                                          u621 0686                                            u630 057F  
                                          u470 05DA                                            u550 04B9  
                                          u631 057E                                            u471 05D9  
                                          u551 04B8                                            u480 04CD  
                                          u560 049C                                            u640 07AD  
                                          u481 04CC                                            u561 049B  
                                          u641 07AC                                            u490 0741  
                                          u570 04BF                                            u650 07B6  
                                          u491 0740                                            u571 04BE  
                                          u651 07B5                                            u580 059C  
                                          u660 07D6                                            u581 059B  
                                          u661 07D5                                            u590 05A3  
                                          u670 07DF                                            u591 05A2  
                                          u671 07DE                                            u837 07C6  
                                          u847 056A                         _I2C_MasterWaitForEvent 0446  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                     ??_I2C_CallbackReturnStop 007A                                   _I2C_DO_RESET 0436  
                      ??_rd2RegCompleteHandler 007A                                           l2211 05DA  
                                         l2213 05EB                                           l2221 04A0  
                                         l2301 0508                                           l2223 03EE  
                                         l2215 04C8                                           l2225 03F1  
                                         l2217 04CD                                           l2209 05D4  
                                         l2313 04D7                                           l2305 050A  
                                         l2321 0545                                           l2233 040A  
                                         l2401 0712                                           l2241 0418  
                                         l2219 04D5                                           l2315 04DF  
                                         l2307 0512                                           l2323 055B  
                                         l2227 03FD                                           l2331 0410  
                                         l2411 071A                                           l2235 0413  
                                         l2243 041B                                           l2501 03EB  
                                         l2317 04E6                                           l2309 0519  
                                         l2253 03F7                                           l2229 0440  
                                         l2333 0411                                           l2341 0482  
                                         l2405 0716                                           l2421 0469  
                                         l2237 0416                                           l2261 0434  
                                         l2327 03E2                                           l2271 03F4  
                                         l2431 0657                                           l2247 0422  
                                         l2503 04AD                                           l2511 048D  
                                         l2281 03DE                                           l2257 0401  
                                         l2433 065A                                           l2425 0650  
                                         l2329 040E                                           l2337 047B  
                                         l2345 046B                                           l2361 0746  
                                         l2353 0739                                           l2417 0464  
                                         l2273 041D                                           l2249 0425  
                                         l2265 042C                                           l2505 04AE  
                                         l2601 04C2                                           l2513 048F  
                                         l2521 06BD                                           l2291 04F0  
                                         l2427 0653                                           l2443 0660  
                                         l2339 047D                                           l2347 046D  
                                         l2371 074E                                           l2419 0466  
                                         l2275 0420                                           l2451 042A  
                                         l2267 042F                                           l2259 0431  
                                         l2507 04B1                                           l2611 0595  
                                         l2603 04C5                                           l2515 0491  
                                         l2531 06C9                                           l2523 06C0  
                                         l2701 058D                                           l2285 03E0  
                                         l2293 04F7                                           l2437 065C  
                                         l2349 0471                                           l2373 0773  
                                         l2365 074A                                           l2357 0742  
                                         l2509 04B4                                           l2621 05A6  
                                         l2613 059C                                           l2517 0494  
                                         l2541 06DC                                           l2533 06CF  
                                         l2525 06C2                                           l2607 03E8  
                                         l2703 0592                                           l2279 03FA  
                                         l2375 077F                                           l2391 0701  
                                         l2455 0436                                           l2471 062F  
                                         l2463 0624                                           l2623 05AA  
                                         l2615 059D                                           l2551 06E8  
                                         l2543 06DF                                           l2535 06D5  
                                         l2527 06C4                                           l2519 06B9  
                                         l2631 051B                                           l2641 0573  
                                         l2633 055E                                           l2609 03E5  
                                         l2289 04E8                                           l2297 04F9  
                                         l2377 078A                                           l2393 070B  
                                         l2449 0427                                           l2457 0438  
                                         l2465 0626                                           l2625 05AD  
                                         l2617 059E                                           l2561 0476  
                                         l2553 06EB                                           l2545 06E1  
                                         l2537 06D8                                           l2529 06C7  
                                         l2721 07BA                                           l2713 078E  
                                         l2635 0568                                           l2299 0501  
                                         l2379 078C                                           l2395 070E  
                                         l2387 06F3                                           l2459 0439  
                                         l2467 062B                                           l2491 0609  
                                         l2619 05A3                                           l2627 05B0  
                                         l2571 0487                                           l2563 0477  
                                         l2555 06ED                                           l2547 06E3  
                                         l2539 06DA                                           l2651 053B  
                                         l2731 07E3                                           l2723 07C1  
                                         l2715 07A7                                           l2637 0569  
                                         l2389 06FD                                           l2477 0633  
                                         l2493 060E                                           l2485 05F9  
                                         l2661 068D                                           l2653 0680  
                                         l2573 0488                                           l2581 05BB  
                                         l2565 0478                                           l2557 06EF  
                                         l2549 06E6                                           l2645 052E  
                                         l2717 07AD                                           l2725 07CD  
                                         l2639 056D                                           l2487 05FC  
                                         l2671 06A5                                           l2663 0696  
                                         l2655 0687                                           l2575 0489  
                                         l2495 0452                                           l2583 05BC  
                                         l2559 0473                                           l2567 0405  
                                         l2591 0497                                           l2647 052F  
                                         l2727 07D6                                           l2735 07EB  
                                         l2719 07B6                                           l2489 0601  
                                         l2681 06B6                                           l2673 06AA  
                                         l2665 069B                                           l2657 068B  
                                         l2577 048A                                           l2569 0484  
                                         l2497 0458                                           l2585 05C3  
                                         l2593 049C                                           l2649 0537  
                                         l2737 07EE                                           l2729 07DF  
                                         l2691 057F                                           l2595 04BA  
                                         l2675 06AB                                           l2667 069C  
                                         l2659 068C                                           l2499 044C  
                                         l2587 05CA                                           l2579 05B2  
                                         l2693 0580                                           l2685 043B  
                                         l2597 04BF                                           l2677 06B0  
                                         l2669 06A1                                           l2589 05D1  
                                         l2695 0584                                           l2951 0763  
                                         l2599 04C0                                           l2679 06B3  
                                         l2697 0587                                           l2689 0578  
                                         l2953 0670                                           l2699 058A  
                                         l2947 0647                                           l2949 072A  
                                         STR_1 0800                                           STR_2 0825  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _TXIF 008C  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                        ??_wr2RegCompleteHandler 007A  
                                         _main 078E                       ?_I2C_CallbackReturnReset 0079  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                             __end_of_I2C_Open 06B9                                           btemp 007E  
                                  main@str_535 0047                                           start 0002  
             __size_of_rdBlkRegCompleteHandler 0018                      __size_of_UART_send_string 0017  
                             ?_I2C_MasterClose 0070                 __size_of_OSCILLATOR_Initialize 0008  
                             ?_I2C_MasterStart 0070                                  _I2C_DO_RX_ACK 0427  
                __end_of_OSCILLATOR_Initialize 047B                                          ?_main 0070  
                 __size_of_I2C_DO_RX_NACK_STOP 0005                              ??_I2C_DO_TX_EMPTY 0070  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                                        _TXREG 019A                              __end_of_I2C_DO_RX 0739  
                            __end_of_I2C_DO_TX 078E                                 _WDT_Initialize 0405  
                            __end_of_I2C_Close 0594                         __size_of_I2C_MasterFsm 002B  
               I2C_MasterOperation@returnValue 0079                        _I2C_MasterEnableRestart 03EE  
                                        pclath 000A                               ?_I2C_SetCallback 0070  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0070                         __size_of_I2C_SetBuffer 0010  
                           ??_I2C_DO_SEND_STOP 0070                                __initialization 07F4  
                                 __end_of_main 07F4              __size_of_I2C_DO_SEND_RESTART_READ 0005  
                    ?_I2C_DO_SEND_RESTART_READ 0070                                 ?_I2C_DO_RX_ACK 0070  
                                       ??_main 007A                              ?_I2C_MasterIsNack 0070  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                       __end_of_WDT_Initialize 0409                             ??_I2C_MasterSetIrq 0070  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0041                __end_of_I2C_CallbackReturnReset 03E2  
                                       _ADRESH 009C                                         _ADRESL 009B  
              __size_of_I2C_CallbackReturnStop 0002                  I2C_SetDataCompleteCallback@cb 0075  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                                         _BORCON 021D  
                                 ??_I2C_Poller 0077                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB4PPS 0E9C  
                                       _RB6PPS 0E9E                                         _RB7PPS 0E9F  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _PMADRH 0192                                         _PMADRL 0191  
                                       _PMDATH 0194                                         _PMDATL 0193  
                                       _PMCON2 0196                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                            _I2C_MasterGetRxData 03F7  
                                _I2C_MasterFsm 05F9                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterRead 0005                        __size_of_I2C_MasterOpen 000D  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 0009  
                                _I2C_SetBuffer 04C7                             __end_of_I2C_Poller 04BA  
                 __end_of_I2C_MasterDisableIrq 03EB                            _I2C_DO_ADDRESS_NACK 0624  
                         ?_I2C_MasterGetRxData 0070                                      ?_I2C_Open 0070  
                              ?_WDT_Initialize 0070                      ??_I2C_MasterEnableRestart 0070  
                     ADC_GetConversion@channel 0073                              _SYSTEM_Initialize 051B  
                      __end_of__initialization 07FD                            _I2C_MasterOperation 0594  
                           ?_SYSTEM_Initialize 0070                           ?_I2C_DO_ADDRESS_NACK 0070  
                      _rdBlkRegCompleteHandler 0545                                 __pcstackCOMMON 0070  
                               ?_I2C_MasterFsm 0070                                ??_I2C_DO_RX_ACK 0070  
                       _I2C_CallbackReturnStop 03DE                            ??_SYSTEM_Initialize 0072  
                             _UART_send_string 052E                                 ?_I2C_SetBuffer 0070  
                      ?_I2C_MasterWaitForEvent 0070                 __size_of_I2C_DO_SEND_ADR_WRITE 0008  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0005                  __end_of_I2C_DO_SEND_ADR_WRITE 0473  
                   ?_I2C_DO_SEND_RESTART_WRITE 0070                           ?_I2C_MasterOperation 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                                   ??_I2C_Open 0070                     __end_of_I2C_MasterClearIrq 03E5  
              ??_EUSART_SetOverrunErrorHandler 0072                      __end_of_SYSTEM_Initialize 052E  
                            _I2C_MasterSendAck 0401                                     __pbssBANK0 0020  
                                ??_I2C_DO_IDLE 0070                 __size_of_rd2RegCompleteHandler 0011  
                                ??_I2C_DO_RCEN 0070                  __end_of_rd2RegCompleteHandler 050A  
                 __end_of_I2C_MasterSendTxData 040E                             ?_I2C_MasterSendAck 0070  
                            _I2C_MasterStartRx 03F4                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 0070                  __end_of_wr2RegCompleteHandler 04E8  
                          _I2C_DO_RX_NACK_STOP 042C                          _rd1RegCompleteHandler 04E8  
                           ?_I2C_MasterStartRx 0070                     __end_of_I2C_MasterSendNack 0401  
                        _wr1RegCompleteHandler 050A                                     __pmaintext 078E  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0079  
                  __end_of_I2C_DO_SEND_RESTART 0422                                _I2C_DO_TX_EMPTY 0650  
                          I2C_SetBuffer@buffer 0073                 __end_of_I2C_MasterWaitForEvent 044C  
                          ??_I2C_MasterStartRx 0070                  __size_of_I2C_DO_SEND_ADR_READ 0009  
             __size_of_I2C_CallbackReturnReset 0002                          ??_I2C_MasterOperation 0077  
               I2C_SetDataCompleteCallback@ptr 0077                        __size_of_ADC_Initialize 0009  
                     ??_I2C_DO_RX_NACK_RESTART 0070              __end_of_I2C_DO_SEND_RESTART_WRITE 041D  
                         ?_I2C_DO_RX_NACK_STOP 0070                                        _OSCSTAT 009A  
                      __size_of_UART_send_char 000A                      __end_of_I2C_MasterSendAck 0405  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                                        _SSP1BUF 0211  
                     ??_EUSART_SetErrorHandler 0072                      __end_of_I2C_MasterStartRx 03F7  
                         I2C_Close@returnValue 0071                   ?_I2C_SetDataCompleteCallback 0075  
                                    _I2C_DO_RX 06F3                                      _I2C_DO_TX 0739  
             __end_of_I2C_DO_SEND_RESTART_READ 0418                                      _I2C_Close 0578  
                    ??_rdBlkRegCompleteHandler 007A                           _I2C_MasterDisableIrq 03E8  
                              ??_I2C_MasterFsm 0074                           _ADC_InterruptHandler 003D  
                          __end_of_I2C_DO_IDLE 0413                            __end_of_I2C_DO_RCEN 046B  
                              ??_I2C_SetBuffer 0072                        I2C_SetBuffer@bufferSize 0070  
                               _I2C_MasterRead 043B                                 _I2C_MasterOpen 04BA  
                               _I2C_MasterStop 03F1                                 _I2C_Initialize 048D  
                    __size_of_I2C_DO_SEND_STOP 0005                                        __ptext1 052E  
                                      __ptext2 0496                                        __ptext3 051B  
                                      __ptext4 0405                                        __ptext5 06B9  
                                      __ptext6 0473                                        __ptext7 048D  
                                      __ptext8 05B2                                        __ptext9 0458  
                        ??_I2C_DO_RX_NACK_STOP 0070                          _OSCILLATOR_Initialize 0473  
                           I2C_SetCallback@idx 0074                       __size_of_I2C_MasterClose 0003  
                     ??_PIN_MANAGER_Initialize 0070                  I2C_CallbackReturnReset@funPtr 0079  
                           I2C_SetCallback@ptr 0072                       wr1RegCompleteHandler@ptr 0079  
                     __size_of_I2C_MasterStart 0003                     __size_of_SYSTEM_Initialize 0013  
                                      clrloop0 045F                                        main@str 0045  
                         end_of_initialization 07FD                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 045E  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0458  
                    __size_of_I2C_MasterIsNack 0006                                     ?_I2C_Close 0070  
                       ?_rd1RegCompleteHandler 0079                        __end_of_I2C_DO_TX_EMPTY 067F  
                    __size_of_I2C_MasterSetIrq 0003                          ?_I2C_MasterDisableIrq 0070  
                            _EUSART_Initialize 05B2                         ?_wr1RegCompleteHandler 0079  
                           ?_EUSART_Initialize 0070                       __size_of_I2C_SetCallback 0026  
                       __end_of_I2C_MasterRead 0440                         __end_of_I2C_MasterOpen 04C7  
                       __end_of_I2C_MasterStop 03F4                         __end_of_I2C_Initialize 0496  
                          ??_EUSART_Initialize 0072                               ??_WDT_Initialize 0070  
              __end_of_rdBlkRegCompleteHandler 055D                           _I2C_MasterSendTxData 0409  
                                    _SSPDATPPS 0E21                __size_of_I2C_DO_RX_NACK_RESTART 0005  
                                    _SSPCLKPPS 0E20                     __size_of_I2C_MasterSendAck 0004  
                            __size_of_I2C_Open 003A                __size_of_EUSART_SetErrorHandler 0006  
                     __end_of_UART_send_string 0545                     __size_of_I2C_MasterStartRx 0003  
                    __end_of_EUSART_Initialize 05D3                                    _I2C_DO_IDLE 040E  
                                  _I2C_DO_RCEN 0464                     rdBlkRegCompleteHandler@ptr 0079  
                      ?_I2C_CallbackReturnStop 0079                       _I2C_DO_SEND_RESTART_READ 0413  
                 I2C_CallbackReturnStop@funPtr 0079                                ?_I2C_MasterRead 0070  
                              ?_I2C_MasterOpen 0070                                ?_I2C_MasterStop 0070  
                              ?_I2C_Initialize 0070                        _I2C_CallbackReturnReset 03E0  
                   _EUSART_DefaultErrorHandler 0000           __size_of_I2C_SetDataCompleteCallback 000D  
                               _ADC_Initialize 0484                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                          start_initialization 07F4                                 _UART_send_char 0496  
              __size_of_PIN_MANAGER_Initialize 003A                                  ?_I2C_DO_RESET 0070  
                                  ??_I2C_DO_RX 0070                                    ??_I2C_DO_TX 0071  
                            ??_I2C_MasterClose 0070                         ??_I2C_MasterDisableIrq 0070  
                                  ??_I2C_Close 0070                              ??_I2C_MasterStart 0070  
               __end_of_I2C_CallbackReturnStop 03E0                         _I2C_DO_RX_NACK_RESTART 0431  
                             ?_I2C_DO_TX_EMPTY 0070                             _I2C_MasterClearIrq 03E2  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 0043  
                       _EUSART_SetErrorHandler 044C                            ?_I2C_MasterClearIrq 0070  
                       __end_of_ADC_Initialize 048D                    __end_of_I2C_MasterGetRxData 03FA  
                        __end_of_I2C_DO_RX_ACK 042C                               _I2C_DO_SEND_STOP 0422  
                            ??_I2C_SetCallback 0073                            I2C_Open@returnValue 0072  
                           _I2C_MasterSendNack 03FD                       ?_I2C_MasterEnableRestart 0070  
                            _i2c_fsmStateTable 084A                         __end_of_UART_send_char 04A0  
                        _I2C_DO_SEND_ADR_WRITE 046B                             main@convertedValue 0049  
                                  __pbssCOMMON 007C                                      ___latbits 0001  
                                __pcstackBANK0 0045                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 0484  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 0650  
                             _I2C_MasterIsNack 0440                     __size_of_EUSART_Initialize 0021  
                    _I2C_DO_SEND_RESTART_WRITE 0418                               _I2C_MasterSetIrq 03FA  
                                    __pnvBANK0 003F                          _rd2RegCompleteHandler 04F9  
                       _PIN_MANAGER_Initialize 06B9                          _wr2RegCompleteHandler 04D7  
                    ??_I2C_CallbackReturnReset 007A                    __end_of_I2C_MasterOperation 05B2  
                         ??_I2C_MasterSendNack 0070                       rd2RegCompleteHandler@ptr 0079  
                              ?_ADC_Initialize 0070                         ??_I2C_MasterSendTxData 0070  
                    __end_of_i2c_fsmStateTable 086A                               UART_send_char@bt 0070  
                 __size_of_I2C_DO_SEND_RESTART 0005                                       _BAUD1CON 019F  
                              ?_UART_send_char 0070                        I2C_MasterOperation@read 0078  
                                     _I2C_Open 067F                        ??_rd1RegCompleteHandler 007A  
                      ??_wr1RegCompleteHandler 007A         EUSART_SetErrorHandler@interruptHandler 0070  
                                    clear_ram0 045E                                       _PIE1bits 0091  
                            _eusartRxLastError 007C                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                                       _PIR2bits 0012  
                        __end_of_I2C_MasterFsm 0624                    __end_of_I2C_DO_RX_NACK_STOP 0431  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
            _EUSART_DefaultOverrunErrorHandler 0000                __end_of_I2C_MasterEnableRestart 03F1  
                                     _SSP1STAT 0214                          __end_of_I2C_SetBuffer 04D7  
                                   _ADCON0bits 009D                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                        UART_send_string@st_pt 0071                       I2C_MasterSendTxData@data 0070  
                     wr2RegCompleteHandler@ptr 0079                     ??_I2C_DO_SEND_RESTART_READ 0070  
                     ?_rdBlkRegCompleteHandler 0079                              ?_UART_send_string 0071  
                                   _I2C_Poller 04AD                                     _I2C_Status 0020  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0079                             ??_UART_send_string 0073  
                             ??_I2C_MasterRead 007A                               ??_I2C_MasterOpen 0070  
                       ?_wr2RegCompleteHandler 0079                               ??_I2C_MasterStop 0070  
                     ??_I2C_MasterWaitForEvent 0070                               ??_I2C_Initialize 0070  
                            _ADC_GetConversion 055D                           __end_of_I2C_DO_RESET 043B  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 003F  
                           ?_ADC_GetConversion 0070                           _I2C_DO_SEND_ADR_READ 047B  
                              _I2C_MasterClose 03E5                            ??_ADC_GetConversion 0072  
                              I2C_Open@address 0071                                _I2C_MasterStart 03EB  
                                     __ptext10 0452                                       __ptext11 044C  
                                     __ptext20 0624                                       __ptext12 0484  
                                     __ptext21 0436                                       __ptext13 067F  
                                     __ptext30 06F3                                       __ptext22 0431  
                                     __ptext14 04BA                                       __ptext31 0739  
                                     __ptext23 042C                                       __ptext15 043B  
                                     __ptext40 03F7                                       __ptext32 046B  
                                     __ptext24 0427                                       __ptext16 0594  
                                     __ptext41 03FD                                       __ptext33 047B  
                                     __ptext25 0422                                       __ptext17 04AD  
                                     __ptext50 04A0                                       __ptext42 03F4  
                                     __ptext34 040E                                       __ptext26 041D  
                                     __ptext18 0446                                       __ptext51 05D3  
                                     __ptext43 0545                                       __ptext35 0650  
                                     __ptext27 0418                                       __ptext19 05F9  
                                     __ptext60 055D                                       __ptext52 04C7  
                                     __ptext44 050A                                       __ptext36 03FA  
                                     __ptext28 0413                                       __ptext53 03F1  
                                     __ptext45 04F9                                       __ptext37 0440  
                                     __ptext29 0464                                       __ptext54 03EE  
                                     __ptext46 04E8                                       __ptext38 0409  
                                     __ptext55 03EB                                       __ptext47 03E0  
                                     __ptext39 0401                                       __ptext56 0578  
                                     __ptext48 03DE                                       __ptext57 03E8  
                                     __ptext49 04D7                                       __ptext58 03E5  
                                     __ptext59 03E2                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216            __end_of_I2C_SetDataCompleteCallback 04AD  
                  _I2C_SetDataCompleteCallback 04A0                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 0427                                  __size_of_main 0066  
                    __end_of_ADC_GetConversion 0578                        ?_EUSART_SetErrorHandler 0070  
                              _I2C_SetCallback 05D3                  ??_I2C_SetDataCompleteCallback 0078  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                        ?_I2C_DO_SEND_ADR_READ 0070          __end_of_EUSART_SetFramingErrorHandler 0458  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0452  
                                 _SSP1STATbits 0214                       __end_of_I2C_MasterIsNack 0446  
                     __end_of_I2C_MasterSetIrq 03FD                                     _INTCONbits 000B  
               __end_of_I2C_DO_RX_NACK_RESTART 0436                        __size_of_WDT_Initialize 0004  
                                  ?_I2C_Poller 0070               __size_of_I2C_MasterEnableRestart 0003  
                                   _PMCON1bits 0195                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 0452                            _I2C_DO_SEND_RESTART 041D  
                __size_of_I2C_MasterDisableIrq 0003                               ??_ADC_Initialize 0070  
              __size_of_I2C_MasterWaitForEvent 0006  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                      __end_of_I2C_MasterClose 03E8                       __size_of_I2C_DO_TX_EMPTY 002F  
                             ??_UART_send_char 0070                        __end_of_I2C_MasterStart 03EE  
                                __pstringtext1 084A                                  __pstringtext2 0800  
                                __pstringtext3 0825                                  __pstringtext4 0000  
                         ?_I2C_DO_SEND_RESTART 0070                   __size_of_I2C_MasterGetRxData 0003  
                                   _TX1STAbits 019E                    __size_of_I2C_MasterClearIrq 0003  
                      __end_of_I2C_SetCallback 05F9                 __end_of_PIN_MANAGER_Initialize 06F3  
               __size_of_rd1RegCompleteHandler 0011                  __end_of_rd1RegCompleteHandler 04F9  
                       __size_of_I2C_DO_RX_ACK 0005                 __size_of_wr1RegCompleteHandler 0011  
                        __size_of_I2C_DO_RESET 0005                  __end_of_wr1RegCompleteHandler 051B  
                 __size_of_I2C_DO_ADDRESS_NACK 002C                     __size_of_ADC_GetConversion 001B  
                         __size_of_I2C_DO_IDLE 0005                           __size_of_I2C_DO_RCEN 0007  
                           __size_of_I2C_DO_RX 0046                             __size_of_I2C_DO_TX 0055  
